<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.MethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.DirectMethodHandle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.ClassLoader: void <clinit>()>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1: java.lang.Thread run()>/new java.lang.ThreadGroup/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.misc.FormattedFloatingDecimal: void <clinit>()>/new sun.misc.FormattedFloatingDecimal$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/6	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.Locale$Cache: java.util.Locale createObject(java.util.Locale$LocaleKey)>/new java.util.Locale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYAreaRenderer2: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void print(java.lang.StringBuilder,double,java.util.Locale,java.util.Formatter$Flags,char,int,boolean)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.util.locale.LanguageTag: void <clinit>()>/new java.lang.String[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/9	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: void <init>(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,java.lang.invoke.MemberName)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$GrantEntry parseGrantEntry()>/new sun.security.provider.PolicyParser$GrantEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.awt.font.TransformAttribute: void <clinit>()>/new java.awt.font.TransformAttribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.text.BreakIterator: java.text.BreakIterator getBreakInstance(java.util.Locale,int)>/new java.text.BreakIterator$BreakIteratorCache/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.gantt.SlidingGanttCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.lang.Object: void <init>()>/@this
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxes(int,java.util.List)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.category.CategoryDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(java.util.List,boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<java.security.Permissions: java.security.PermissionCollection getPermissionCollection(java.security.Permission,boolean)>/new java.security.PermissionsHash/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYShapeRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.ResourceBundle$Control: java.util.ResourceBundle newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean)>/new java.util.PropertyResourceBundle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/39	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.io.FilePermission: java.security.PermissionCollection newPermissionCollection()>/new java.io.FilePermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getInstance(java.lang.String)>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<class java.lang.invoke.MethodHandleImpl$ArrayAccessor>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLanguage(java.lang.String)>/new sun.util.locale.LocaleSyntaxException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.DefaultXYItemRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void <init>(byte[])>/new sun.security.pkcs.ParsingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.jar.Attributes: java.lang.String putValue(java.lang.String,java.lang.String)>/new java.util.jar.Attributes$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[] retrieveDisplayNamesImpl(java.lang.String,java.util.Locale)>/new java.util.concurrent.ConcurrentHashMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: java.lang.Comparable getSectionKey(int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.category.MinMaxCategoryRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<class sun.invoke.util.ValueConversions>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: void drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)>/new org.jfree.chart.plot.PieLabelRecord/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.zip.ZipFile$ZipEntryIterator: java.util.zip.ZipEntry next()>/new java.util.zip.ZipError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/32	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList$Itr: void <init>(java.util.ArrayList)>/@parameter0
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl$BindCaller: java.lang.invoke.MethodHandle restoreToType(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.Class)>/new java.lang.invoke.MethodHandleImpl$WrappedMember/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.DynamicTimeSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<java.util.TreeSet: void <clinit>()>/new java.lang.Object/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.security.ProtectionDomain$WeakProtectionDomainKey: void <clinit>()>/new java.security.ProtectionDomain$Key/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/11	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.text.MergeCollation: void fixEntry(java.text.PatternEntry)>/new java.text.ParseException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.misc.URLClassPath$JarLoader: sun.misc.Resource getResource(java.lang.String,boolean,java.util.Set)>/new sun.misc.InvalidJarIndexException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.util.calendar.CalendarSystem$1: java.util.Properties run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedFieldLambdaForm(byte,boolean,int)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultMultiValueCategoryDataset: void <init>()>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<sun.security.util.KeyUtil: void validateDHPublicKey(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>/new java.security.InvalidKeyException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.xy.DefaultWindDataset: void <init>(java.util.List,java.lang.Object[][][])>/new org.jfree.data.xy.WindDataItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.StringCoding: void <clinit>()>/new java.lang.ThreadLocal/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.Currency$1: java.lang.Void run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.time.Week::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.InvokerBytecodeGenerator: java.lang.invoke.MemberName resolveInvokerMember(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBubbleRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/21	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.PropertyPermission: java.security.PermissionCollection newPermissionCollection()>/new java.util.PropertyPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.time.FixedMillisecond::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack14
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.ClusteredXYBarRenderer: org.jfree.data.Range findDomainBoundsWithOffset(org.jfree.data.xy.IntervalXYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<sun.security.jca.ProviderList: void <init>()>/new sun.security.jca.ProviderConfig/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.nio.cs.US_ASCII: java.nio.charset.CharsetDecoder newDecoder()>/new sun.nio.cs.US_ASCII$Decoder/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.util.KeyUtil: void validateDHPublicKey(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>/new java.security.InvalidKeyException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.security.Permissions: java.security.PermissionCollection getUnresolvedPermissions(java.security.Permission)>/new java.security.PermissionsHash/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/6	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.StackedXYBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/35	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/19	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.text.DecimalFormat: java.text.FieldPosition[] expandAffix(java.lang.String)>/new java.text.FieldPosition/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.BoxAndWhiskerRenderer: void drawVerticalItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)>/new org.jfree.chart.renderer.Outlier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.X509Factory: java.security.cert.CRL engineGenerateCRL(java.io.InputStream)>/new java.security.cert.CRLException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedDomainCategoryPlot: void <init>()>/new org.jfree.chart.axis.CategoryAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.DeviationRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.category.GroupedStackedBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.Polygon/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.HashMap: java.util.HashMap$Node replacementNode(java.util.HashMap$Node,java.util.HashMap$Node)>/new java.util.HashMap$Node/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToRangeAxis(int,int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.DynamicTimeSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$5/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/14	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList: void grow(int)>/@this
<<immutable-hcontext>>	<java.util.Locale: void readObject(java.io.ObjectInputStream)>/new java.util.IllformedLocaleException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/8	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator(java.text.AttributedCharacterIterator$Attribute[],int,int)>/new java.text.AttributedString$AttributedStringIterator/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.text.DecimalFormat: java.lang.String fastFormat(double)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.jar.Attributes: void read(java.util.jar.Manifest$FastInputStream,byte[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedAreaRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<java.lang.invoke.AbstractValidatingLambdaMetafactory: void <init>(java.lang.invoke.MethodHandles$Lookup,java.lang.invoke.MethodType,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,java.lang.Class[],java.lang.invoke.MethodType[])>/new java.lang.invoke.LambdaConversionException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getRangeBounds(java.util.List,org.jfree.data.Range,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$Service/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: java.lang.Comparable getSectionKey(int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.time.TimeTableXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/17	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedRangeCategoryPlot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.OutlierListCollection: boolean add(org.jfree.chart.renderer.Outlier)>/new org.jfree.chart.renderer.OutlierList/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/27	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>/new org.jfree.data.DefaultKeyedValues/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.util.PolicyUtil: java.io.InputStream getInputStream(java.net.URL)>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.gantt.TaskSeriesCollection: java.lang.Number getStartValue(java.lang.Comparable,java.lang.Comparable)>/new java.lang.Long/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/15	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.WindItemRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.category.StackedBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.AbstractStringBuilder: java.lang.String substring(int,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class java.lang.ClassLoader>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.HighLowRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.java2d.StateTrackable$State: void <clinit>()>/new sun.java2d.StateTrackable$State/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.stream.AbstractTask: void setRawResult(java.lang.Object)>/new java.lang.IllegalStateException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.util.SignatureFileVerifier: java.security.CodeSigner[] getSigners(sun.security.pkcs.SignerInfo[],sun.security.pkcs.PKCS7)>/new java.security.CodeSigner[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.ssl.TrustManagerFactoryImpl: void engineInit(java.security.KeyStore)>/new java.security.KeyStoreException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/8	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: void addGrantEntry(sun.security.provider.PolicyParser$GrantEntry,java.security.KeyStore,sun.security.provider.PolicyFile$PolicyInfo)>/new sun.security.provider.PolicyFile$PolicyEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.xy.XIntervalSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#27#_4471
<<immutable-hcontext>>	<java.awt.font.TransformAttribute: void <clinit>()>/new java.awt.font.TransformAttribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,boolean,double,double)>/new org.jfree.chart.entity.XYItemEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MemberName resolveOrFail(byte,java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.gantt.XYTaskDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/13	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.axis.CategoryAxis3D::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/0	<<immutable-context>>	<java.util.ArrayList: int indexOf(java.lang.Object)>/@parameter0
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/30	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.jar.Attributes: java.lang.String putValue(java.lang.String,java.lang.String)>/new java.util.jar.Attributes$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.ResourceBundle$Control: java.util.ResourceBundle newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean)>/new java.util.PropertyResourceBundle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.WaterfallBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<org.jfree.data.xy.DefaultWindDataset: void <init>(java.util.List,java.lang.Object[][][])>/new org.jfree.data.xy.WindDataItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getDeferredInstance(sun.java2d.cmm.ProfileDeferralInfo)>/new java.awt.color.ICC_ProfileRGB/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/28	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.AxisLocation: void <clinit>()>/new org.jfree.chart.axis.AxisLocation/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.ssl.HandshakeMessage$CertificateVerify: java.security.Signature getSignature(sun.security.ssl.ProtocolVersion,java.lang.String)>/new java.security.SignatureException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.time.TimeSeriesDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.WaferMapRenderer: void makeValueIndex(java.lang.Number,java.lang.Number,java.util.Set)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<class java.lang.Class>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedRangeXYPlot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.jar.JarInputStream: java.util.jar.JarEntry checkManifest(java.util.jar.JarEntry)>/new java.util.jar.Manifest/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.axis.PeriodAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.awt.geom.Order3: void addInstance(java.util.Vector,double,double,double,double,double,double,double,double,int)>/new sun.awt.geom.Order3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: java.lang.invoke.LambdaForm getPreparedForm(java.lang.String)>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyParser$DomainEntry: void add(sun.security.provider.PolicyParser$KeyStoreEntry)>/new sun.security.provider.PolicyParser$ParsingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.gantt.SlidingGanttCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/6	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.xy.XYSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#27#_4471
<<immutable-hcontext>>	org.jfree.data.xy.XYSeries::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.DeviationRenderer: void drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new double[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>/new java.util.TreeMap$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxes(int,java.util.List)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.x509.CertificateExtensions: void encode(java.io.OutputStream,boolean)>/new java.security.cert.CertificateException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.axis.AxisState drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.entity.CategoryLabelEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.category.DefaultCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.category.WaterfallBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYDifferenceRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.jar.Manifest: void read(java.io.InputStream)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedLambdaForm(java.lang.invoke.MethodType,int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.axis.SegmentedTimeline$SegmentRange::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.util.locale.BaseLocale$Cache: sun.util.locale.BaseLocale createObject(sun.util.locale.BaseLocale$Key)>/new sun.util.locale.BaseLocale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/new java.util.TreeMap$Entry/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.xy.TableXYDataset,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<org.jfree.chart.plot.ThermometerPlot: void <init>(org.jfree.data.general.ValueDataset)>/new org.jfree.chart.axis.NumberAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/@parameter0
<<immutable-hcontext>>	<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal)>/new java.lang.ArithmeticException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.io.File: java.net.URL toURL()>/new java.net.MalformedURLException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.ChartUtilities: void saveChartAsJPEG(java.io.File,org.jfree.chart.JFreeChart,int,int,org.jfree.chart.ChartRenderingInfo)>/new java.io.FileOutputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getDeferredInstance(sun.java2d.cmm.ProfileDeferralInfo)>/new java.awt.color.ICC_Profile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/8	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/13	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.awt.geom.Order2: void addInstance(java.util.Vector,double,double,double,double,double,double,int)>/new sun.awt.geom.Order2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.misc.MetaIndex: void registerDirectory(java.io.File)>/new sun.misc.MetaIndex/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle$Accessor: java.lang.invoke.MethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.DirectMethodHandle$Accessor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.SamplingXYLineRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm spreadArgumentsForm(int,java.lang.Class,int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.nio.charset.CoderResult$Cache: java.nio.charset.CoderResult get(int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.Provider$Service: void addAttribute(java.lang.String,java.lang.String)>/new java.security.Provider$UString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.statistics.DefaultMultiValueCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.misc.URLClassPath$3: sun.misc.URLClassPath$Loader run()>/new sun.misc.URLClassPath$JarLoader/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedAreaRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYErrorRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.x509.RDN: void <init>(sun.security.util.DerValue)>/new sun.security.x509.AVA/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/9	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.axis.DateTickUnit::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.util.locale.BaseLocale: sun.util.locale.BaseLocale createInstance(java.lang.String,java.lang.String)>/new sun.util.locale.BaseLocale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.SamplingXYLineRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedRangeXYPlot: void <init>()>/new org.jfree.chart.axis.NumberAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.axis.DateAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxes(int,java.util.List)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>/new java.util.TreeMap$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: char conversion(java.lang.String)>/new java.util.UnknownFormatConversionException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$10/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class java.lang.Long>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/34	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/8	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.Permission getKnownInstance(java.lang.Class,java.lang.String,java.lang.String)>/new java.io.FilePermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.text.CharacterIteratorFieldDelegate: void formatted(java.text.Format$Field,java.lang.Object,int,int,java.lang.StringBuffer)>/new java.text.AttributedString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.io.PrintWriter: java.nio.charset.Charset toCharset(java.lang.String)>/new java.io.UnsupportedEncodingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.SeedGenerator$URLSeedGenerator$1: java.io.InputStream run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/11	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.Formatter$Flags: java.util.Formatter$Flags parse(char)>/new java.util.UnknownFormatFlagsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.ClassValue: void <init>()>/new java.lang.ClassValue$Version/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.jar.Manifest: void read(java.io.InputStream)>/new java.util.jar.Attributes/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.util.calendar.CalendarSystem$1: java.util.Properties run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.net.SocketInputStream: int read(byte[],int,int,int)>/new java.lang.ArrayIndexOutOfBoundsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.Long: java.lang.String toString(long,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.Invokers: java.lang.invoke.LambdaForm invokeHandleForm(java.lang.invoke.MethodType,boolean,int)>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.AreaRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.Permission getKnownInstance(java.lang.Class,java.lang.String,java.lang.String)>/new java.net.SocketPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<<main-thread>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle getDirectMethodCommon(byte,java.lang.Class,java.lang.invoke.MemberName,boolean,boolean,java.lang.Class)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.xy.XYIntervalDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/29	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.jdbc.JDBCCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/34	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.WindItemRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	<sun.awt.geom.AreaOp: void resolveLinks(java.util.Vector,java.util.Vector,java.util.Vector)>/new sun.awt.geom.ChainEnd/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.time.DynamicTimeSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.net.RegisteredDomain: void <clinit>()>/new java.util.HashSet/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.ClusteredXYBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/14	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.SubCategoryAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/17	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<class java.lang.invoke.MethodHandleImpl$BindCaller>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.misc.URLClassPath$FileLoader$1: java.io.InputStream getInputStream()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.category.BarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	org.jfree.data.statistics.HistogramDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#27#_4471
<<immutable-hcontext>>	org.jfree.data.category.SlidingCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<org.jfree.chart.title.LegendTitle: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>/new org.jfree.chart.entity.TitleEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.nio.DirectCharBufferRU: java.nio.CharBuffer put(char)>/new java.nio.ReadOnlyBufferException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.xy.XYIntervalDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.Long: java.lang.String toUnsignedString0(long,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.axis.SymbolAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.misc.FormattedFloatingDecimal: void <clinit>()>/new sun.misc.FormattedFloatingDecimal$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: java.lang.Comparable getSectionKey(int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.ClassValue$Entry: java.lang.ClassValue$Entry refreshVersion(java.lang.ClassValue$Version)>/new java.lang.ClassValue$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$ServiceKey/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.io.FileInputStream: void <init>(java.io.File)>/new java.io.FileNotFoundException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.x509.AVAKeyword: void <clinit>()>/new sun.security.x509.AVAKeyword/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.jar.JarFile: java.util.jar.Manifest getManifestFromReference()>/new java.util.jar.Manifest/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.ArrayList: java.util.Iterator iterator()>/new java.util.ArrayList$Itr/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#14#_4457
<<immutable-hcontext>>	<java.security.Signature$CipherAdapter: void engineSetParameter(java.lang.String,java.lang.Object)>/new java.security.InvalidParameterException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getUTF8String()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/6	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.text.TextBlock: void addLine(java.lang.String,java.awt.Font,java.awt.Paint)>/new org.jfree.chart.text.TextLine/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: boolean isConsistent(java.lang.String,java.lang.String,java.util.Hashtable)>/new java.util.Vector/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLanguage(java.lang.String)>/new sun.util.locale.LocaleSyntaxException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.nio.charset.CoderResult$Cache: java.nio.charset.CoderResult get(int)>/new java.lang.ref.WeakReference/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.String: java.lang.String valueOf(char[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.CyclicNumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.CyclicNumberAxis$CycleBoundTick/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MemberName resolveOrFail(byte,java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: void createIdentityForms()>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.reflect.annotation.AnnotationParser: java.lang.annotation.Annotation parseAnnotation2(java.nio.ByteBuffer,sun.reflect.ConstantPool,java.lang.Class,boolean,java.lang.Class[])>/new java.lang.TypeNotPresentException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.ref.Finalizer: void <clinit>()>/new java.lang.ref.Finalizer$FinalizerThread/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<class java.lang.Boolean>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.Toolkit: void loadAssistiveTechnologies()>/new java.awt.AWTError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.nio.charset.Charset: void <clinit>()>/new java.lang.ThreadLocal/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>/new org.jfree.data.DefaultKeyedValues/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.MemberName: void <init>(java.lang.reflect.Method,boolean)>/new java.lang.LinkageError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.text.AttributedCharacterIterator$Attribute: void <clinit>()>/new java.text.AttributedCharacterIterator$Attribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/32	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList$Itr: void remove()>/$stack4
<<immutable-hcontext>>	org.jfree.chart.axis.SegmentedTimeline$SegmentRange::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.block.LabelBlock: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>/new org.jfree.chart.entity.ChartEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.category.WaterfallBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm$BasicType: void <clinit>()>/new java.lang.invoke.LambdaForm$BasicType/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: void createIdentityForms()>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.x509.AVAKeyword: void <clinit>()>/new sun.security.x509.AVAKeyword/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.awt.font.TextAttribute: void <clinit>()>/new java.awt.font.TextAttribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.Permission getKnownInstance(java.lang.Class,java.lang.String,java.lang.String)>/new java.io.FilePermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.SpiderWebPlot: void drawRadarPoly(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotRenderingInfo,int,int,double,double)>/new org.jfree.chart.entity.CategoryItemEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.Character$CharacterCache: void <clinit>()>/new java.lang.Character/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.MultiplePiePlot: org.jfree.chart.LegendItemCollection getLegendItems()>/new org.jfree.chart.LegendItem/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getInstance(byte[])>/new java.awt.color.ICC_ProfileGray/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry: java.lang.Object setValue(java.lang.Object)>/new java.lang.ClassCastException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/29	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedDomainCategoryPlot: void <init>()>/new org.jfree.chart.axis.CategoryAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.awt.image.DirectColorModel: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.HashMap: java.util.HashMap$TreeNode replacementTreeNode(java.util.HashMap$Node,java.util.HashMap$Node)>/new java.util.HashMap$TreeNode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.Polygon/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.Character$CharacterCache: void <clinit>()>/new java.lang.Character/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.category.StackedAreaRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.font.NativeFont: sun.font.FontStrike createStrike(sun.font.FontStrikeDesc)>/new sun.font.DelegateStrike/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>/new java.security.MessageDigest$Delegate/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot3D: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.entity.PieSectionEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.x509.CRLExtensions: void init(sun.security.util.DerInputStream)>/new sun.security.x509.Extension/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl$BindCaller: java.lang.invoke.MethodHandle restoreToType(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.Class)>/new java.lang.invoke.MethodHandleImpl$WrappedMember/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.VectorRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.Short$ShortCache: void <clinit>()>/new java.lang.Short/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.misc.URLClassPath$JarLoader: java.util.jar.JarFile getJarFile(java.net.URL)>/new java.util.jar.JarFile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.jar.Manifest: void read(java.io.InputStream)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/24	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.DynamicTimeSeriesCollection: void findDomainLimits()>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty family(boolean,boolean)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPolicyParser$GrantEntry parseGrantEntry(java.util.Hashtable)>/new javax.crypto.CryptoPolicyParser$GrantEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.SubCategoryAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.time.Hour::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<class java.lang.System>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<sun.util.CoreResourceBundleControl: void <init>()>/new java.util.Locale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/18	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<java.lang.ClassLoader: java.security.ProtectionDomain preDefineClass(java.lang.String,java.security.ProtectionDomain)>/new java.lang.NoClassDefFoundError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.Locale$Category: void <clinit>()>/new java.util.Locale$Category/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYErrorRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.StandardXYItemRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.xy.TableXYDataset,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<java.io.ObjectInputStream$BlockDataInputStream: int readBlockHeader(boolean)>/new java.io.StreamCorruptedException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.axis.CyclicNumberAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.xy.VectorSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.jar.JarVerifier: java.security.cert.Certificate[] mapSignersToCertArray(java.security.CodeSigner[])>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/a#_4496
<<immutable-hcontext>>	<java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>/new java.awt.color.ICC_ColorSpace/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.time.ZoneOffset: java.time.ZoneOffset ofTotalSeconds(int)>/new java.time.ZoneOffset/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/11	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.TimeTableXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.String: java.lang.String substring(int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>/new java.util.zip.ZipFile$ZipFileInflaterInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getBMPString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.x509.X509CRLImpl: void parse(sun.security.util.DerValue)>/new sun.security.x509.X509CRLImpl$X509IssuerSerial/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/11	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	java.lang.String::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.xy.DefaultXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.category.CategoryDataset,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.category.CategoryDataset,org.jfree.data.KeyToGroupMap)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name cloneWithIndex(int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.ConditionalSpecialCasing: void <clinit>()>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.ref.Finalizer: void <clinit>()>/new java.lang.ref.Finalizer$FinalizerThread/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.net.InetAddress$Cache$Type: void <clinit>()>/new java.net.InetAddress$Cache$Type/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.general.DefaultPieDataset: void setValue(java.lang.Comparable,double)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/1	<<immutable-context>>	<java.lang.Integer: void <init>(int)>/l0#_0
<<immutable-hcontext>>	<sun.util.calendar.ZoneInfoFile$1: java.lang.Object run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/13	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.jar.JarVerifier: void processEntry(sun.security.util.ManifestEntryVerifier)>/new sun.security.util.SignatureFileVerifier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getRangeBounds(java.util.List,org.jfree.data.Range,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCCategoryDataset: void executeQuery(java.sql.Connection,java.lang.String)>/new java.lang.Long/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Arrays: java.util.List asList(java.lang.Object[])>/new java.util.Arrays$ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYAreaRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/14	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYShapeRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/19	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: void executeQuery(java.sql.Connection,java.lang.String)>/new java.util.ArrayList/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.util.logging.PlatformLogger$Level: void <clinit>()>/new sun.util.logging.PlatformLogger$Level/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$18/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/30	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MemberName resolveOrFail(byte,java.lang.Class,java.lang.String,java.lang.Class)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedLambdaForm(java.lang.invoke.MethodType,int)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.nio.DirectCharBufferRU: java.nio.CharBuffer put(char)>/new java.nio.ReadOnlyBufferException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>/new java.util.zip.ZipFile$ZipFileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.nio.fs.Globs: java.lang.String toRegexPattern(java.lang.String,boolean)>/new java.util.regex.PatternSyntaxException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<java.lang.ClassLoader: boolean loadLibrary0(java.lang.Class,java.io.File)>/new java.lang.ClassLoader$NativeLibrary/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/11	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.Character$UnicodeScript: void <clinit>()>/new java.lang.Character$UnicodeScript/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.util.SignatureFileVerifier: java.security.CodeSigner[] getSigners(sun.security.pkcs.SignerInfo[],sun.security.pkcs.PKCS7)>/new java.security.CodeSigner/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis3D: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.geom.Ellipse2D$Double/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYBubbleRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	org.jfree.data.xy.XYDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.provider.certpath.PKIX$ValidatorParams: void <init>(java.security.cert.CertPath,java.security.cert.PKIXParameters)>/new java.security.InvalidAlgorithmParameterException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/38	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.time.SimpleTimePeriod::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/36	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.axis.CategoryAxis3D::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeIntrinsic(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandleImpl$Intrinsic)>/new java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.x509.RDN: void <init>(sun.security.util.DerValue)>/new sun.security.x509.AVA/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/17	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$11/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.SymbolAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.xy.DefaultHighLowDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#27#_4471
<<immutable-hcontext>>	<sun.font.FileFontStrike: java.awt.geom.GeneralPath getGlyphOutline(int,float,float)>/new java.util.concurrent.ConcurrentHashMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseNetscapeCertChain(sun.security.util.DerValue)>/new java.security.cert.X509Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/18	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.HashMap: java.util.HashMap$Node replacementNode(java.util.HashMap$Node,java.util.HashMap$Node)>/new java.util.HashMap$Node/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.axis.SymbolAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYShapeRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/10	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.math.BigDecimal$UnsafeHolder: void <clinit>()>/new java.lang.ExceptionInInitializerError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.misc.FormattedFloatingDecimal$Form: void <clinit>()>/new sun.misc.FormattedFloatingDecimal$Form/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])>/new java.security.ProtectionDomain$Key/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<jdk.internal.org.objectweb.asm.Type: java.lang.String getInternalName()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/6	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/7	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseNetscapeCertChain(sun.security.util.DerValue)>/new java.security.cert.X509Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList: void ensureExplicitCapacity(int)>/l0#_0
<<immutable-hcontext>>	<class sun.misc.Unsafe>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseNetscapeCertChain(sun.security.util.DerValue)>/new sun.security.x509.X509CertImpl/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<javax.swing.JMenuBar: void setHelpMenu(javax.swing.JMenu)>/new java.lang.Error/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)>/new java.security.cert.X509Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.CyclicXYItemRenderer$OverwriteDataSet::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.category.CategoryDataset,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm$NamedFunction: void <init>(java.lang.reflect.Method)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<javax.crypto.JceSecurity: void loadPolicies(java.io.File,javax.crypto.CryptoPermissions,javax.crypto.CryptoPermissions)>/new java.util.jar.JarFile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<<main-thread-group>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<java.awt.font.TextLine: java.awt.font.TextLine standardCreateTextLine(java.awt.font.FontRenderContext,java.text.AttributedCharacterIterator,char[],float[])>/new java.awt.font.StyledParagraph/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	org.jfree.chart.axis.NumberAxis3D::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$6/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.misc.MessageUtils: void where()>/new java.lang.Throwable/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.nio.CharBuffer: java.nio.CharBuffer get(char[],int,int)>/new java.nio.BufferUnderflowException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$Service/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.xy.XYSeries getSeries(java.lang.Comparable)>/new org.jfree.data.UnknownKeyException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.BasicPermission: java.security.PermissionCollection newPermissionCollection()>/new java.security.BasicPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.PeriodAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.OutlierListCollection: boolean add(org.jfree.chart.renderer.Outlier)>/new org.jfree.chart.renderer.OutlierList/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.locale.provider.LocaleResources: void <clinit>()>/new java.lang.Object/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToDomainAxis(int,int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.misc.FormattedFloatingDecimal: void <clinit>()>/new sun.misc.FormattedFloatingDecimal$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm spreadArgumentsForm(int,java.lang.Class,int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedLambdaForm(java.lang.invoke.MethodType,int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: void addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double)>/new org.jfree.chart.entity.CategoryItemEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<java.awt.image.ColorModel: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<java.lang.Long: java.lang.String toString(long,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(byte,java.lang.Class,java.lang.invoke.MemberName)>/new java.lang.invoke.DirectMethodHandle$StaticAccessor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.Permission getKnownInstance(java.lang.Class,java.lang.String,java.lang.String)>/new java.lang.RuntimePermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.VectorRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/8	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.jar.Manifest: void read(java.io.InputStream)>/new java.util.jar.Attributes/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.SpreadsheetDate::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.LogarithmicAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.security.Security: void initialize()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.xy.VectorDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.locale.provider.LocaleResources: java.lang.String[][] getZoneStrings()>/new java.lang.String[][]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>/new javax.crypto.NoSuchPaddingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.AxisLocation: void <clinit>()>/new org.jfree.chart.axis.AxisLocation/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.ClusteredXYBarRenderer: org.jfree.data.Range findDomainBoundsWithOffset(org.jfree.data.xy.IntervalXYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<sun.font.FileFontStrike: java.awt.geom.Point2D$Float getGlyphMetrics(int,boolean)>/new java.util.concurrent.ConcurrentHashMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.MemberName: void <init>(java.lang.reflect.Method,boolean)>/new java.lang.AbstractMethodError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.security.Signature: void <clinit>()>/new sun.security.jca.ServiceId/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle$StaticAccessor: java.lang.invoke.MethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.DirectMethodHandle$StaticAccessor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getRangeBounds(java.util.List,org.jfree.data.Range,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<java.lang.Double: java.lang.Double valueOf(double)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/20	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.DynamicTimeSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack32
<<immutable-hcontext>>	<org.jfree.chart.ChartRenderingInfo: void <init>(org.jfree.chart.entity.EntityCollection)>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void <init>(byte[])>/new sun.security.pkcs.ParsingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.Character$UnicodeBlock: void <clinit>()>/new java.lang.Character$UnicodeBlock/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.nio.charset.CoderResult$Cache: java.nio.charset.CoderResult get(int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.StandardXYItemRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	java.util.Locale::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.ProcessEnvironment$StringEntrySet$1: java.util.Map$Entry next()>/new java.lang.ProcessEnvironment$StringEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.image.SinglePixelPackedSampleModel: java.awt.image.SampleModel createSubsetSampleModel(int[])>/new java.awt.image.RasterFormatException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle$Special: java.lang.invoke.MethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.DirectMethodHandle$Special/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/24	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.misc.FormattedFloatingDecimal: void <clinit>()>/new sun.misc.FormattedFloatingDecimal$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.xy.NormalizedMatrixSeries::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.String: java.lang.String substring(int,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.time.Hour::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>/new org.jfree.chart.title.LegendItemBlockContainer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.LinkedHashMap: java.util.HashMap$TreeNode replacementTreeNode(java.util.HashMap$Node,java.util.HashMap$Node)>/new java.util.HashMap$TreeNode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.Polygon/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.DefaultXYItemRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getUTF8String()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$18/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$ServiceKey/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/19	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/29	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyFile$4: java.lang.Void run()>/new sun.security.provider.PolicyFile$PolicyEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/1	<<immutable-context>>	<java.util.Arrays$ArrayList: boolean contains(java.lang.Object)>/@parameter0
<<immutable-hcontext>>	<sun.nio.fs.Globs: java.lang.String toRegexPattern(java.lang.String,boolean)>/new java.util.regex.PatternSyntaxException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.category.DefaultCategoryItemRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: boolean isConsistent(java.lang.String,java.lang.String,java.util.Hashtable)>/new java.util.Vector/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getInstance(byte[])>/new java.awt.color.ICC_ProfileGray/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.xy.TableXYDataset,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<java.math.BigInteger: void <clinit>()>/new java.math.BigInteger[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.gantt.TaskSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/25	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.security.Security: void initialize()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.xy.DefaultWindDataset: void <init>(java.util.List,java.lang.Object[][][])>/new org.jfree.data.xy.WindDataItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.ChartRenderingInfo: void clear()>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<class java.lang.invoke.MethodHandle>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<<main-thread>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray(java.lang.Object[])>/new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.VectorRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<java.awt.Font: sun.font.FontLineMetrics defaultLineMetrics(java.awt.font.FontRenderContext)>/new sun.font.FontLineMetrics/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getRangeBounds(java.util.List,org.jfree.data.Range,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYAreaRenderer2: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: int index(java.lang.String)>/new java.lang.AssertionError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/11	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/new java.security.cert.X509Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry: java.lang.Object setValue(java.lang.Object)>/new java.lang.ClassCastException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.jar.JarFile: java.util.jar.Manifest getManifestFromReference()>/new java.util.jar.Manifest/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.awt.image.ColorModel: byte[] getGray16TosRGB8LUT(java.awt.color.ICC_ColorSpace)>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<javax.swing.JMenuBar: void setHelpMenu(javax.swing.JMenu)>/new java.lang.Error/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$4/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>/new java.security.Provider$EngineDescription/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)>/new java.security.Permissions/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.Integer$IntegerCache: void <clinit>()>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm bindArgumentForm(int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: int precision(java.lang.String)>/new java.util.IllegalFormatPrecisionException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Formatter$BigDecimalLayoutForm: void <clinit>()>/new java.util.Formatter$BigDecimalLayoutForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.ssl.InputRecord: void read(java.io.InputStream,java.io.OutputStream)>/new java.io.EOFException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.Week::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.LinkedHashMap: java.util.HashMap$TreeNode replacementTreeNode(java.util.HashMap$Node,java.util.HashMap$Node)>/new java.util.HashMap$TreeNode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: void createIdentityForms()>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.MemberName: void <init>(java.lang.reflect.Method,boolean)>/new java.lang.LinkageError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.awt.font.TextLine: java.awt.font.TextLine standardCreateTextLine(java.awt.font.FontRenderContext,java.text.AttributedCharacterIterator,char[],float[])>/new java.awt.font.StyledParagraph/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setExtensions(java.util.List,java.lang.String)>/new sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/25	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$15/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/24	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.Color: void <clinit>()>/new java.awt.Color/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>/new java.awt.geom.NoninvertibleTransformException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(java.util.List,boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<class java.lang.Double>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.String: java.lang.String copyValueOf(char[],int,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.PeriodAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<class java.lang.Byte>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.BoxAndWhiskerRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<javax.crypto.JceSecurity: void <clinit>()>/new java.net.URL/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.font.FileFont: sun.font.FontStrike createStrike(sun.font.FontStrikeDesc)>/new sun.font.FileFontStrike/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPolicyParser$CryptoPermissionEntry parsePermissionEntry(java.util.Hashtable)>/new javax.crypto.CryptoPolicyParser$CryptoPermissionEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.xy.YIntervalDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer: void drawVerticalItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new org.jfree.chart.renderer.Outlier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void checkNumeric()>/new java.util.IllegalFormatFlagsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.awt.geom.AreaOp: void resolveLinks(java.util.Vector,java.util.Vector,java.util.Vector)>/new sun.awt.geom.ChainEnd/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYErrorRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToRangeAxes(int,java.util.List)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.category.LineAndShapeRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void printCharacter(java.lang.Object)>/new java.util.IllegalFormatCodePointException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.HashMap: java.util.HashMap$TreeNode newTreeNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)>/new java.util.HashMap$TreeNode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.general.DefaultPieDataset: void setValue(java.lang.Comparable,double)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.x509.CertificateExtensions: void encode(java.io.OutputStream,boolean)>/new java.security.cert.CertificateException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)>/new java.nio.charset.CoderMalfunctionError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.category.DefaultCategoryItemRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<sun.util.locale.LocaleExtensions: void <init>(java.util.Map,java.util.Set,java.util.Map)>/new sun.util.locale.Extension/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getInstance(byte[])>/new java.awt.color.ICC_ProfileRGB/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList: int access$100(java.util.ArrayList)>/l0#_0
<<immutable-hcontext>>	<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>/new java.util.zip.ZipFile$ZipFileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.axis.DateTickUnit::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<class java.lang.Class>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.TreeMap$DescendingKeySpliterator: void forEachRemaining(java.util.function.Consumer)>/new java.lang.NullPointerException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.HashMap: java.util.HashMap$Node newNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)>/new java.util.HashMap$Node/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor$Transform$Kind: void <clinit>()>/new java.lang.invoke.LambdaFormEditor$Transform$Kind/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>/new sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<sun.java2d.StateTrackable$State: void <clinit>()>/new sun.java2d.StateTrackable$State/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>/new java.awt.geom.NoninvertibleTransformException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getGeneralString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/12	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/28	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.VectorRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/15	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.awt.geom.AreaOp: java.util.Vector pruneEdges(java.util.Vector)>/new sun.awt.geom.CurveLink/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.StringCoding: char[] decode(java.lang.String,byte[],int,int)>/new java.lang.StringCoding$StringDecoder/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1: java.lang.Thread run()>/new java.lang.ThreadGroup/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.x509.CertificateExtensions: void parseExtension(sun.security.x509.Extension)>/new sun.security.x509.UnparseableExtension/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.MemberName: java.lang.IllegalAccessException makeAccessException(java.lang.String,java.lang.Object)>/new java.lang.IllegalAccessException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.awt.geom.AreaOp: void addEdges(java.util.Vector,java.util.Vector,int)>/new sun.awt.geom.Edge/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class sun.misc.Unsafe>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.jdbc.JDBCCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedRangeXYPlot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.util.SecurityConstants: void <clinit>()>/new java.net.SocketPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/14	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.misc.JarIndex: void addToList(java.lang.String,java.lang.String,java.util.HashMap)>/new java.util.LinkedList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/17	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.Invokers: java.lang.invoke.LambdaForm invokeHandleForm(java.lang.invoke.MethodType,boolean,int)>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: void addGrantEntry(sun.security.provider.PolicyParser$GrantEntry,java.security.KeyStore,sun.security.provider.PolicyFile$PolicyInfo)>/new sun.security.provider.PolicyFile$SelfPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/21	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.StackedXYAreaRenderer2::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<javax.crypto.JceSecurity: void loadPolicies(java.io.File,javax.crypto.CryptoPermissions,javax.crypto.CryptoPermissions)>/new java.util.jar.JarFile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToRangeAxes(int,java.util.List)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<class java.lang.Object[]>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.io.FileInputStream: void <init>(java.io.File)>/new java.io.FileNotFoundException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.util.locale.provider.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.x509.X509CertImpl: java.lang.Object get(java.lang.String)>/new java.security.cert.CertificateParsingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.x509.X509CRLImpl: void parse(sun.security.util.DerValue)>/new sun.security.x509.X509CRLEntryImpl/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>/new java.security.MessageDigest$Delegate/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.io.ByteArrayOutputStream: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.System: void initializeSystemClass()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<java.time.temporal.ChronoUnit: void <clinit>()>/new java.time.temporal.ChronoUnit/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$Service/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.CyclicXYItemRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	<sun.awt.geom.Order2: void addInstance(java.util.Vector,double,double,double,double,double,double,int)>/new sun.awt.geom.Order2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.io.PrintWriter: java.nio.charset.Charset toCharset(java.lang.String)>/new java.io.UnsupportedEncodingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: void activateDeferredProfile()>/new java.awt.color.ProfileDataException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPolicyParser$CryptoPermissionEntry parsePermissionEntry(java.util.Hashtable)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.misc.Unsafe: void <clinit>()>/new java.lang.String[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	java.lang.Character::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.misc.Launcher$AppClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>/new java.lang.RuntimePermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.certpath.X509CertPath: byte[] encodePKIPATH()>/new java.security.cert.CertificateEncodingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.TreeMap$DescendingKeySpliterator: void forEachRemaining(java.util.function.Consumer)>/new java.util.ConcurrentModificationException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.Boolean: void <clinit>()>/new java.lang.Boolean/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.statistics.HistogramDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void printCharacter(java.lang.Object)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getInstance(byte[])>/new java.awt.color.ICC_ProfileRGB/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.RingPlot: void drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)>/new org.jfree.chart.entity.PieSectionEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	<java.util.Locale: void readObject(java.io.ObjectInputStream)>/new java.util.IllformedLocaleException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/14	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.misc.MetaIndex: void registerDirectory(java.io.File)>/new sun.misc.MetaIndex/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.Integer: java.lang.Integer valueOf(int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/24	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.security.Permissions: java.security.PermissionCollection getUnresolvedPermissions(java.security.Permission)>/new java.security.PermissionsHash/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<class java.lang.ClassLoader>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseNetscapeCertChain(sun.security.util.DerValue)>/new sun.security.x509.X509CertImpl/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.Integer: java.lang.String toString(int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/17	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class java.lang.Object[]>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$13/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.axis.DateTickUnit::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/16	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYDotRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	<sun.security.util.DisabledAlgorithmConstraints$Constraints: void <init>(java.lang.String[])>/new sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.Axis: org.jfree.chart.axis.AxisState drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.entity.AxisLabelEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.font.TrueTypeFont: void <init>(java.lang.String,java.lang.Object,int,boolean,boolean)>/new java.awt.FontFormatException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.zip.ZipFile: java.util.zip.Inflater getInflater()>/new java.util.zip.Inflater/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPermission[] getPermissions()>/new javax.crypto.CryptoPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)>/new java.nio.charset.CoderMalfunctionError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.Font: java.awt.Font getFont(java.util.Map)>/new java.awt.Font/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/14	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.math.BigInteger: java.math.BigInteger valueOf(long)>/new java.math.BigInteger/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.String: java.lang.String replace(char,char)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.awt.Font: java.awt.Font getFont(java.util.Map)>/new java.awt.Font/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.nio.channels.spi.AbstractInterruptibleChannel: void end(boolean)>/new java.nio.channels.AsynchronousCloseException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.zip.ZipInputStream: void <init>(java.io.InputStream,java.nio.charset.Charset)>/new java.util.zip.Inflater/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.ClassLoader: void loadLibrary(java.lang.Class,java.lang.String,boolean)>/new java.lang.UnsatisfiedLinkError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.Formatter: java.util.Formatter$FormatString[] parse(java.lang.String)>/new java.util.Formatter$FixedString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/21	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.xy.XYIntervalSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.awt.geom.Path2D$Float: void needRoom(boolean,int)>/new java.awt.geom.IllegalPathStateException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/1	<<immutable-context>>	<java.util.LinkedList: int indexOf(java.lang.Object)>/l1#_0
<<immutable-hcontext>>	<sun.util.locale.provider.LocaleProviderAdapter$Type: void <clinit>()>/new sun.util.locale.provider.LocaleProviderAdapter$Type/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList: void ensureCapacityInternal(int)>/@this
<<immutable-hcontext>>	<java.lang.invoke.MemberName$Factory: java.lang.invoke.MemberName[] newMemberBuffer(int)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.jca.ProviderList: sun.security.jca.ProviderList getJarList(java.lang.String[])>/new sun.security.jca.ProviderConfig/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.Polygon/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getInstance(byte[])>/new java.awt.color.ICC_ProfileGray/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<method type ()java.util.Comparator>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.font.TrueTypeFont: void <init>(java.lang.String,java.lang.Object,int,boolean,boolean)>/new sun.font.TrueTypeFont$TTDisposerRecord/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>/new javax.crypto.NoSuchPaddingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: java.lang.invoke.LambdaForm$Name[] buildEmptyNames(int,java.lang.String)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.time.temporal.ChronoField: void <clinit>()>/new java.time.temporal.ChronoField/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty family(boolean,boolean)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.misc.URLClassPath$FileLoader$1: java.io.InputStream getInputStream()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.String: java.lang.String replace(char,char)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.DynamicTimeSeriesCollection: void findDomainLimits()>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<org.jfree.chart.axis.ValueAxis: org.jfree.chart.axis.AxisState drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/6	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/15	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<java.lang.Long: java.lang.String toUnsignedString0(long,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.BasicPermission: java.security.PermissionCollection newPermissionCollection()>/new java.security.BasicPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/0	<<immutable-context>>	<java.util.Arrays$ArrayList: boolean contains(java.lang.Object)>/@parameter0
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/26	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.util.DerIndefLenConverter: int parseLength()>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<class java.lang.invoke.CallSite>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.MultiplePiePlot: org.jfree.chart.LegendItemCollection getLegendItems()>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.awt.geom.Order1: sun.awt.geom.Curve getSubCurve(double,double,int)>/new sun.awt.geom.Order1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYLineAndShapeRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$14/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.servlet.ServletUtilities: void sendTempFile(java.io.File,javax.servlet.http.HttpServletResponse,java.lang.String)>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.category.GroupedStackedBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.category.DefaultCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$7/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYErrorRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedAreaRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.YIntervalRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<java.lang.ClassLoader: java.lang.Class findClass(java.lang.String)>/new java.lang.ClassNotFoundException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.DeviationRenderer: void drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new double[]/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.math.RoundingMode: void <clinit>()>/new java.math.RoundingMode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.PeriodAxis: void drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.Invokers: java.lang.invoke.LambdaForm invokeHandleForm(java.lang.invoke.MethodType,boolean,int)>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<java.lang.Character$UnicodeScript: void <clinit>()>/new java.lang.Character$UnicodeScript/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToRangeAxes(int,java.util.List)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1: java.lang.Thread run()>/new java.lang.Thread/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYDotRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.category.SlidingCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.util.DisabledAlgorithmConstraints$Constraints: void <init>(java.lang.String[])>/new sun.security.util.DisabledAlgorithmConstraints$jdkCAConstraint/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.axis.LogAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList: void <init>()>/@this
<<immutable-hcontext>>	<java.lang.ClassValue: void <init>()>/new java.lang.ClassValue$Version/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: int width(java.lang.String)>/new java.util.IllegalFormatWidthException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.text.CharacterIteratorFieldDelegate: java.text.AttributedCharacterIterator getIterator(java.lang.String)>/new java.text.AttributedString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.x509.X509Key: java.security.PublicKey buildX509Key(sun.security.x509.AlgorithmId,sun.security.util.BitArray)>/new java.lang.InstantiationException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void print(java.lang.StringBuilder,double,java.util.Locale,java.util.Formatter$Flags,char,int,boolean)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: void <clinit>()>/new java.awt.BasicStroke/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.LogarithmicAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.general.DefaultPieDataset: void setValue(java.lang.Comparable,double)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.text.MessageFormat$Field: void <clinit>()>/new java.text.MessageFormat$Field/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$DomainEntry parseDomainEntry()>/new sun.security.provider.PolicyParser$DomainEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.category.BarRenderer3D::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/10	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>/new org.jfree.chart.block.LabelBlock/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.category.StackedAreaRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/23	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.xy.TableXYDataset,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<sun.security.util.ObjectIdentifier: sun.security.util.ObjectIdentifier newInternal(int[])>/new sun.security.util.ObjectIdentifier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/24	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$5/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.ClassValue: java.lang.ClassValue$Entry makeEntry(java.lang.ClassValue$Version,java.lang.Object)>/new java.lang.ClassValue$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getRangeBounds(java.util.List,org.jfree.data.Range,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation_$$A_4#_4459
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/19	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/0	<<immutable-context>>	<java.util.LinkedList: int indexOf(java.lang.Object)>/@parameter0
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList$Itr: void checkForComodification()>/$stack1
<<immutable-hcontext>>	org.jfree.data.time.TimeSeries::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/9	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.util.CoreResourceBundleControl: void <init>()>/new java.util.Locale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getIA5String()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.Float: java.lang.Float valueOf(float)>/new java.lang.Float/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.net.URLClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>/new java.io.FilePermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.misc.URLClassPath$3: sun.misc.URLClassPath$Loader run()>/new sun.misc.URLClassPath$FileLoader/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.net.SocksSocketImpl: void connect(java.net.SocketAddress,int)>/new java.net.UnknownHostException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.TreeMap$DescendingKeySpliterator: void forEachRemaining(java.util.function.Consumer)>/new java.util.ConcurrentModificationException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<class java.lang.Float>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.java2d.Disposer: void addObjectRecord(java.lang.Object,sun.java2d.DisposerRecord)>/new java.lang.ref.WeakReference/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.certpath.PKIX$ValidatorParams: void <init>(java.security.cert.CertPath,java.security.cert.PKIXParameters)>/new java.security.InvalidAlgorithmParameterException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.Toolkit$1: java.lang.String run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)>/new java.nio.charset.CoderMalfunctionError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList: boolean addAll(java.util.Collection)>/@this
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name withConstraint(java.lang.Object)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.locale.provider.LocaleServiceProviderPool: java.util.Locale getLookupLocale(java.util.Locale)>/new java.util.Locale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.io.UnixFileSystem: java.lang.String[] list(java.io.File)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.java2d.HeadlessGraphicsEnvironment: java.awt.GraphicsDevice[] getScreenDevices()>/new java.awt.HeadlessException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: void <clinit>()>/new java.awt.BasicStroke/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.WaferMapRenderer: void makePositionIndex(java.util.Set)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList: void ensureExplicitCapacity(int)>/l0#_0
<<immutable-hcontext>>	<org.jfree.chart.JFreeChartInfo: void <init>()>/new org.jfree.chart.ui.Contributor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.pkcs.PKCS9Attributes: byte[] decode(sun.security.util.DerInputStream)>/new sun.security.pkcs.PKCS9Attribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.StackedXYAreaRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray()>/new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.jar.Attributes: void read(java.util.jar.Manifest$FastInputStream,byte[])>/new java.lang.String/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<class sun.misc.Unsafe>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.FastScatterPlot: void <init>()>/new org.jfree.chart.axis.NumberAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/@parameter0
<<immutable-hcontext>>	<java.nio.charset.CoderResult$2: java.nio.charset.CoderResult create(int)>/new java.nio.charset.CoderResult/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.security.Signature$Delegate: void chooseFirstProvider()>/new java.lang.Exception/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.util.ManifestDigester: void <init>(byte[])>/new sun.security.util.ManifestDigester$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYDotRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.Short$ShortCache: void <clinit>()>/new java.lang.Short/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPolicyParser$GrantEntry parseGrantEntry(java.util.Hashtable)>/new javax.crypto.CryptoPolicyParser$GrantEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle$StaticAccessor: java.lang.invoke.MethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.DirectMethodHandle$StaticAccessor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/8	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.StackedXYBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.StringCoding: byte[] encode(java.lang.String,char[],int,int)>/new java.lang.StringCoding$StringEncoder/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.xy.XYDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.time.TimePeriodValues::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.nio.file.LinkOption: void <clinit>()>/new java.nio.file.LinkOption/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<mock string concatenation result>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.MeterPlot: org.jfree.chart.LegendItemCollection getLegendItems()>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.cert.Certificate[] getSignerCertificates(java.security.CodeSource)>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.ConditionalSpecialCasing: void <clinit>()>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/21	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.xy.TableXYDataset,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<java.awt.Font: java.awt.Font deriveFont(java.util.Map)>/new java.awt.Font/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.time.DynamicTimeSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#27#_4471
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/18	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultMultiValueCategoryDataset: void <init>()>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: void addGrantEntry(sun.security.provider.PolicyParser$GrantEntry,java.security.KeyStore,sun.security.provider.PolicyFile$PolicyInfo)>/new sun.security.provider.PolicyFile$PolicyEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.stream.Node: java.util.stream.Node getChild(int)>/new java.lang.IndexOutOfBoundsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/25	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm collectArgumentArrayForm(int,java.lang.invoke.MethodHandle)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(byte,java.lang.Class,java.lang.invoke.MemberName)>/new java.lang.invoke.DirectMethodHandle$Special/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.StringBuffer: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.category.DefaultCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.CyclicXYItemRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/18	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.LambdaForm makeReinvokerForm(java.lang.invoke.MethodHandle,int,java.lang.Object,java.lang.String,boolean,java.lang.invoke.LambdaForm$NamedFunction,java.lang.invoke.LambdaForm$NamedFunction)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedLambdaForm(java.lang.invoke.MethodType,int)>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$16/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.BarRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.awt.geom.Order1: sun.awt.geom.Curve getReversedCurve()>/new sun.awt.geom.Order1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.awt.geom.Order3: void addInstance(java.util.Vector,double,double,double,double,double,double,double,double,int)>/new sun.awt.geom.Order3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.FileFontStrike: java.awt.geom.GeneralPath getGlyphOutline(int,float,float)>/new java.util.concurrent.ConcurrentHashMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.net.URI$Parser: void fail(java.lang.String)>/new java.net.URISyntaxException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.AxisLocation: void <clinit>()>/new org.jfree.chart.axis.AxisLocation/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.ExtendedCategoryAxis: org.jfree.chart.text.TextBlock createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)>/new org.jfree.chart.text.TextLine/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.misc.FormattedFloatingDecimal$Form: void <clinit>()>/new sun.misc.FormattedFloatingDecimal$Form/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)>/new java.security.cert.X509Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.nio.file.spi.FileSystemProvider: java.nio.file.FileSystem newFileSystem(java.nio.file.Path,java.util.Map)>/new java.lang.UnsupportedOperationException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.net.URLClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>/new java.net.SocketPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.category.AreaRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.axis.SegmentedTimeline$SegmentRange::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/8	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.category.CategoryDataset,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<java.lang.AbstractStringBuilder: java.lang.String substring(int,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.category.GanttRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/33	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.zip.ZipFile: java.util.zip.Inflater getInflater()>/new java.util.zip.Inflater/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermission[] getMinimum(int,java.security.PermissionCollection)>/new javax.crypto.CryptoPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.net.InetAddress$Cache: java.net.InetAddress$Cache put(java.lang.String,java.net.InetAddress[])>/new java.net.InetAddress$CacheEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer: void drawVerticalItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new org.jfree.chart.renderer.Outlier/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.net.URLClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>/new java.io.FilePermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.x509.CertificateExtensions: void init(sun.security.util.DerInputStream)>/new sun.security.x509.Extension/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.ExtendedCategoryAxis: org.jfree.chart.text.TextBlock createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)>/new org.jfree.chart.text.TextFragment/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToDomainAxes(int,java.util.List)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/new java.util.TreeMap$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/17	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.nio.ch.Util: void <clinit>()>/new sun.nio.ch.Util$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.security.UnresolvedPermission: java.security.PermissionCollection newPermissionCollection()>/new java.security.UnresolvedPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.ProcessEnvironment$Variable: java.lang.ProcessEnvironment$Variable valueOf(byte[])>/new java.lang.ProcessEnvironment$Variable/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/9	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.Axis: void createAndAddEntity(double,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.entity.AxisEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.util.DerIndefLenConverter: int parseLength()>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/25	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.x509.OIDMap: void addInternal(java.lang.String,sun.security.util.ObjectIdentifier,java.lang.String)>/new sun.security.x509.OIDMap$OIDInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPolicyParser$CryptoPermissionEntry parsePermissionEntry(java.util.Hashtable)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>/new org.jfree.data.DefaultKeyedValues/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/23	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.LinkedHashMap: java.util.HashMap$TreeNode newTreeNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)>/new java.util.HashMap$TreeNode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.xy.DefaultXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#27#_4471
<<immutable-hcontext>>	<sun.misc.FloatingDecimal: void <clinit>()>/new sun.misc.FloatingDecimal$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: void <clinit>()>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.provider.SeedGenerator$URLSeedGenerator$1: java.io.InputStream run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)>/new sun.security.pkcs.SignerInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.ClusteredXYBarRenderer: org.jfree.data.Range findDomainBoundsWithOffset(org.jfree.data.xy.IntervalXYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<java.awt.image.BufferedImage: void <init>(int,int,int)>/new java.awt.image.DirectColorModel/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.misc.FormattedFloatingDecimal$Form: void <clinit>()>/new sun.misc.FormattedFloatingDecimal$Form/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.font.StandardGlyphVector$GlyphStrike: sun.font.StandardGlyphVector$GlyphStrike create(sun.font.StandardGlyphVector,java.awt.geom.AffineTransform,java.awt.geom.AffineTransform)>/new sun.font.StandardGlyphVector$GlyphStrike/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.Character: java.lang.Character valueOf(char)>/new java.lang.Character/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.nio.file.spi.FileSystemProvider: java.nio.file.FileSystem newFileSystem(java.nio.file.Path,java.util.Map)>/new java.lang.UnsupportedOperationException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.axis.PeriodAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.JFreeChart: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)>/new org.jfree.chart.entity.JFreeChartEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/14	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$ServiceKey/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeWrappedMember(java.lang.invoke.MethodHandle,java.lang.invoke.MemberName,boolean)>/new java.lang.invoke.MethodHandleImpl$WrappedMember/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor$Transform$Kind: void <clinit>()>/new java.lang.invoke.LambdaFormEditor$Transform$Kind/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/15	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.TimePeriodValuesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.category.CategoryDataset,org.jfree.data.KeyToGroupMap)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/10	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.xy.DefaultWindDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.ClassValue: void <init>()>/new java.lang.ClassValue$Identity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/29	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.ResourceBundle$Control: java.util.ResourceBundle newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean)>/new java.util.PropertyResourceBundle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.VectorRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.YIntervalRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<class sun.invoke.util.ValueConversions>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/29	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/mappedDatasets#_4428
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/20	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.misc.Launcher: java.io.File[] getClassPath(java.lang.String)>/new java.io.File/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: void drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)>/new org.jfree.chart.entity.PieSectionEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.category.StackedBarRenderer3D::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: int index(java.lang.String)>/new java.lang.AssertionError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.x509.OIDMap: void addInternal(java.lang.String,sun.security.util.ObjectIdentifier,java.lang.String)>/new sun.security.x509.OIDMap$OIDInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.misc.ExtensionDependency$1: java.util.jar.Manifest run()>/new java.util.jar.JarFile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$5/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.font.TrueTypeFont: java.lang.String makeString(byte[],int,short)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.BoundMethodHandle$Species_L: java.lang.invoke.BoundMethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.BoundMethodHandle$Species_L/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.BoundMethodHandle$Species_L: java.lang.invoke.BoundMethodHandle make(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,java.lang.Object)>/new java.lang.invoke.BoundMethodHandle$Species_L/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/10	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.regex.Pattern$CharPropertyNames: void defCtype(java.lang.String,int)>/new java.util.regex.Pattern$CharPropertyNames$3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.xy.XYIntervalDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/16	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: void computeInitialPreparedForms()>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/27	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle makeAllocator(java.lang.invoke.MemberName)>/new java.lang.invoke.DirectMethodHandle$Constructor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<class int[]>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>/new java.security.spec.InvalidKeySpecException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: java.util.List createStackedValueList(org.jfree.data.category.CategoryDataset,java.lang.Comparable,int[],double,boolean)>/new java.lang.Object[]/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.net.SocketInputStream: int read(byte[],int,int,int)>/new java.lang.ArrayIndexOutOfBoundsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/21	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$5/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.category.CategoryDataset,org.jfree.data.KeyToGroupMap)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<java.nio.file.LinkOption: void <clinit>()>/new java.nio.file.LinkOption/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYAreaRenderer2: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: void addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double)>/new org.jfree.chart.entity.CategoryItemEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<java.lang.System: void initializeSystemClass()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getInstance(byte[])>/new java.awt.color.ICC_Profile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.font.StrikeCache: java.lang.ref.Reference getStrikeRef(sun.font.FontStrike,boolean)>/new sun.font.StrikeCache$SoftDisposerRef/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.Toolkit: void loadAssistiveTechnologies()>/new java.awt.AWTError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/16	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: void run()>/new java.lang.Thread/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.time.ohlc.OHLCSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYStepRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<javax.swing.JMenuBar: void setHelpMenu(javax.swing.JMenu)>/new java.lang.Error/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(byte,java.lang.Class,java.lang.invoke.MemberName)>/new java.lang.invoke.DirectMethodHandle$Accessor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPolicyParser$CryptoPermissionEntry parsePermissionEntry(java.util.Hashtable)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.util.SignatureFileVerifier: java.security.CodeSigner[] getSigners(sun.security.pkcs.SignerInfo[],sun.security.pkcs.PKCS7)>/new java.security.CodeSigner[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.nio.ch.SimpleAsynchronousFileChannelImpl: java.util.concurrent.Future implLock(long,long,boolean,java.lang.Object,java.nio.channels.CompletionHandler)>/new java.nio.channels.ClosedChannelException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<class int[]>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.awt.Font: java.awt.Font getFont(java.util.Map)>/new java.awt.Font/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.java2d.HeadlessGraphicsEnvironment: java.awt.GraphicsDevice[] getScreenDevices()>/new java.awt.HeadlessException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.jca.ProviderList: void <clinit>()>/new sun.security.jca.ProviderList$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/34	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList$Itr: void <init>(java.util.ArrayList)>/@parameter0
<<immutable-hcontext>>	org.jfree.data.statistics.HistogramDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal)>/new java.lang.ArithmeticException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.x509.CertificateExtensions: void init(sun.security.util.DerInputStream)>/new sun.security.x509.Extension/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedDomainXYPlot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<class java.lang.Integer>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.title.LegendTitle: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>/new org.jfree.chart.entity.TitleEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.LinkedHashMap: java.util.HashMap$Node replacementNode(java.util.HashMap$Node,java.util.HashMap$Node)>/new java.util.LinkedHashMap$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.util.locale.provider.LocaleServiceProviderPool: java.util.Locale getLookupLocale(java.util.Locale)>/new java.util.Locale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/21	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.category.LevelRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.x509.X509Key: java.security.PublicKey buildX509Key(sun.security.x509.AlgorithmId,sun.security.util.BitArray)>/new java.lang.InstantiationException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.CategoryStepRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getDeferredInstance(sun.java2d.cmm.ProfileDeferralInfo)>/new java.awt.color.ICC_ProfileRGB/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.ProcessEnvironment$Variable: java.lang.ProcessEnvironment$Variable valueOf(byte[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.axis.SymbolAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	org.jfree.chart.renderer.category.IntervalBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)>/new sun.security.pkcs.SignerInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYShapeRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList: java.util.Iterator iterator()>/l0#_0
<<immutable-hcontext>>	<sun.font.EAttribute: void <clinit>()>/new sun.font.EAttribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/12	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.java2d.Disposer: void addObjectRecord(java.lang.Object,sun.java2d.DisposerRecord)>/new java.lang.ref.WeakReference/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.BoxAndWhiskerRenderer: void drawVerticalItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)>/new org.jfree.chart.renderer.Outlier/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<method type ()java.security.PrivilegedAction>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedDomainXYPlot: void <init>()>/new org.jfree.chart.axis.NumberAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYSplineRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.time.Quarter::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYDifferenceRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<java.io.UnixFileSystem: java.lang.String[] list(java.io.File)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.xy.OHLCDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.xy.XYSeries::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.SymbolAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.FileFontStrike: java.awt.geom.GeneralPath getGlyphOutline(int,float,float)>/new java.util.concurrent.ConcurrentHashMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<class sun.invoke.util.ValueConversions>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.Long$LongCache: void <clinit>()>/new java.lang.Long/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.ResourceBundle$Control$CandidateListCache: java.util.List createObject(sun.util.locale.BaseLocale)>/new java.util.LinkedList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: void addGrantEntry(sun.security.provider.PolicyParser$GrantEntry,java.security.KeyStore,sun.security.provider.PolicyFile$PolicyInfo)>/new sun.security.provider.PolicyFile$SelfPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.RenderingHints$Key: void recordIdentity(java.awt.RenderingHints$Key)>/new java.lang.ref.WeakReference/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/23	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#_4441
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.category.CategoryDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToDomainAxes(int,java.util.List)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<javax.crypto.Cipher: java.util.List getTransforms(java.lang.String)>/new javax.crypto.Cipher$Transform/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.nio.charset.CoderResult$2: java.nio.charset.CoderResult create(int)>/new java.nio.charset.CoderResult/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/16	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>/new java.util.Hashtable$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.BoundMethodHandle$Species_L: java.lang.invoke.BoundMethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.BoundMethodHandle$Species_L/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: void drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.x509.CertificateExtensions: void parseExtension(sun.security.x509.Extension)>/new sun.security.x509.UnparseableExtension/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF(int,int,char[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<javax.swing.table.DefaultTableColumnModel: void addColumn(javax.swing.table.TableColumn)>/new java.lang.IllegalArgumentException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.io.ObjectOutputStream$BlockDataOutputStream: void writeUTF(java.lang.String,long)>/new java.io.UTFDataFormatException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.SpiderWebPlot: void drawRadarPoly(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotRenderingInfo,int,int,double,double)>/new org.jfree.chart.entity.CategoryItemEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.StringBuffer: char charAt(int)>/new java.lang.StringIndexOutOfBoundsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/37	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.font.StrikeCache: java.lang.ref.Reference getStrikeRef(sun.font.FontStrike,boolean)>/new sun.font.StrikeCache$SoftDisposerRef/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.jar.JarVerifier: void processEntry(sun.security.util.ManifestEntryVerifier)>/new sun.security.util.SignatureFileVerifier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm filterReturnForm(java.lang.invoke.LambdaForm$BasicType,boolean)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void checkNumeric()>/new java.util.IllegalFormatFlagsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYBlockRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: void drawStackHorizontal(java.util.List,java.lang.Comparable,java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset)>/new java.lang.Object[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: void addGrantEntry(sun.security.provider.PolicyParser$GrantEntry,java.security.KeyStore,sun.security.provider.PolicyFile$PolicyInfo)>/new sun.security.provider.PolicyFile$PolicyEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/26	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.ref.Reference: void <clinit>()>/new java.lang.ref.Reference$ReferenceHandler/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.category.StackedBarRenderer3D::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.x509.CertificateExtensions: void parseExtension(sun.security.x509.Extension)>/new sun.security.x509.UnparseableExtension/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.Polygon/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<java.sql.DriverManager: java.sql.Driver getDriver(java.lang.String)>/new java.sql.SQLException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.text.MessageFormat$Field: void <clinit>()>/new java.text.MessageFormat$Field/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	org.jfree.data.category.DefaultIntervalCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	org.jfree.data.xy.MatrixSeries::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.time.Second::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.reflect.annotation.AnnotationParser: java.lang.annotation.Annotation parseAnnotation2(java.nio.ByteBuffer,sun.reflect.ConstantPool,java.lang.Class,boolean,java.lang.Class[])>/new java.lang.TypeNotPresentException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.xy.XIntervalDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseNetscapeCertChain(sun.security.util.DerValue)>/new java.security.cert.X509Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation_$$A_3#_4458
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getBMPString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYStepAreaRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.ThreadGroup: void destroy()>/new java.lang.IllegalThreadStateException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList: int access$100(java.util.ArrayList)>/@parameter0
<<immutable-hcontext>>	<java.lang.Terminator: void setup()>/new sun.misc.Signal/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.awt.geom.CurveLink: sun.awt.geom.Curve getMoveto()>/new sun.awt.geom.Order0/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm collectArgumentArrayForm(int,java.lang.invoke.MethodHandle)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.xy.TableXYDataset,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<java.util.Formatter: java.util.Formatter$FormatString[] parse(java.lang.String)>/new java.util.Formatter$FormatSpecifier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/19	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormBuffer: java.lang.invoke.LambdaForm lambdaForm()>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.category.GanttRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedFieldLambdaForm(byte,boolean,int)>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.misc.MetaIndex: void registerDirectory(java.io.File)>/new sun.misc.MetaIndex/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray(java.lang.Object[])>/new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.xy.NormalizedMatrixSeries::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.regex.Pattern$CharPropertyNames: void defClone(java.lang.String,java.util.regex.Pattern$CharPropertyNames$CloneableProperty)>/new java.util.regex.Pattern$CharPropertyNames$4/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.nio.file.AccessMode: void <clinit>()>/new java.nio.file.AccessMode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.Double: java.lang.Double valueOf(java.lang.String)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<java.security.SecureClassLoader: java.security.ProtectionDomain getProtectionDomain(java.security.CodeSource)>/new java.security.ProtectionDomain/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.xy.XYSeries getSeries(java.lang.Comparable)>/new org.jfree.data.UnknownKeyException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	org.jfree.chart.renderer.category.WaterfallBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class java.lang.Class>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.TimeSeriesDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm filterReturnForm(java.lang.invoke.LambdaForm$BasicType,boolean)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$19/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.Character$CharacterCache: void <clinit>()>/new java.lang.Character/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.jar.Manifest: void read(java.io.InputStream)>/new java.util.jar.Attributes/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/13	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.MemberName: void <init>(java.lang.reflect.Method,boolean)>/new java.lang.AbstractMethodError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])>/new java.security.ProtectionDomain$Key/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.ClassValue$Version: void <init>(java.lang.ClassValue)>/new java.lang.ClassValue$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.awt.geom.Order3: sun.awt.geom.Curve getSubCurve(double,double,int)>/new sun.awt.geom.Order3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.statistics.HistogramDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.FastScatterPlot: void <init>()>/new org.jfree.chart.axis.NumberAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/axis#_0
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYShapeRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$GrantEntry parseGrantEntry()>/new sun.security.provider.PolicyParser$PrincipalEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.awt.geom.Curve: void insertMove(java.util.Vector,double,double)>/new sun.awt.geom.Order0/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.VectorRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList: java.lang.Object elementData(int)>/l0#_0
<<immutable-hcontext>>	<org.jfree.chart.title.LegendItemBlockContainer: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>/new org.jfree.chart.entity.LegendItemEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.xy.XYDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.misc.URLClassPath$JarLoader: sun.misc.Resource getResource(java.lang.String,boolean,java.util.Set)>/new sun.misc.InvalidJarIndexException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<jdk.internal.org.objectweb.asm.Type: java.lang.String getInternalName()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxis(int,int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.LambdaForm makeReinvokerForm(java.lang.invoke.MethodHandle,int,java.lang.Object,java.lang.String,boolean,java.lang.invoke.LambdaForm$NamedFunction,java.lang.invoke.LambdaForm$NamedFunction)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.nio.file.Files: java.nio.file.Path createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>/new java.nio.file.FileSystemException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.CallSite: java.lang.invoke.WrongMethodTypeException wrongTargetType(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>/new java.lang.invoke.WrongMethodTypeException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.WeakHashMap: void <clinit>()>/new java.lang.Object/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.regex.Pattern$CharPropertyNames: void <clinit>()>/new java.util.regex.Pattern$CharPropertyNames$5/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>/new java.util.IllegalFormatConversionException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.xy.XYBarDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.awt.image.BufferedImage: void <init>(int,int,int)>/new java.awt.image.DirectColorModel/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.security.Signature: void <clinit>()>/new sun.security.jca.ServiceId/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYAreaRenderer2: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/35	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxes(int,java.util.List)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedDomainXYPlot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.StringBuffer: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.SubCategoryAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.Font: java.awt.Font getFont(java.util.Map)>/new java.awt.Font/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl$Intrinsic: void <clinit>()>/new java.lang.invoke.MethodHandleImpl$Intrinsic/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList: java.lang.String outOfBoundsMsg(int)>/@this
<<immutable-hcontext>>	<sun.font.StandardGlyphVector: java.awt.Shape getGlyphVisualBounds(int)>/new java.awt.Shape[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.util.DisabledAlgorithmConstraints$Constraints: void <init>(java.lang.String[])>/new sun.security.util.DisabledAlgorithmConstraints$jdkCAConstraint/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.axis.SegmentedTimeline$SegmentRange::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.awt.DebugSettings: void loadFileProperties()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.VectorRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<java.lang.ProcessEnvironment$Variable: java.lang.ProcessEnvironment$Variable valueOf(byte[])>/new java.lang.ProcessEnvironment$Variable/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<java.util.HashMap: java.util.HashMap$TreeNode newTreeNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)>/new java.util.HashMap$TreeNode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/8	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/14	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.xy.YIntervalDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<method type ()java.time.temporal.TemporalQuery>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/includedAnnotations#_4429
<<immutable-hcontext>>	org.jfree.data.xy.DefaultTableXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCCategoryDataset: void executeQuery(java.sql.Connection,java.lang.String)>/new java.lang.Long/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.DeviationRenderer: void drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new double[]/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.SamplingXYLineRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	sun.font.TrueTypeFont::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.text.DateFormatSymbols: void initializeData(java.util.Locale)>/new java.text.DateFormatSymbols/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLanguage(java.lang.String)>/new sun.util.locale.LocaleSyntaxException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.util.locale.provider.JRELocaleConstants: void <clinit>()>/new java.util.Locale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYBlockRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.CallSite: java.lang.invoke.WrongMethodTypeException wrongTargetType(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>/new java.lang.invoke.WrongMethodTypeException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.util.DerIndefLenConverter: int parseLength()>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.awt.RenderingHints$Key: void recordIdentity(java.awt.RenderingHints$Key)>/new java.lang.ref.WeakReference/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.security.Signature: void <clinit>()>/new sun.security.jca.ServiceId/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.provider.certpath.PKIX$ValidatorParams: void <init>(java.security.cert.CertPath,java.security.cert.PKIXParameters)>/new java.security.InvalidAlgorithmParameterException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<javax.crypto.JarVerifier: void verify()>/new java.util.jar.JarException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.util.KeyUtil: void validateDHPublicKey(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>/new java.security.InvalidKeyException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.ConditionalSpecialCasing: void <clinit>()>/new java.lang.ConditionalSpecialCasing$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation_$$A_2#_4447
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/1	<<immutable-context>>	<java.util.Vector: boolean contains(java.lang.Object)>/@parameter0
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name withConstraint(java.lang.Object)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/8	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.misc.ExtensionDependency: java.io.File[] getExtFiles(java.io.File[])>/new java.io.File/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.awt.geom.Order3: sun.awt.geom.Curve getReversedCurve()>/new sun.awt.geom.Order3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.statistics.SimpleHistogramDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.zip.ZipFile$ZipEntryIterator: java.util.zip.ZipEntry next()>/new java.util.zip.ZipError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createStandardTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<sun.font.StrikeCache: java.lang.ref.Reference getStrikeRef(sun.font.FontStrike,boolean)>/new sun.font.StrikeCache$WeakDisposerRef/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	sun.font.TrueTypeFont::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getInstance(byte[])>/new java.awt.color.ICC_ProfileGray/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Formatter$Flags: java.util.Formatter$Flags parse(java.lang.String)>/new java.util.DuplicateFormatFlagsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.SimpleMethodHandle: java.lang.invoke.BoundMethodHandle make(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.SimpleMethodHandle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$16/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.font.AttributeValues: java.lang.Object i_get(sun.font.EAttribute)>/new java.awt.font.TransformAttribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$Service/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.x509.CertificateValidity: void construct(sun.security.util.DerValue)>/new java.io.IOException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.awt.geom.Order2: sun.awt.geom.Curve getReversedCurve()>/new sun.awt.geom.Order2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.x509.X509CRLImpl: void parse(sun.security.util.DerValue)>/new sun.security.x509.X509CRLImpl$X509IssuerSerial/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.misc.MetaIndex: void registerDirectory(java.io.File)>/new java.io.File/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/13	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.util.locale.provider.LocaleResources: java.lang.Object[] getDecimalFormatSymbolsData()>/new java.lang.Object[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.ResourceBundle$Control$CandidateListCache: java.util.List getDefaultList(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new java.util.LinkedList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.CyclicNumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.CyclicNumberAxis$CycleBoundTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getDeferredInstance(sun.java2d.cmm.ProfileDeferralInfo)>/new java.awt.color.ICC_Profile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.jar.JarVerifier: void processEntry(sun.security.util.ManifestEntryVerifier)>/new sun.security.util.SignatureFileVerifier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.category.IntervalBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.axis.CategoryAxis3D::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.jar.Attributes: void read(java.util.jar.Manifest$FastInputStream,byte[])>/new java.lang.String/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.axis.SegmentedTimeline$BaseTimelineSegmentRange::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedDomainXYPlot: void <init>()>/new org.jfree.chart.axis.NumberAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$ServiceKey/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYShapeRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: java.util.List createStackedValueList(org.jfree.data.category.CategoryDataset,java.lang.Comparable,int[],double,boolean)>/new java.lang.Object[]/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/9	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPolicyParser$GrantEntry parseGrantEntry(java.util.Hashtable)>/new javax.crypto.CryptoPolicyParser$GrantEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/10	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: void <clinit>()>/new java.awt.BasicStroke/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.jca.Providers: void <clinit>()>/new java.lang.InheritableThreadLocal/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: void <clinit>()>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<class java.lang.invoke.MethodHandleImpl$BindCaller>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.xy.XYBarDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.xy.DefaultOHLCDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.Vector: int hugeCapacity(int)>/new java.lang.OutOfMemoryError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getRangeBounds(java.util.List,org.jfree.data.Range,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<java.lang.Short: short parseShort(java.lang.String,int)>/new java.lang.NumberFormatException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.security.Signature$Delegate: java.security.SignatureSpi newInstance(java.security.Provider$Service)>/new java.security.NoSuchAlgorithmException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.Invokers: java.lang.invoke.LambdaForm invokeHandleForm(java.lang.invoke.MethodType,boolean,int)>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.category.StackedBarRenderer3D::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Arrays: byte[] copyOf(byte[],int)>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/6	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxis(int,int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.math.BigInteger: void <clinit>()>/new java.math.BigInteger[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<java.lang.String: java.lang.String valueOf(char)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.String: java.lang.String replace(char,char)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.jar.Manifest: void read(java.io.InputStream)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.ohlc.OHLCSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#27#_4471
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/21	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.nio.ch.SimpleAsynchronousFileChannelImpl: java.util.concurrent.Future implLock(long,long,boolean,java.lang.Object,java.nio.channels.CompletionHandler)>/new java.nio.channels.NonReadableChannelException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.math.BigInteger: java.math.BigInteger valueOf(long)>/new java.math.BigInteger/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)>/new java.security.cert.X509Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxis(int,int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.awt.geom.Order3: sun.awt.geom.Curve getReversedCurve()>/new sun.awt.geom.Order3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.text.bidi.BidiBase$TextAttributeConstants: java.text.AttributedCharacterIterator$Attribute getTextAttribute(java.lang.String)>/new sun.text.bidi.BidiBase$TextAttributeConstants$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$17/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/10	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/18	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<class java.lang.Object>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.nio.ch.SimpleAsynchronousFileChannelImpl: java.util.concurrent.Future implLock(long,long,boolean,java.lang.Object,java.nio.channels.CompletionHandler)>/new java.nio.channels.NonReadableChannelException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<method type ()java.time.temporal.TemporalQuery>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/27	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.misc.URLClassPath$JarLoader: java.net.URL[] parseClassPath(java.net.URL,java.lang.String)>/new java.net.URL/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis3D: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartRenderingInfo: void clear()>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.locale.InternalLocaleBuilder: void setUnicodeLocaleExtension(java.lang.String)>/new sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.xy.OHLCDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<method type ()java.util.Comparator>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.xy.XYCoordinate::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.StringCoding: char[] decode(java.lang.String,byte[],int,int)>/new java.lang.StringCoding$StringDecoder/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$4/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.x509.X509Key: java.security.PublicKey buildX509Key(sun.security.x509.AlgorithmId,sun.security.util.BitArray)>/new java.lang.InstantiationException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/0	<<immutable-context>>	<java.util.ArrayList: boolean contains(java.lang.Object)>/l1#_0
<<immutable-hcontext>>	org.jfree.chart.plot.XYPlot::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/this#_0
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl$Intrinsic: void <clinit>()>/new java.lang.invoke.MethodHandleImpl$Intrinsic/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.util.locale.provider.LocaleProviderAdapter$Type: void <clinit>()>/new sun.util.locale.provider.LocaleProviderAdapter$Type/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/26	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.WeakHashMap: void <clinit>()>/new java.lang.Object/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList: java.util.Iterator iterator()>/l0#_0
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.geom.Ellipse2D$Double/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.Permission getKnownInstance(java.lang.Class,java.lang.String,java.lang.String)>/new java.net.SocketPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.MemberName: java.lang.IllegalAccessException makeAccessException(java.lang.String,java.lang.Object)>/new java.lang.IllegalAccessException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.nio.CharBuffer: java.nio.CharBuffer get(char[],int,int)>/new java.nio.BufferUnderflowException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/27	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<class sun.reflect.Reflection>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.ConditionalSpecialCasing: void <clinit>()>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.reflect.Reflection: void <clinit>()>/new java.lang.String[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Formatter: void ensureOpen()>/new java.util.FormatterClosedException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxes(int,java.util.List)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/14	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.security.AllPermission: java.security.PermissionCollection newPermissionCollection()>/new java.security.AllPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.Arrays: java.util.List asList(java.lang.Object[])>/new java.util.Arrays$ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedLambdaForm(java.lang.invoke.MethodType,int)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/7	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.Second::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeVarargsCollector(java.lang.invoke.MethodHandle,java.lang.Class)>/new java.lang.invoke.MethodHandleImpl$AsVarargsCollector/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class java.lang.Throwable>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.font.FileFontStrike: void <init>(sun.font.FileFont,sun.font.FontStrikeDesc)>/new sun.font.FontStrikeDisposer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: void drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)>/new org.jfree.chart.plot.PieLabelRecord/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.time.Month: void <clinit>()>/new java.time.Month/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.time.temporal.ChronoUnit: void <clinit>()>/new java.time.temporal.ChronoUnit/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>/new java.util.IllegalFormatConversionException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.SimpleTimePeriod::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: void <init>(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,java.lang.invoke.MemberName)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<java.awt.font.TextAttribute: void <clinit>()>/new java.awt.font.TextAttribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.provider.X509Factory: java.security.cert.CRL engineGenerateCRL(java.io.InputStream)>/new java.security.cert.CRLException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.PeriodAxis: void drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.CyclicNumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.CyclicNumberAxis$CycleBoundTick/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.x509.X500Name: void parseDN(java.lang.String,java.util.Map)>/new sun.security.x509.RDN/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/new sun.security.pkcs.SignerInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	org.jfree.chart.axis.SubCategoryAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/30	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.font.NativeStrike: void <init>(sun.font.NativeFont,sun.font.FontStrikeDesc)>/new sun.font.NativeStrikeDisposer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Formatter: void ensureOpen()>/new java.util.FormatterClosedException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.font.GlyphLayout$SDCache: sun.font.GlyphLayout$SDCache get(java.awt.Font,java.awt.font.FontRenderContext)>/new java.util.concurrent.ConcurrentHashMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.awt.geom.AreaOp: void addEdges(java.util.Vector,java.util.Vector,int)>/new sun.awt.geom.Edge/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.misc.FloatingDecimal: void <clinit>()>/new sun.misc.FloatingDecimal$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: void addGrantEntry(sun.security.provider.PolicyParser$GrantEntry,java.security.KeyStore,sun.security.provider.PolicyFile$PolicyInfo)>/new java.security.UnresolvedPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<sun.misc.MessageUtils: void where()>/new java.lang.Throwable/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$4/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.ssl.SupportedEllipticCurvesExtension$NamedEllipticCurve: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String,boolean)>/new java.lang.RuntimeException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<class java.lang.invoke.BoundMethodHandle>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLanguage(java.lang.String)>/new sun.util.locale.LocaleSyntaxException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToDomainAxes(int,java.util.List)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Formatter$Flags: java.util.Formatter$Flags parse(char)>/new java.util.UnknownFormatFlagsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/12	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.AbstractCollection: void <init>()>/@this
<<immutable-hcontext>>	<java.lang.Float: java.lang.Float valueOf(float)>/new java.lang.Float/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: int index(java.lang.String)>/new java.lang.AssertionError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.MemberName$Factory: java.lang.invoke.MemberName[] newMemberBuffer(int)>/new java.lang.invoke.MemberName[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.ClassValue$Entry: java.lang.ClassValue$Entry refreshVersion(java.lang.ClassValue$Version)>/new java.lang.ClassValue$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/16	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.InvokerBytecodeGenerator: java.lang.invoke.MemberName resolveInvokerMember(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.WaterfallBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$15/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.font.StandardGlyphVector: java.awt.Shape getGlyphVisualBounds(int)>/new java.awt.Shape[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/30	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYAreaRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.HighLowRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/23	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.gantt.XYTaskDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.misc.URLClassPath$3: sun.misc.URLClassPath$Loader run()>/new sun.misc.URLClassPath$FileLoader/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/20	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.time.Month::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.net.SocketInputStream: int read(byte[],int,int,int)>/new java.lang.ArrayIndexOutOfBoundsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/22	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.axis.NumberAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/@parameter0
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$14/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.io.FileReader: void <init>(java.io.File)>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/29	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>/new java.awt.color.ICC_ColorSpace/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: void run()>/new java.lang.Thread/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.Package$1: java.lang.Package run()>/new java.lang.Package/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/10	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.xy.XYSeries::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.jar.JarInputStream: java.util.jar.JarEntry checkManifest(java.util.jar.JarEntry)>/new java.util.jar.Manifest/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.locale.provider.JRELocaleConstants: void <clinit>()>/new java.util.Locale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<sun.nio.fs.Globs: java.lang.String toRegexPattern(java.lang.String,boolean)>/new java.util.regex.PatternSyntaxException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxes(int,java.util.List)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createStandardTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.io.FilePermission: java.security.PermissionCollection newPermissionCollection()>/new java.io.FilePermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.ClusteredXYBarRenderer: org.jfree.data.Range findDomainBoundsWithOffset(org.jfree.data.xy.IntervalXYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/11	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.ClassValue: void <init>()>/new java.lang.ClassValue$Identity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setExtensions(java.util.List,java.lang.String)>/new sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.misc.ProxyGenerator$ConstantPool$ValueEntry: void write(java.io.DataOutputStream)>/new java.lang.InternalError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.java2d.StateTrackable$State: void <clinit>()>/new sun.java2d.StateTrackable$State/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$GrantEntry parseGrantEntry()>/new sun.security.provider.PolicyParser$PrincipalEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.Signature$CipherAdapter: void engineSetParameter(java.lang.String,java.lang.Object)>/new java.security.InvalidParameterException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.time.OffsetTime: java.time.OffsetTime from(java.time.temporal.TemporalAccessor)>/new java.time.DateTimeException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.xy.XYSeries getSeries(java.lang.Comparable)>/new org.jfree.data.UnknownKeyException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.xy.DefaultOHLCDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.LambdaForm makeReinvokerForm(java.lang.invoke.MethodHandle,int,java.lang.Object,java.lang.String,boolean,java.lang.invoke.LambdaForm$NamedFunction,java.lang.invoke.LambdaForm$NamedFunction)>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.misc.URLClassPath$3: sun.misc.URLClassPath$Loader run()>/new sun.misc.URLClassPath$Loader/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.nio.fs.Globs: java.lang.String toRegexPattern(java.lang.String,boolean)>/new java.util.regex.PatternSyntaxException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.nio.cs.ThreadLocalCoders$Cache: void <init>(int)>/new java.lang.ThreadLocal/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.io.File: java.net.URL toURL()>/new java.net.MalformedURLException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.WaferMapRenderer: void makePaintIndex()>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/1	<<immutable-context>>	<java.lang.Integer: boolean equals(java.lang.Object)>/@this
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/25	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.StackedXYAreaRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.ExtendedCategoryAxis: org.jfree.chart.text.TextBlock createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)>/new org.jfree.chart.text.TextFragment/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getRangeBounds(java.util.List,org.jfree.data.Range,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: int precision(java.lang.String)>/new java.util.IllegalFormatPrecisionException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>/new java.security.Provider$EngineDescription/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.awt.geom.Order2: sun.awt.geom.Curve getSubCurve(double,double,int)>/new sun.awt.geom.Order2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.util.logging.PlatformLogger$Level: void <clinit>()>/new sun.util.logging.PlatformLogger$Level/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$5/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: java.util.List createStackedValueList(org.jfree.data.category.CategoryDataset,java.lang.Comparable,int[],double,boolean)>/new java.lang.Object[]/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot3D: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new java.awt.geom.Arc2D$Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: java.lang.Comparable getSectionKey(int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.category.BarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultMultiValueCategoryDataset: void <init>()>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.statistics.SimpleHistogramDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/9	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.awt.image.ColorModel: java.awt.image.ColorModel getRGBdefault()>/new java.awt.image.DirectColorModel/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.ClassValue$Entry: java.lang.ClassValue$Entry refreshVersion(java.lang.ClassValue$Version)>/new java.lang.ClassValue$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.MethodType: java.lang.invoke.MethodType makeImpl(java.lang.Class,java.lang.Class[],boolean)>/new java.lang.invoke.MethodType/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm$BasicType: void <clinit>()>/new java.lang.invoke.LambdaForm$BasicType/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void <init>(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack66
<<immutable-hcontext>>	org.jfree.data.gantt.XYTaskDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.font.GlyphLayout$SDCache: sun.font.GlyphLayout$SDCache get(java.awt.Font,java.awt.font.FontRenderContext)>/new java.util.concurrent.ConcurrentHashMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$GrantEntry parseGrantEntry()>/new sun.security.provider.PolicyParser$GrantEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.font.GlyphLayout: void nextEngineRecord(int,int,int,int,sun.font.Font2D,int)>/new sun.font.GlyphLayout$EngineRecord/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/10	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.HashMap: java.util.HashMap$TreeNode newTreeNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)>/new java.util.HashMap$TreeNode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class java.lang.Boolean>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.ohlc.OHLCItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.DeviationRenderer: void drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new double[]/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<java.net.InetAddress$Cache$Type: void <clinit>()>/new java.net.InetAddress$Cache$Type/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.TimePeriodValues::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.awt.image.BufferedImage: void <init>(int,int,int)>/new java.awt.image.DirectColorModel/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MemberName resolveOrFail(byte,java.lang.Class,java.lang.String,java.lang.Class)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.util.DerIndefLenConverter: int parseLength()>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.security.Security: void initialize()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.xy.NormalizedMatrixSeries::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: java.lang.invoke.LambdaForm getPreparedForm(java.lang.String)>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getInstance(byte[])>/new java.awt.color.ICC_Profile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.misc.FormattedFloatingDecimal: void <clinit>()>/new sun.misc.FormattedFloatingDecimal$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.nio.charset.CoderResult$Cache: java.nio.charset.CoderResult get(int)>/new java.lang.ref.WeakReference/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getDeferredInstance(sun.java2d.cmm.ProfileDeferralInfo)>/new java.awt.color.ICC_ProfileRGB/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<class sun.invoke.util.Wrapper>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.text.TextLine: void <init>(java.lang.String,java.awt.Font,java.awt.Paint)>/new org.jfree.chart.text.TextFragment/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.DataUtilities: java.lang.Number[] createNumberArray(double[])>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle$Accessor: java.lang.invoke.MethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.DirectMethodHandle$Accessor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.util.calendar.CalendarSystem$1: java.util.Properties run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/1	<<immutable-context>>	<java.util.ArrayList: boolean contains(java.lang.Object)>/@parameter0
<<immutable-hcontext>>	<mock string concatenation result>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList$Itr: void remove()>/$stack7
<<immutable-hcontext>>	<sun.awt.SunHints: void <clinit>()>/new sun.awt.SunHints$Key/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.jar.Manifest: void read(java.io.InputStream)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer: void drawVerticalItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new org.jfree.chart.renderer.Outlier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.io.File: java.net.URL toURL()>/new java.net.MalformedURLException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.font.AttributeValues: java.lang.Object i_get(sun.font.EAttribute)>/new java.awt.font.TransformAttribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$19/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<sun.security.x509.AVA: java.lang.Byte getEmbeddedHexPair(int,java.io.Reader)>/new java.lang.Byte/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.jar.JarInputStream: java.util.jar.JarEntry checkManifest(java.util.jar.JarEntry)>/new java.util.jar.Manifest/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle$Accessor: java.lang.invoke.MethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.DirectMethodHandle$Accessor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/1	<<immutable-context>>	<java.util.ArrayList: int indexOf(java.lang.Object)>/l1#_0
<<immutable-hcontext>>	<java.time.ZoneOffset: java.time.ZoneOffset ofTotalSeconds(int)>/new java.time.ZoneOffset/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.text.TextLine: void <init>(java.lang.String,java.awt.Font,java.awt.Paint)>/new org.jfree.chart.text.TextFragment/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/15	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getDeferredInstance(sun.java2d.cmm.ProfileDeferralInfo)>/new java.awt.color.ICC_ProfileGray/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.font.AttributeValues: java.lang.Object i_get(sun.font.EAttribute)>/new java.awt.font.TransformAttribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	java.lang.Character::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.ChartUtilities: void saveChartAsJPEG(java.io.File,org.jfree.chart.JFreeChart,int,int,org.jfree.chart.ChartRenderingInfo)>/new java.io.FileOutputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass1(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new org.jfree.chart.entity.XYItemEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.net.www.ParseUtil: java.net.URL fileToEncodedURL(java.io.File)>/new java.net.URL/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: void addGrantEntry(sun.security.provider.PolicyParser$GrantEntry,java.security.KeyStore,sun.security.provider.PolicyFile$PolicyInfo)>/new java.security.UnresolvedPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)>/new sun.security.x509.X509CertImpl/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[] retrieveDisplayNamesImpl(java.lang.String,java.util.Locale)>/new java.lang.String[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: java.util.List createStackedValueList(org.jfree.data.category.CategoryDataset,java.lang.Comparable,int[],double,boolean)>/new java.lang.Object[]/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/23	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)>/new sun.security.x509.X509CertImpl/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeIntrinsic(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,java.lang.invoke.MethodHandleImpl$Intrinsic)>/new java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>/new java.lang.String[][]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYStepRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.awt.image.DirectColorModel: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.BoxAndWhiskerRenderer: void drawVerticalItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)>/new org.jfree.chart.renderer.Outlier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<<main-thread>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/16	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<class java.lang.invoke.MethodHandleImpl>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxes(int,java.util.List)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.cert.Certificate[] getSignerCertificates(java.security.CodeSource)>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/8	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.category.CategoryDataset,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$Service/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/6	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.util.SecurityConstants: void <clinit>()>/new java.net.SocketPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/26	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/27	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.String: java.lang.String substring(int,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.xy.XYIntervalSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.util.CoreResourceBundleControl: void <init>()>/new java.util.Locale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.awt.geom.Order1: sun.awt.geom.Curve getSubCurve(double,double,int)>/new sun.awt.geom.Order1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.util.SecurityConstants: void <clinit>()>/new java.net.SocketPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxes(int,java.util.List)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.util.locale.BaseLocale$Cache: sun.util.locale.BaseLocale createObject(sun.util.locale.BaseLocale$Key)>/new sun.util.locale.BaseLocale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedDomainXYPlot: void <init>()>/new org.jfree.chart.axis.NumberAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/@parameter0
<<immutable-hcontext>>	<java.security.BasicPermission: java.security.PermissionCollection newPermissionCollection()>/new java.security.BasicPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.DynamicTimeSeriesCollection: void findDomainLimits()>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<class sun.invoke.util.Wrapper>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[] retrieveDisplayNamesImpl(java.lang.String,java.util.Locale)>/new java.util.concurrent.ConcurrentHashMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$7/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.provider.X509Factory: java.security.cert.CRL engineGenerateCRL(java.io.InputStream)>/new java.security.cert.CRLException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.PropertyPermissionCollection: void add(java.security.Permission)>/new java.util.PropertyPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.xy.DefaultIntervalXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#27#_4471
<<immutable-hcontext>>	org.jfree.chart.axis.PeriodAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/20	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/18	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.text.normalizer.RuleCharacterIterator: java.lang.String lookahead()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	org.jfree.data.time.TimeSeries::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.StandardXYItemRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: void <clinit>()>/new java.awt.BasicStroke/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.misc.Launcher: java.io.File[] getClassPath(java.lang.String)>/new java.io.File/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.Locale: void readObject(java.io.ObjectInputStream)>/new java.util.IllformedLocaleException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>/new java.nio.DirectByteBuffer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm$NamedFunction: void <init>(java.lang.reflect.Method)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.xy.DefaultTableXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYLineAndShapeRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/23	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.math.RoundingMode: void <clinit>()>/new java.math.RoundingMode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.category.CategoryDataset,org.jfree.data.KeyToGroupMap)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYAreaRenderer2: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/36	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedRangeCategoryPlot: void <init>()>/new org.jfree.chart.axis.NumberAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/@parameter0
<<immutable-hcontext>>	<java.util.Locale: java.lang.String getISO3Language()>/new java.util.MissingResourceException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.util.DisabledAlgorithmConstraints$Constraints: void <init>(java.lang.String[])>/new sun.security.util.DisabledAlgorithmConstraints$jdkCAConstraint/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.xy.XYIntervalSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.io.FileReader: void <init>(java.io.File)>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getDeferredInstance(sun.java2d.cmm.ProfileDeferralInfo)>/new java.awt.color.ICC_ProfileGray/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.VectorRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.SimpleMethodHandle: java.lang.invoke.BoundMethodHandle make(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.SimpleMethodHandle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.TreeMap$DescendingKeySpliterator: void forEachRemaining(java.util.function.Consumer)>/new java.lang.NullPointerException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: java.lang.invoke.LambdaForm$Name[] buildEmptyNames(int,java.lang.String)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.Short: java.lang.Short valueOf(short)>/new java.lang.Short/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.io.ByteArrayOutputStream: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/15	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxes(int,java.util.List)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/6	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.HashSet: void <clinit>()>/new java.lang.Object/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.LinkedHashMap: java.util.HashMap$TreeNode newTreeNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)>/new java.util.HashMap$TreeNode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.x509.CRLExtensions: void init(sun.security.util.DerInputStream)>/new sun.security.x509.Extension/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: void <init>(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,java.lang.invoke.MemberName)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.WaferMapRenderer: void makeValueIndex(java.lang.Number,java.lang.Number,java.util.Set)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.LookupPaintScale$PaintItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: java.util.List createStackedValueList(org.jfree.data.category.CategoryDataset,java.lang.Comparable,int[],double,boolean)>/new java.lang.Object[]/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.ResourceBundle: void <clinit>()>/new java.util.ResourceBundle$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$Service/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.AbstractList: void <init>()>/l0#_0
<<immutable-hcontext>>	<sun.util.logging.PlatformLogger: sun.util.logging.PlatformLogger getLogger(java.lang.String)>/new java.lang.ref.WeakReference/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.DeviationRenderer: void drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new double[]/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/21	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.nio.charset.CoderResult$Cache: java.nio.charset.CoderResult get(int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.util.SecurityConstants: void <clinit>()>/new java.net.SocketPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void checkGeneral()>/new java.util.MissingFormatWidthException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormBuffer: java.lang.invoke.LambdaForm lambdaForm()>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<javax.crypto.CryptoAllPermission: void <clinit>()>/new javax.crypto.CryptoAllPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.SymbolAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<sun.java2d.cmm.CMSManager: sun.java2d.cmm.PCMM getModule()>/new java.awt.color.CMMException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: void activateDeferredProfile()>/new java.awt.color.ProfileDataException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.text.CharacterIteratorFieldDelegate: void formatted(java.text.Format$Field,java.lang.Object,int,int,java.lang.StringBuffer)>/new java.text.AttributedString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermission[] getMinimum(int,java.security.PermissionCollection)>/new javax.crypto.CryptoPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.util.locale.provider.LocaleResources: java.lang.String[][] getZoneStrings()>/new java.lang.String[][]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: void createIdentityForms()>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>/new org.jfree.chart.title.LegendItemBlockContainer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.time.TimeTableXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/17	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/25	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.text.MessageFormat$Field: void <clinit>()>/new java.text.MessageFormat$Field/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.nio.file.Files: java.nio.file.Path createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>/new java.nio.file.FileSystemException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.util.DerValue: sun.security.util.ObjectIdentifier getOID()>/new sun.security.util.ObjectIdentifier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.category.BoxAndWhiskerRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.util.logging.PlatformLogger: sun.util.logging.PlatformLogger getLogger(java.lang.String)>/new sun.util.logging.PlatformLogger/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void printCharacter(java.lang.Object)>/new java.util.IllegalFormatCodePointException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle getDirectMethodCommon(byte,java.lang.Class,java.lang.invoke.MemberName,boolean,boolean,java.lang.Class)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.time.temporal.ChronoUnit: void <clinit>()>/new java.time.temporal.ChronoUnit/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/13	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.font.Decoration: void <clinit>()>/new sun.font.Decoration/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.net.URLClassLoader: java.lang.Class defineClass(java.lang.String,sun.misc.Resource)>/new java.security.CodeSource/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYStepAreaRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$4/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.ProcessEnvironment$Variable: java.lang.ProcessEnvironment$Variable valueOf(byte[])>/new java.lang.ProcessEnvironment$Variable/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.regex.Pattern$CharPropertyNames: void defRange(java.lang.String,int,int)>/new java.util.regex.Pattern$CharPropertyNames$2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.regex.Pattern$CharPropertyNames: void defCtype(java.lang.String,int)>/new java.util.regex.Pattern$CharPropertyNames$3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[] retrieveDisplayNamesImpl(java.lang.String,java.util.Locale)>/new java.lang.String[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.Polygon/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.Terminator: void setup()>/new sun.misc.Signal/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<java.lang.invoke.MemberName: java.lang.ReflectiveOperationException makeAccessException()>/new java.lang.NoSuchFieldException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.category.LineAndShapeRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getDeferredInstance(sun.java2d.cmm.ProfileDeferralInfo)>/new java.awt.color.ICC_ProfileRGB/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.gantt.TaskSeriesCollection: java.lang.Number getStartValue(java.lang.Comparable,java.lang.Comparable)>/new java.lang.Long/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.AbstractList: void <init>()>/@this
<<immutable-hcontext>>	<sun.security.util.SignatureFileVerifier: java.security.CodeSigner[] getSigners(sun.security.pkcs.SignerInfo[],sun.security.pkcs.PKCS7)>/new java.security.CodeSigner/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.awt.image.ColorModel: java.awt.image.ColorModel getRGBdefault()>/new java.awt.image.DirectColorModel/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.time.TimeSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/18	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<class sun.invoke.util.ValueConversions>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.image.ColorModel: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.Integer$IntegerCache: void <clinit>()>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.Invokers: java.lang.invoke.LambdaForm invokeHandleForm(java.lang.invoke.MethodType,boolean,int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.SymbolAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.awt.image.ColorModel: byte[] getGray8TosRGB8LUT(java.awt.color.ICC_ColorSpace)>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.security.ProtectionDomain$WeakProtectionDomainKey: void <clinit>()>/new java.security.ProtectionDomain$Key/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.JFreeChart: void <init>(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)>/new org.jfree.chart.title.LegendTitle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/17	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.util.calendar.ZoneInfoFile$1: java.lang.Object run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.font.FontUtilities$1: java.lang.Object run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedLambdaForm(java.lang.invoke.MethodType,int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.WaferMapRenderer: void makePositionIndex(java.util.Set)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/new sun.security.x509.X509CertImpl/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)>/new java.security.Permissions/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<javax.crypto.JceSecurity: void loadPolicies(java.io.File,javax.crypto.CryptoPermissions,javax.crypto.CryptoPermissions)>/new java.util.jar.JarFile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.AbstractValidatingLambdaMetafactory: void <init>(java.lang.invoke.MethodHandles$Lookup,java.lang.invoke.MethodType,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,java.lang.Class[],java.lang.invoke.MethodType[])>/new java.lang.invoke.LambdaConversionException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList$Itr: void <init>(java.util.ArrayList,java.util.ArrayList$1)>/@parameter0
<<immutable-hcontext>>	org.jfree.chart.renderer.LookupPaintScale$PaintItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$6/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.category.CategoryDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/26	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.category.BoxAndWhiskerRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor$Transform$Kind: void <clinit>()>/new java.lang.invoke.LambdaFormEditor$Transform$Kind/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.time.Month::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.ref.Finalizer: void <clinit>()>/new java.lang.ref.Finalizer$FinalizerThread/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<sun.security.util.PropertyExpander: java.lang.String expand(java.lang.String,boolean)>/new sun.security.util.PropertyExpander$ExpandException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYAreaRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.category.LineRenderer3D::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<class java.lang.Long>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeIntrinsic(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandleImpl$Intrinsic)>/new java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.general.DefaultPieDataset: void setValue(java.lang.Comparable,double)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedRangeCategoryPlot: void <init>()>/new org.jfree.chart.axis.NumberAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.axis.LogarithmicAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/@parameter0
<<immutable-hcontext>>	<sun.java2d.HeadlessGraphicsEnvironment: java.awt.GraphicsDevice[] getScreenDevices()>/new java.awt.HeadlessException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.security.Permissions: java.security.PermissionCollection getPermissionCollection(java.security.Permission,boolean)>/new java.security.PermissionsHash/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedLambdaForm(java.lang.invoke.MethodType,int)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.security.AccessController: java.security.AccessControlContext createWrapper(java.security.DomainCombiner,java.lang.Class,java.security.AccessControlContext,java.security.AccessControlContext,java.security.Permission[])>/new java.security.ProtectionDomain/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYAreaRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.CyclicXYItemRenderer$OverwriteDataSet::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.category.StatisticalBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/0	<<immutable-context>>	<java.lang.Integer: void <init>(int)>/l0#_0
<<immutable-hcontext>>	<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>/new java.nio.charset.UnsupportedCharsetException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#50#_4506
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/20	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.StackedXYBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.cert.Certificate[] getCertificates(java.security.KeyStore,java.lang.String,sun.security.provider.PolicyFile$PolicyInfo)>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.zip.ZipFile$ZipEntryIterator: java.util.zip.ZipEntry next()>/new java.util.zip.ZipError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$ServiceKey/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList$Itr: void <init>(java.util.ArrayList,java.util.ArrayList$1)>/l1#_0
<<immutable-hcontext>>	<sun.font.XMap: sun.font.XMap getXMapperInternal(java.lang.String)>/new sun.font.XMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<mock string concatenation result>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/7	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.font.StrikeCache: java.lang.ref.Reference getStrikeRef(sun.font.FontStrike,boolean)>/new sun.font.StrikeCache$WeakDisposerRef/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/28	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedRangeXYPlot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer: void drawVerticalItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new org.jfree.chart.renderer.Outlier/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle$Special: java.lang.invoke.MethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.DirectMethodHandle$Special/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.category.CategoryDataset,org.jfree.data.KeyToGroupMap)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<org.jfree.chart.plot.MeterPlot: org.jfree.chart.LegendItemCollection getLegendItems()>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYShapeRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.geom.Rectangle2D$Double/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.misc.URLClassPath$JarLoader: java.net.URL[] parseClassPath(java.net.URL,java.lang.String)>/new java.net.URL/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYStepAreaRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.Formatter$BigDecimalLayoutForm: void <clinit>()>/new java.util.Formatter$BigDecimalLayoutForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<class java.lang.invoke.MethodHandleImpl>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$Service/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.xy.YIntervalDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.ConditionalSpecialCasing: void <clinit>()>/new java.lang.ConditionalSpecialCasing$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getPrintableString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: java.util.List createStackedValueList(org.jfree.data.category.CategoryDataset,java.lang.Comparable,int[],double,boolean)>/new java.lang.Object[]/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: void addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double)>/new org.jfree.chart.entity.CategoryItemEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getUTF8String()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.awt.image.BufferedImage: void <init>(int,int,int)>/new java.awt.image.IndexColorModel/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.util.ManifestDigester: void <init>(byte[])>/new sun.security.util.ManifestDigester$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/28	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.x509.X509CRLImpl: void parse(sun.security.util.DerValue)>/new sun.security.x509.X509CRLEntryImpl/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.CyclicNumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.CyclicNumberAxis$CycleBoundTick/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.BoundMethodHandle$Species_L: java.lang.invoke.BoundMethodHandle make(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,java.lang.Object)>/new java.lang.invoke.BoundMethodHandle$Species_L/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/0	<<immutable-context>>	<java.util.Vector: int indexOf(java.lang.Object,int)>/@parameter0
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/19	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void printCharacter(java.lang.Object)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.SpiderWebPlot: void <clinit>()>/new java.awt.Font/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBubbleRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>/new javax.crypto.NoSuchPaddingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/17	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.time.FixedMillisecond::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.System: void initializeSystemClass()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.Short$ShortCache: void <clinit>()>/new java.lang.Short/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.io.PrintWriter: java.nio.charset.Charset toCharset(java.lang.String)>/new java.io.UnsupportedEncodingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedRangeCategoryPlot: void <init>()>/new org.jfree.chart.axis.NumberAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/12	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.time.TimePeriodValues::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	java.lang.Character::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.Currency$1: java.lang.Void run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.axis.SymbolAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<method type ()java.security.PrivilegedAction>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/15	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.misc.Unsafe: void <clinit>()>/new java.lang.String[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/new java.security.cert.X509Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/24	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.xy.DefaultOHLCDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#27#_4471
<<immutable-hcontext>>	<java.io.UnixFileSystem: java.lang.String[] list(java.io.File)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.MemberName: void <init>(java.lang.reflect.Method,boolean)>/new java.lang.AbstractMethodError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1: java.lang.Thread run()>/new java.lang.Thread/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.nio.charset.CoderResult$2: java.nio.charset.CoderResult create(int)>/new java.nio.charset.CoderResult/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYBubbleRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.zip.ZipCoder: java.lang.String toString(byte[],int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.text.TextLine: void <init>(java.lang.String,java.awt.Font,java.awt.Paint)>/new org.jfree.chart.text.TextFragment/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.category.AreaRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.ResourceBundle$Control$CandidateListCache: java.util.List getDefaultList(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new java.util.LinkedList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: void addGrantEntry(sun.security.provider.PolicyParser$GrantEntry,java.security.KeyStore,sun.security.provider.PolicyFile$PolicyInfo)>/new java.security.UnresolvedPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeIntrinsic(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandleImpl$Intrinsic)>/new java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.font.GlyphLayout: void nextEngineRecord(int,int,int,int,sun.font.Font2D,int)>/new sun.font.GlyphLayout$EngineRecord/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.StringCoding: byte[] encode(java.lang.String,char[],int,int)>/new java.lang.StringCoding$StringEncoder/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.security.UnresolvedPermission: java.security.PermissionCollection newPermissionCollection()>/new java.security.UnresolvedPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>/new org.jfree.data.DefaultKeyedValues/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.BarRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.xy.DefaultWindDataset: void <init>(java.util.List,java.lang.Object[][][])>/new java.util.ArrayList/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.StringBuffer: char charAt(int)>/new java.lang.StringIndexOutOfBoundsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.font.SunLayoutEngine: sun.font.GlyphLayout$LayoutEngine getEngine(sun.font.GlyphLayout$LayoutEngineKey)>/new java.util.concurrent.ConcurrentHashMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/16	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/7	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: void createIdentityForms()>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.security.Permissions: java.security.PermissionCollection getPermissionCollection(java.security.Permission,boolean)>/new java.security.PermissionsHash/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.text.normalizer.RuleCharacterIterator: java.lang.String lookahead()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/27	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.HashMap: java.util.HashMap$TreeNode replacementTreeNode(java.util.HashMap$Node,java.util.HashMap$Node)>/new java.util.HashMap$TreeNode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.ResourceBundle$RBClassLoader$1: java.util.ResourceBundle$RBClassLoader run()>/new java.util.ResourceBundle$RBClassLoader/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.text.TextUtilities: org.jfree.chart.text.TextBlock createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)>/new org.jfree.chart.text.TextFragment/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.category.LevelRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.Character$UnicodeBlock: void <clinit>()>/new java.lang.Character$UnicodeBlock/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.font.StandardGlyphVector$GlyphStrike: sun.font.StandardGlyphVector$GlyphStrike create(sun.font.StandardGlyphVector,java.awt.geom.AffineTransform,java.awt.geom.AffineTransform)>/new sun.font.StandardGlyphVector$GlyphStrike/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<mock string concatenation result>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.net.RegisteredDomain: void <clinit>()>/new java.util.HashSet/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl$BindCaller: java.lang.invoke.MethodHandle restoreToType(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.Class)>/new java.lang.invoke.MethodHandleImpl$WrappedMember/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getT61String()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/33	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.misc.URLClassPath$3: sun.misc.URLClassPath$Loader run()>/new sun.misc.URLClassPath$JarLoader/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.axis.PeriodAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: void addPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[],sun.security.provider.PolicyFile$PolicyEntry)>/new sun.security.provider.PolicyParser$PrincipalEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(byte,java.lang.Class,java.lang.invoke.MemberName)>/new java.lang.invoke.DirectMethodHandle$Special/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.String: java.lang.String substring(int,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/30	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.ClassValue: java.lang.ClassValue$Entry makeEntry(java.lang.ClassValue$Version,java.lang.Object)>/new java.lang.ClassValue$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.ExtendedCategoryAxis: org.jfree.chart.text.TextBlock createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)>/new org.jfree.chart.text.TextLine/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.category.LayeredBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.JFreeChart: void <init>(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)>/new org.jfree.chart.title.LegendTitle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<javax.crypto.CryptoPermission: java.security.PermissionCollection newPermissionCollection()>/new javax.crypto.CryptoPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/28	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<java.util.Formatter$BigDecimalLayoutForm: void <clinit>()>/new java.util.Formatter$BigDecimalLayoutForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.xy.DefaultHighLowDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.nio.channels.spi.AbstractInterruptibleChannel: void end(boolean)>/new java.nio.channels.ClosedByInterruptException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.BoxAndWhiskerRenderer: void drawVerticalItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)>/new org.jfree.chart.renderer.Outlier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>/new org.jfree.chart.block.BlockContainer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.StringBuilder: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.ssl.InputRecord: void read(java.io.InputStream,java.io.OutputStream)>/new java.io.EOFException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.RingPlot: void drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)>/new org.jfree.chart.entity.PieSectionEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.category.DefaultIntervalCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.ResourceBundle$Control$CandidateListCache: java.util.List createObject(sun.util.locale.BaseLocale)>/new java.util.LinkedList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.jar.Attributes: java.lang.String putValue(java.lang.String,java.lang.String)>/new java.util.jar.Attributes$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.util.locale.provider.LocaleResources: java.lang.Object[] getDecimalFormatSymbolsData()>/new java.lang.Object[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.text.DateFormat$Field: void <clinit>()>/new java.text.DateFormat$Field/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(byte,java.lang.Class,java.lang.invoke.MemberName)>/new java.lang.invoke.DirectMethodHandle$StaticAccessor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.net.www.ParseUtil: java.net.URL fileToEncodedURL(java.io.File)>/new java.net.URL/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.net.www.ParseUtil: java.net.URL fileToEncodedURL(java.io.File)>/new java.net.URL/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.certpath.X509CertPath: byte[] encodePKIPATH()>/new java.security.cert.CertificateEncodingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<class java.lang.Long>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: void createIdentityForms()>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.font.SunLayoutEngine: sun.font.GlyphLayout$LayoutEngine getEngine(sun.font.GlyphLayout$LayoutEngineKey)>/new java.util.concurrent.ConcurrentHashMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.jca.Providers: void <clinit>()>/new java.lang.InheritableThreadLocal/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxes(int,java.util.List)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: void drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)>/new org.jfree.chart.plot.PieLabelRecord/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: java.util.List getDatasetsMappedToDomainAxis(java.lang.Integer)>/axisIndex#_0
<<immutable-hcontext>>	<sun.misc.URLClassPath$FileLoader$1: java.io.InputStream getInputStream()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot3D: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.entity.PieSectionEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.util.logging.PlatformLogger: sun.util.logging.PlatformLogger getLogger(java.lang.String)>/new java.lang.ref.WeakReference/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.axis.NumberTickUnit::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm bindArgumentForm(int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.axis.SegmentedTimeline$Segment::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/new sun.security.pkcs.SignerInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: void <clinit>()>/new java.awt.BasicStroke/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<java.time.Month: void <clinit>()>/new java.time.Month/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.MethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.DirectMethodHandle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>/new java.security.spec.InvalidKeySpecException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.font.XMap: sun.font.XMap getXMapperInternal(java.lang.String)>/new sun.font.XMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/18	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.StringCoding: char[] decode(java.lang.String,byte[],int,int)>/new java.lang.StringCoding$StringDecoder/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Formatter$Flags: java.util.Formatter$Flags parse(java.lang.String)>/new java.util.DuplicateFormatFlagsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.geom.Rectangle2D$Double/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.xy.DefaultXYZDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYDifferenceRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	<javax.crypto.JceSecurity: void loadPolicies(java.io.File,javax.crypto.CryptoPermissions,javax.crypto.CryptoPermissions)>/new java.util.jar.JarFile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.text.Normalizer$Form: void <clinit>()>/new java.text.Normalizer$Form/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.Character: java.lang.Character valueOf(char)>/new java.lang.Character/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.StringBuffer: char charAt(int)>/new java.lang.StringIndexOutOfBoundsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<org.jfree.chart.axis.CyclicNumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.CyclicNumberAxis$CycleBoundTick/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.image.IndexColorModel: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/17	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.jca.Providers: void <clinit>()>/new java.lang.InheritableThreadLocal/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<class java.lang.String>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.io.FileInputStream: void <init>(java.io.File)>/new java.io.FileNotFoundException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: void drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)>/new org.jfree.chart.plot.PieLabelRecord/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.ProcessEnvironment$Value: java.lang.ProcessEnvironment$Value valueOf(byte[])>/new java.lang.ProcessEnvironment$Value/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/13	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.security.CryptoPrimitive: void <clinit>()>/new java.security.CryptoPrimitive/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.VectorRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<java.lang.ClassLoader: void loadLibrary(java.lang.Class,java.lang.String,boolean)>/new java.lang.UnsatisfiedLinkError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.CyclicXYItemRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.nio.charset.CoderResult: void throwException()>/new java.nio.charset.MalformedInputException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.category.CategoryDataset,org.jfree.data.KeyToGroupMap)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.CyclicXYItemRenderer$OverwriteDataSet::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.locale.LocaleUtils: java.lang.String toUpperString(java.lang.String)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name withConstraint(java.lang.Object)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.util.PropertyExpander: java.lang.String expand(java.lang.String,boolean)>/new sun.security.util.PropertyExpander$ExpandException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYShapeRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void printCharacter(java.lang.Object)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.awt.SunHints: void <clinit>()>/new sun.awt.SunHints$Value/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.locale.provider.LocaleProviderAdapter$Type: void <clinit>()>/new sun.util.locale.provider.LocaleProviderAdapter$Type/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/14	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$GrantEntry parseGrantEntry()>/new sun.security.provider.PolicyParser$GrantEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/12	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.FileFontStrike: java.awt.geom.Point2D$Float getGlyphMetrics(int,boolean)>/new java.util.concurrent.ConcurrentHashMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.InvokerBytecodeGenerator: java.lang.invoke.MemberName resolveInvokerMember(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList$Itr: java.lang.Object next()>/$stack3
<<immutable-hcontext>>	<sun.security.pkcs.PKCS9Attributes: byte[] decode(sun.security.util.DerInputStream)>/new sun.security.pkcs.PKCS9Attribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.net.URLClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>/new java.net.SocketPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.axis.ExtendedCategoryAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.misc.Launcher$AppClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>/new java.lang.RuntimePermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.Locale$Category: void <clinit>()>/new java.util.Locale$Category/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.SubCategoryAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.image.BufferedImage: void <init>(int,int,int)>/new java.awt.image.IndexColorModel/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/33	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/14	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.WaferMapRenderer: void makePaintIndex()>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.font.XMap: sun.font.XMap getXMapperInternal(java.lang.String)>/new sun.font.XMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>/new java.util.zip.ZipFile$ZipFileInflaterInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList: boolean add(java.lang.Object)>/@this
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/12	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/21	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.Formatter: java.util.Formatter format(java.util.Locale,java.lang.String,java.lang.Object[])>/new java.util.MissingFormatArgumentException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.locale.LocaleUtils: java.lang.String toTitleString(java.lang.String)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.awt.geom.Order1: sun.awt.geom.Curve getSubCurve(double,double,int)>/new sun.awt.geom.Order1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/11	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<class java.lang.Byte>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.Polygon/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: void createIdentityForms()>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<class java.lang.invoke.CallSite>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.WaferMapRenderer: void makeValueIndex(java.lang.Number,java.lang.Number,java.util.Set)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.xy.WindDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<org.jfree.chart.axis.LogarithmicAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.Quarter::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.locale.LocaleExtensions: void <init>(java.util.Map,java.util.Set,java.util.Map)>/new sun.util.locale.Extension/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: java.lang.invoke.LambdaForm$Name[] buildEmptyNames(int,java.lang.String)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.category.CategoryStepRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>/new java.nio.DirectByteBuffer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot3D: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new java.awt.geom.Arc2D$Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.Minute::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.font.FileFont: sun.font.FontStrike createStrike(sun.font.FontStrikeDesc)>/new sun.font.FileFontStrike/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseNetscapeCertChain(sun.security.util.DerValue)>/new java.security.cert.X509Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultMultiValueCategoryDataset: void <init>()>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedAreaRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<sun.security.ssl.SupportedEllipticCurvesExtension$NamedEllipticCurve: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String,boolean)>/new java.lang.RuntimeException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.RingPlot: void drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)>/new org.jfree.chart.entity.PieSectionEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.HashMap: java.util.HashMap$TreeNode replacementTreeNode(java.util.HashMap$Node,java.util.HashMap$Node)>/new java.util.HashMap$TreeNode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.font.FontResolver: void <init>()>/new java.awt.Font/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<sun.security.util.KeyUtil: void validateDHPublicKey(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>/new java.security.InvalidKeyException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.xy.MatrixSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: void drawStackVertical(java.util.List,java.lang.Comparable,java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset)>/new java.lang.Object[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<java.lang.StringCoding: byte[] encode(java.lang.String,char[],int,int)>/new java.lang.StringCoding$StringEncoder/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.misc.URLClassPath$JarLoader: java.util.jar.JarFile getJarFile(java.net.URL)>/new java.util.jar.JarFile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<class sun.invoke.util.Wrapper>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/18	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.PeriodAxis: void drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	org.jfree.data.statistics.DefaultStatisticalCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.String: java.lang.String substring(int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/30	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.SymbolAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator: void <clinit>()>/new sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.xy.XYBarDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#27#_4471
<<immutable-hcontext>>	<sun.security.util.DisabledAlgorithmConstraints$Constraints: void <init>(java.lang.String[])>/new sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.MemberName$Factory: java.lang.invoke.MemberName[] newMemberBuffer(int)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.math.BigInteger: void <clinit>()>/new java.math.BigInteger[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.xy.MatrixSeries::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/6	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: int index(java.lang.String)>/new java.lang.AssertionError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.security.SecureClassLoader: java.security.ProtectionDomain getProtectionDomain(java.security.CodeSource)>/new java.security.ProtectionDomain/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<java.util.Locale: void readObject(java.io.ObjectInputStream)>/new java.util.IllformedLocaleException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.awt.geom.Curve: void insertLine(java.util.Vector,double,double,double,double)>/new sun.awt.geom.Order1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeVarargsCollector(java.lang.invoke.MethodHandle,java.lang.Class)>/new java.lang.invoke.MethodHandleImpl$AsVarargsCollector/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/7	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/11	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.nio.channels.spi.AbstractInterruptibleChannel: void end(boolean)>/new java.nio.channels.ClosedByInterruptException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class java.lang.Byte>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class java.lang.invoke.BoundMethodHandle>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.xy.XIntervalDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.awt.image.BufferedImage: void <init>(int,int,int)>/new java.awt.image.ComponentColorModel/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.category.CategoryDataset,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYShapeRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYBubbleRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.Font: java.awt.Font deriveFont(java.util.Map)>/new java.awt.Font/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.awt.DebugSettings: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.xy.YIntervalSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$PermissionEntry parsePermissionEntry()>/new sun.security.provider.PolicyParser$PermissionEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getDeferredInstance(sun.java2d.cmm.ProfileDeferralInfo)>/new java.awt.color.ICC_Profile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$DomainEntry parseDomainEntry()>/new sun.security.provider.PolicyParser$KeyStoreEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack49
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList: void rangeCheck(int)>/l0#_0
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(byte,java.lang.Class,java.lang.invoke.MemberName)>/new java.lang.invoke.DirectMethodHandle$Special/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyFile$4: java.lang.Void run()>/new sun.security.provider.PolicyFile$PolicyEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.ScatterRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation_$$A_5#_4464
<<immutable-hcontext>>	<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>/new java.security.MessageDigest$Delegate/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/21	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormBuffer: java.lang.invoke.LambdaFormBuffer replaceFunctions(java.lang.invoke.LambdaForm$NamedFunction[],java.lang.invoke.LambdaForm$NamedFunction[],java.lang.Object[])>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.geom.Rectangle2D$Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.SimpleMethodHandle: java.lang.invoke.BoundMethodHandle make(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.SimpleMethodHandle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal)>/new java.lang.ArithmeticException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.category.DefaultIntervalCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.xy.DefaultXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYShapeRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	org.jfree.data.gantt.XYTaskDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#27#_4471
<<immutable-hcontext>>	<java.lang.Short: java.lang.Short valueOf(short)>/new java.lang.Short/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.DeviationRenderer: void drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new double[]/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.VectorRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis3D: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/27	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm makeArgumentCombinationForm(int,java.lang.invoke.MethodType,boolean,boolean)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle$Accessor: java.lang.invoke.MethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.DirectMethodHandle$Accessor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<class sun.reflect.Reflection>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.statistics.DefaultMultiValueCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.nio.charset.Charset: void <clinit>()>/new java.lang.ThreadLocal/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.PolicyFile$4: java.lang.Void run()>/new java.util.PropertyPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle$StaticAccessor: java.lang.invoke.MethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.DirectMethodHandle$StaticAccessor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.awt.font.TextLine: java.awt.font.TextLine standardCreateTextLine(java.awt.font.FontRenderContext,java.text.AttributedCharacterIterator,char[],float[])>/new java.awt.font.StyledParagraph/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.ConditionalSpecialCasing: void <clinit>()>/new java.util.HashSet/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.CategoryStepRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.CyclicXYItemRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.xy.DefaultXYZDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/7	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>/new sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass1(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new org.jfree.chart.entity.XYItemEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>/new java.security.MessageDigest$Delegate/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.WaferMapRenderer: org.jfree.chart.LegendItemCollection getLegendCollection()>/new org.jfree.chart.LegendItem/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.misc.URLClassPath$JarLoader: java.util.jar.JarFile getJarFile(java.net.URL)>/new java.util.jar.JarFile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/17	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.nio.file.LinkOption: void <clinit>()>/new java.nio.file.LinkOption/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.awt.color.ICC_Profile$3: java.io.FileInputStream run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<method type ()java.security.PrivilegedAction>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<javax.crypto.CryptoPermission: java.security.PermissionCollection newPermissionCollection()>/new javax.crypto.CryptoPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.text.TextLine: void <init>(java.lang.String,java.awt.Font,java.awt.Paint)>/new org.jfree.chart.text.TextFragment/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.xy.VectorDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.util.calendar.ZoneInfoFile: java.lang.String toCustomID(int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.util.locale.LocaleExtensions: void <init>(java.util.Map,java.util.Set,java.util.Map)>/new sun.util.locale.UnicodeLocaleExtension/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Formatter$BigDecimalLayoutForm: void <clinit>()>/new java.util.Formatter$BigDecimalLayoutForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedFieldLambdaForm(byte,boolean,int)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYBlockRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.text.AttributedString$AttributeMap: java.util.Set entrySet()>/new java.text.AttributeEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYAreaRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYShapeRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer: void drawVerticalItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new org.jfree.chart.renderer.Outlier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.axis.CategoryAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.awt.geom.AreaOp: java.util.Vector pruneEdges(java.util.Vector)>/new sun.awt.geom.CurveLink/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.Permission getKnownInstance(java.lang.Class,java.lang.String,java.lang.String)>/new java.net.SocketPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.WaferMapRenderer: void makePaintIndex()>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.awt.geom.AreaOp: void addEdges(java.util.Vector,java.util.Vector,int)>/new sun.awt.geom.Edge/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.category.LineAndShapeRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.PolarPlot: java.util.List refreshAngleTicks()>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.text.DecimalFormat: java.lang.String fastFormat(double)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.ProcessEnvironment$Variable: java.lang.ProcessEnvironment$Variable valueOf(byte[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.Package$1: java.lang.Package run()>/new java.lang.Package/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor$Transform: java.lang.invoke.LambdaFormEditor$Transform withResult(java.lang.invoke.LambdaForm)>/new java.lang.invoke.LambdaFormEditor$Transform/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<class java.lang.Double>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.text.normalizer.RuleCharacterIterator: java.lang.String lookahead()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.text.normalizer.VersionInfo: sun.text.normalizer.VersionInfo getInstance(int,int,int,int)>/new sun.text.normalizer.VersionInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.FixedMillisecond::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer: void drawVerticalItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new org.jfree.chart.renderer.Outlier/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.OutlierListCollection: boolean add(org.jfree.chart.renderer.Outlier)>/new org.jfree.chart.renderer.OutlierList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: java.util.List createStackedValueList(org.jfree.data.category.CategoryDataset,java.lang.Comparable,int[],double,boolean)>/new java.lang.Object[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.CandlestickRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	<sun.security.ssl.TrustManagerFactoryImpl: void engineInit(java.security.KeyStore)>/new java.security.KeyStoreException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.util.DerInputStream: sun.security.util.ObjectIdentifier getOID()>/new sun.security.util.ObjectIdentifier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedFieldLambdaForm(byte,boolean,int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/14	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.ThermometerPlot: void <init>(org.jfree.data.general.ValueDataset)>/new org.jfree.chart.axis.NumberAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/axis#_0
<<immutable-hcontext>>	<java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>/new java.awt.color.ICC_ColorSpace/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Formatter: java.util.Formatter$FormatString[] parse(java.lang.String)>/new java.util.Formatter$FixedString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.title.LegendItemBlockContainer: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>/new org.jfree.chart.entity.LegendItemEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/12	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.BarRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.provider.PolicyFile$4: java.lang.Void run()>/new java.util.PropertyPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.text.AttributedCharacterIterator$Attribute: void <clinit>()>/new java.text.AttributedCharacterIterator$Attribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.util.locale.provider.LocaleResources: java.lang.String[][] getZoneStrings()>/new java.lang.String[][]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.util.PolicyUtil: java.io.InputStream getInputStream(java.net.URL)>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultMultiValueCategoryDataset: void <init>()>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.CyclicXYItemRenderer$OverwriteDataSet::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.awt.geom.Order3: sun.awt.geom.Curve getSubCurve(double,double,int)>/new sun.awt.geom.Order3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.xy.DefaultTableXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#27#_4471
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: void <clinit>()>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.Double: java.lang.Double valueOf(java.lang.String)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>/new java.security.spec.InvalidKeySpecException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/19	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getIA5String()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class java.lang.invoke.MethodHandleImpl>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.Permission getKnownInstance(java.lang.Class,java.lang.String,java.lang.String)>/new java.net.NetPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.Signature$CipherAdapter: void engineSetParameter(java.lang.String,java.lang.Object)>/new java.security.InvalidParameterException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.Base64$Decoder: byte[] decode(byte[])>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYAreaRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.text.MergeCollation: void fixEntry(java.text.PatternEntry)>/new java.text.ParseException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<javax.crypto.Cipher: java.util.List getTransforms(java.lang.String)>/new javax.crypto.Cipher$Transform/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.util.SignatureFileVerifier: java.security.CodeSigner[] getSigners(sun.security.pkcs.SignerInfo[],sun.security.pkcs.PKCS7)>/new java.security.CodeSigner/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.text.AttributedString$AttributeMap: java.util.Set entrySet()>/new java.text.AttributeEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.xy.XIntervalSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/14	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.regex.Pattern$CharPropertyNames: void defClone(java.lang.String,java.util.regex.Pattern$CharPropertyNames$CloneableProperty)>/new java.util.regex.Pattern$CharPropertyNames$4/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedDomainXYPlot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.servlet.ServletUtilities: void sendTempFile(java.io.File,javax.servlet.http.HttpServletResponse,java.lang.String)>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Arrays: java.util.List asList(java.lang.Object[])>/new java.util.Arrays$ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.Formatter: java.util.Formatter$FormatString[] parse(java.lang.String)>/new java.util.Formatter$FixedString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$6/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.JFreeChartInfo: void <init>()>/new org.jfree.chart.ui.Contributor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: int precision(java.lang.String)>/new java.util.IllegalFormatPrecisionException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle$StaticAccessor: java.lang.invoke.MethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.DirectMethodHandle$StaticAccessor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.jar.Attributes: void read(java.util.jar.Manifest$FastInputStream,byte[])>/new java.lang.String/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.LinkedHashMap: java.util.HashMap$TreeNode replacementTreeNode(java.util.HashMap$Node,java.util.HashMap$Node)>/new java.util.HashMap$TreeNode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.text.Normalizer$Form: void <clinit>()>/new java.text.Normalizer$Form/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>/new java.security.spec.InvalidKeySpecException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.time.Quarter::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.font.NativeFont: sun.font.FontStrike createStrike(sun.font.FontStrikeDesc)>/new sun.font.NativeStrike/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.ProcessEnvironment$Variable: java.lang.ProcessEnvironment$Variable valueOf(byte[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)>/new sun.security.pkcs.SignerInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeWrappedMember(java.lang.invoke.MethodHandle,java.lang.invoke.MemberName,boolean)>/new java.lang.invoke.MethodHandleImpl$WrappedMember/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<java.lang.AbstractStringBuilder: java.lang.String substring(int,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.statistics.SimpleHistogramBin::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.net.URLClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>/new java.io.FilePermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.image.ColorModel: byte[] getGray16TosRGB8LUT(java.awt.color.ICC_ColorSpace)>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.xy.DefaultTableXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.ResourceBundle$RBClassLoader$1: java.util.ResourceBundle$RBClassLoader run()>/new java.util.ResourceBundle$RBClassLoader/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<java.security.Signature$Delegate: void chooseFirstProvider()>/new java.lang.Exception/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.text.CharacterIteratorFieldDelegate: void formatted(java.text.Format$Field,java.lang.Object,int,int,java.lang.StringBuffer)>/new java.text.AttributedString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.category.IntervalBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<org.jfree.chart.ChartUtilities: void saveChartAsJPEG(java.io.File,org.jfree.chart.JFreeChart,int,int,org.jfree.chart.ChartRenderingInfo)>/new java.io.FileOutputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.ClassLoader: boolean loadLibrary0(java.lang.Class,java.io.File)>/new java.lang.ClassLoader$NativeLibrary/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYLine3DRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class java.lang.invoke.CallSite>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	org.jfree.data.xy.DefaultTableXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation_$$A_1#_4442
<<immutable-hcontext>>	org.jfree.chart.axis.SegmentedTimeline$BaseTimelineSegmentRange::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.xy.OHLCDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor$Transform: java.lang.invoke.LambdaFormEditor$Transform withResult(java.lang.invoke.LambdaForm)>/new java.lang.invoke.LambdaFormEditor$Transform/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: java.lang.invoke.LambdaForm$Name argument(int,java.lang.invoke.LambdaForm$BasicType)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultMultiValueCategoryDataset: void <init>()>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<java.time.Month: void <clinit>()>/new java.time.Month/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.HashMap: java.util.HashMap$Node replacementNode(java.util.HashMap$Node,java.util.HashMap$Node)>/new java.util.HashMap$Node/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: java.util.List createStackedValueList(org.jfree.data.category.CategoryDataset,java.lang.Comparable,int[],double,boolean)>/new java.lang.Object[]/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.util.locale.LocaleExtensions: void <init>(java.util.Map,java.util.Set,java.util.Map)>/new sun.util.locale.UnicodeLocaleExtension/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/10	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.text.normalizer.VersionInfo: sun.text.normalizer.VersionInfo getInstance(int,int,int,int)>/new sun.text.normalizer.VersionInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.Permission getKnownInstance(java.lang.Class,java.lang.String,java.lang.String)>/new java.net.SocketPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.Long: java.lang.String toString(long)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedRangeXYPlot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.nio.fs.Globs: java.lang.String toRegexPattern(java.lang.String,boolean)>/new java.util.regex.PatternSyntaxException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.DeviationRenderer: void drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new double[]/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.util.PropertyExpander: java.lang.String expand(java.lang.String,boolean)>/new sun.security.util.PropertyExpander$ExpandException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.text.DateFormatSymbols: void initializeData(java.util.Locale)>/new java.text.DateFormatSymbols/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.axis.ModuloAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.nio.ch.Util: void <clinit>()>/new sun.nio.ch.Util$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.nio.CharBuffer: java.nio.CharBuffer get(char[],int,int)>/new java.nio.BufferUnderflowException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedRangeXYPlot: void <init>()>/new org.jfree.chart.axis.NumberAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/16	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>/new java.util.zip.ZipFile$ZipFileInflaterInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/39	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.cert.Certificate[] getCertificates(java.security.KeyStore,java.lang.String,sun.security.provider.PolicyFile$PolicyInfo)>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.SymbolAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/1	<<immutable-context>>	<java.lang.Integer: void <init>(int)>/@this
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.WaterfallBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$9/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.util.DerIndefLenConverter: byte[] getLengthBytes(int)>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.misc.URLClassPath$3: sun.misc.URLClassPath$Loader run()>/new sun.misc.URLClassPath$JarLoader/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.WaterfallBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<java.util.ResourceBundle$RBClassLoader$1: java.util.ResourceBundle$RBClassLoader run()>/new java.util.ResourceBundle$RBClassLoader/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.StackedXYBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.axis.CategoryAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: void drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.awt.geom.Order2: sun.awt.geom.Curve getSubCurve(double,double,int)>/new sun.awt.geom.Order2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/9	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/25	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToDomainAxes(int,java.util.List)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.awt.Toolkit$1: java.lang.String run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.category.CategoryDataset,org.jfree.data.KeyToGroupMap)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot3D: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new java.awt.geom.Arc2D$Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.SpiderWebPlot: org.jfree.chart.LegendItemCollection getLegendItems()>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Formatter: java.util.Formatter format(java.util.Locale,java.lang.String,java.lang.Object[])>/new java.util.MissingFormatArgumentException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.axis.SubCategoryAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.time.TimeSeriesDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.net.ftp.FtpClientProvider: boolean loadProviderFromProperty()>/new java.util.ServiceConfigurationError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList: void rangeCheck(int)>/l0#_0
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.cert.Certificate[] getSignerCertificates(java.security.CodeSource)>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.xy.YIntervalSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.VectorRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	org.jfree.chart.axis.NumberAxis3D::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.VectorRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDotRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedRangeCategoryPlot: void <init>()>/new org.jfree.chart.axis.NumberAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>/new java.util.Hashtable$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/7	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.nio.charset.CoderResult$1: java.nio.charset.CoderResult create(int)>/new java.nio.charset.CoderResult/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: void computeInitialPreparedForms()>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.regex.Pattern$CharPropertyNames: void defClone(java.lang.String,java.util.regex.Pattern$CharPropertyNames$CloneableProperty)>/new java.util.regex.Pattern$CharPropertyNames$4/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList: void <init>()>/l0#_0
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: void <clinit>()>/new java.awt.BasicStroke/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.category.CategoryDataset,org.jfree.data.KeyToGroupMap)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/10	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.xy.XYCoordinate::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.misc.URLClassPath$JarLoader$3: sun.misc.URLClassPath$JarLoader run()>/new sun.misc.URLClassPath$JarLoader/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.Package$1: java.lang.Package run()>/new java.lang.Package/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: void expandSelf(sun.security.provider.PolicyFile$SelfPermission,java.util.List,java.security.Principal[],java.security.Permissions)>/new java.security.UnresolvedPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.ref.Reference: void <clinit>()>/new java.lang.ref.Reference$ReferenceHandler/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCCategoryDataset: void executeQuery(java.sql.Connection,java.lang.String)>/new java.lang.Long/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.util.locale.provider.LocaleResources: void <clinit>()>/new java.lang.Object/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.MemberName: java.lang.IllegalAccessException makeAccessException(java.lang.String,java.lang.Object)>/new java.lang.IllegalAccessException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.BoxAndWhiskerRenderer: void drawVerticalItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)>/new org.jfree.chart.renderer.Outlier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.xy.XYIntervalSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.SubCategoryAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.BasicPermission: java.security.PermissionCollection newPermissionCollection()>/new java.security.BasicPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.time.TimeSeries::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToDomainAxes(int,java.util.List)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.util.PolicyUtil: java.io.InputStream getInputStream(java.net.URL)>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.xy.WindDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.text.MergeCollation: void fixEntry(java.text.PatternEntry)>/new java.text.ParseException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.DynamicTimeSeriesCollection: void findDomainLimits()>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/17	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.MultiplePiePlot: org.jfree.chart.LegendItemCollection getLegendItems()>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.ComparableObjectItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.ClassLoader: java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>/new java.lang.Package/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.CategoryStepRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.FileFont: sun.font.FontStrike createStrike(sun.font.FontStrikeDesc)>/new sun.font.FileFontStrike/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(java.util.List,boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.YIntervalRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/19	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.WaterfallBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	org.jfree.data.xy.YIntervalSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.MultiplePiePlot: org.jfree.chart.LegendItemCollection getLegendItems()>/new org.jfree.chart.LegendItem/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxes(int,java.util.List)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.Color: void <clinit>()>/new java.awt.Color/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/21	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/32	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.VectorRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<sun.security.x509.X500Name: void parseDN(java.lang.String,java.util.Map)>/new sun.security.x509.RDN/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle$Special: java.lang.invoke.MethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.DirectMethodHandle$Special/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.time.ohlc.OHLCSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxes(int,java.util.List)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.StringBuffer: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/new java.util.TreeMap$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/6	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.jar.Attributes: void read(java.util.jar.Manifest$FastInputStream,byte[])>/new java.lang.String/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/9	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/27	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<class java.lang.Double>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.DeviationRenderer: void drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new double[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.awt.color.ICC_Profile$3: java.io.FileInputStream run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	org.jfree.chart.renderer.category.WaterfallBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/10	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.ohlc.OHLCItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.util.DerInputStream: sun.security.util.ObjectIdentifier getOID()>/new sun.security.util.ObjectIdentifier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<class java.lang.Throwable>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.SymbolAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/1	<<immutable-context>>	<java.util.LinkedList: int indexOf(java.lang.Object)>/@parameter0
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm spreadArgumentsForm(int,java.lang.Class,int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/18	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/23	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: void drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)>/new org.jfree.chart.entity.PieSectionEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<class java.lang.invoke.MethodHandleImpl$ArrayAccessor>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.gantt.SlidingGanttCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<org.jfree.chart.axis.CyclicNumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.CyclicNumberAxis$CycleBoundTick/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/6	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: java.util.List createStackedValueList(org.jfree.data.category.CategoryDataset,java.lang.Comparable,int[],double,boolean)>/new java.lang.Object[]/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>/new java.security.MessageDigest$Delegate/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.geom.Ellipse2D$Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.io.File: java.io.File getParentFile()>/new java.io.File/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<com.sun.beans.finder.MethodFinder: java.lang.reflect.Method findInstanceMethod(java.lang.Class,java.lang.String,java.lang.Class[])>/new java.lang.NoSuchMethodException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.YIntervalRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.general.DefaultValueDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.net.SocketPermission: java.security.PermissionCollection newPermissionCollection()>/new java.net.SocketPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.time.Day::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/11	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>/new java.security.spec.InvalidKeySpecException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.AbstractValidatingLambdaMetafactory: void <init>(java.lang.invoke.MethodHandles$Lookup,java.lang.invoke.MethodType,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,java.lang.Class[],java.lang.invoke.MethodType[])>/new java.lang.invoke.LambdaConversionException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.axis.LogarithmicAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.ClassLoader: java.security.ProtectionDomain preDefineClass(java.lang.String,java.security.ProtectionDomain)>/new java.lang.NoClassDefFoundError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxes(int,java.util.List)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/16	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<sun.util.locale.BaseLocale$Cache: sun.util.locale.BaseLocale createObject(sun.util.locale.BaseLocale$Key)>/new sun.util.locale.BaseLocale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.text.AttributedString$AttributeMap: java.util.Set entrySet()>/new java.text.AttributeEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.category.LineAndShapeRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<sun.security.jca.Providers: void <clinit>()>/new java.lang.InheritableThreadLocal/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.WaferMapRenderer: org.jfree.chart.LegendItemCollection getLegendCollection()>/new org.jfree.chart.LegendItem/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.DeviationRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: void drawStackVertical(java.util.List,java.lang.Comparable,java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset)>/new java.lang.Object[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.util.locale.LanguageTag: void <clinit>()>/new java.lang.String[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: org.jfree.chart.LegendItemCollection getLegendItems()>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.ChartUtilities: void saveChartAsPNG(java.io.File,org.jfree.chart.JFreeChart,int,int,org.jfree.chart.ChartRenderingInfo)>/new java.io.FileOutputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.awt.image.ColorModel: byte[] getGray8TosRGB8LUT(java.awt.color.ICC_ColorSpace)>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToRangeAxes(int,java.util.List)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$8/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/15	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.security.ProtectionDomain$WeakProtectionDomainKey: void <clinit>()>/new java.security.ProtectionDomain$Key/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.text.NumberFormat$Field: void <clinit>()>/new java.text.NumberFormat$Field/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class java.lang.invoke.BoundMethodHandle>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<javax.crypto.ExemptionMechanism: javax.crypto.ExemptionMechanism getInstance(java.lang.String)>/new javax.crypto.ExemptionMechanism/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.Provider$Service: void addAttribute(java.lang.String,java.lang.String)>/new java.security.Provider$UString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.Class: java.lang.Class$ReflectionData newReflectionData(java.lang.ref.SoftReference,int)>/new java.lang.Class$ReflectionData/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/13	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])>/new java.security.ProtectionDomain$Key/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.axis.LogAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/@parameter0
<<immutable-hcontext>>	<java.nio.file.Files: java.nio.file.Path createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>/new java.nio.file.FileSystemException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToDomainAxis(int,int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.time.Year::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.ConditionalSpecialCasing: void <clinit>()>/new java.util.HashSet/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.category.CategoryDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<java.util.LinkedHashMap: java.util.HashMap$Node replacementNode(java.util.HashMap$Node,java.util.HashMap$Node)>/new java.util.LinkedHashMap$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYBlockRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.net.URI$Parser: void fail(java.lang.String)>/new java.net.URISyntaxException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getInstance(byte[])>/new java.awt.color.ICC_Profile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>/new java.security.NoSuchProviderException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class java.lang.invoke.LambdaForm>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.MemberName: java.lang.IllegalAccessException makeAccessException(java.lang.String,java.lang.Object)>/new java.lang.IllegalAccessException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Base64$Decoder: byte[] decode(byte[])>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$19/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: void drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>/new java.security.Provider$EngineDescription/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.VectorRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.jca.ProviderList: void <clinit>()>/new sun.security.jca.ProviderList$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYAreaRenderer2: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$10/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$DomainEntry parseDomainEntry()>/new sun.security.provider.PolicyParser$DomainEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.Short: short parseShort(java.lang.String,int)>/new java.lang.NumberFormatException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$13/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.axis.CyclicNumberAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.image.BufferedImage: void <init>(int,int,int)>/new java.awt.image.ComponentColorModel/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.axis.LogarithmicAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<method type ()java.security.PrivilegedAction>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.xy.DefaultWindDataset: void <init>(java.util.List,java.lang.Object[][][])>/new java.util.ArrayList/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<<main-thread>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.zip.ZipInputStream: void <init>(java.io.InputStream,java.nio.charset.Charset)>/new java.util.zip.Inflater/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYShapeRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/30	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.category.CategoryStepRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.x509.CRLExtensions: void init(sun.security.util.DerInputStream)>/new sun.security.x509.Extension/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$9/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.time.Month::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.io.ObjectInputStream$BlockDataInputStream: int readBlockHeader(boolean)>/new java.io.StreamCorruptedException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/39	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.misc.ProxyGenerator$ConstantPool$ValueEntry: void write(java.io.DataOutputStream)>/new java.lang.InternalError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.nio.cs.ThreadLocalCoders$Cache: void <init>(int)>/new java.lang.ThreadLocal/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$ServiceKey/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.xy.DefaultIntervalXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.x509.CertificateValidity: void construct(sun.security.util.DerValue)>/new java.io.IOException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<java.lang.Long: java.lang.String toString(long,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.time.TimeSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.Long: java.lang.Long valueOf(long)>/new java.lang.Long/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.MemberName: java.lang.ReflectiveOperationException makeAccessException()>/new java.lang.NoSuchFieldException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$12/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.TreeMap$DescendingKeySpliterator: void forEachRemaining(java.util.function.Consumer)>/new java.lang.NullPointerException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.io.BufferedReader: java.lang.String readLine(boolean)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList: java.lang.String outOfBoundsMsg(int)>/@this
<<immutable-hcontext>>	<sun.security.util.ObjectIdentifier: sun.security.util.ObjectIdentifier newInternal(int[])>/new sun.security.util.ObjectIdentifier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.nio.file.AccessMode: void <clinit>()>/new java.nio.file.AccessMode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.MemberName$Factory: java.lang.invoke.MemberName[] newMemberBuffer(int)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.time.OffsetTime: java.time.OffsetTime from(java.time.temporal.TemporalAccessor)>/new java.time.DateTimeException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.util.locale.provider.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.misc.FormattedFloatingDecimal$Form: void <clinit>()>/new sun.misc.FormattedFloatingDecimal$Form/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name withConstraint(java.lang.Object)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.Decoration: sun.font.Decoration getDecoration(sun.font.AttributeValues)>/new sun.font.Decoration$DecorationImpl/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl$Intrinsic: void <clinit>()>/new java.lang.invoke.MethodHandleImpl$Intrinsic/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.category.MinMaxCategoryRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYSplineRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/15	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.WaterfallBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/20	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: void drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)>/new org.jfree.chart.plot.PieLabelRecord/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeVarargsCollector(java.lang.invoke.MethodHandle,java.lang.Class)>/new java.lang.invoke.MethodHandleImpl$AsVarargsCollector/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.VectorRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<sun.util.locale.LocaleUtils: java.lang.String toTitleString(java.lang.String)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.AbstractStringBuilder: java.lang.String substring(int,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.WaterfallBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<sun.util.locale.LanguageTag: void <clinit>()>/new java.lang.String[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.xy.MatrixSeries::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/new sun.security.x509.X509CertImpl/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.awt.Polygon: void <init>(int[],int[],int)>/new java.lang.NegativeArraySizeException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(java.util.List,boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<java.lang.String: java.lang.String valueOf(char[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.awt.geom.AreaOp: java.util.Vector pruneEdges(java.util.Vector)>/new sun.awt.geom.CurveLink/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.xy.DefaultXYZDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<java.util.Vector: int hugeCapacity(int)>/new java.lang.OutOfMemoryError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.time.temporal.ChronoUnit: void <clinit>()>/new java.time.temporal.ChronoUnit/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.ClusteredXYBarRenderer: org.jfree.data.Range findDomainBoundsWithOffset(org.jfree.data.xy.IntervalXYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/12	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	org.jfree.data.xy.DefaultIntervalXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYAreaRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.statistics.SimpleHistogramDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.HashMap: java.util.HashMap$TreeNode newTreeNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)>/new java.util.HashMap$TreeNode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.io.BufferedReader: java.lang.String readLine(boolean)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(java.util.List,boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	org.jfree.chart.renderer.category.AreaRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.PropertyPermission: java.security.PermissionCollection newPermissionCollection()>/new java.util.PropertyPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: java.util.List createStackedValueList(org.jfree.data.category.CategoryDataset,java.lang.Comparable,int[],double,boolean)>/new java.lang.Object[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void checkGeneral()>/new java.util.MissingFormatWidthException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<java.security.Signature$Delegate: java.security.SignatureSpi newInstance(java.security.Provider$Service)>/new java.security.NoSuchAlgorithmException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.util.locale.InternalLocaleBuilder: void setUnicodeLocaleExtension(java.lang.String)>/new sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedAreaRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<javax.crypto.CryptoAllPermission: void <clinit>()>/new javax.crypto.CryptoAllPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<class sun.invoke.util.Wrapper>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.servlet.ServletUtilities: void sendTempFile(java.io.File,javax.servlet.http.HttpServletResponse,java.lang.String)>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/17	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/35	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYShapeRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/new sun.security.pkcs.SignerInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void checkNumeric()>/new java.util.IllegalFormatFlagsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYBubbleRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.geom.Ellipse2D$Double/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: void drawStackHorizontal(java.util.List,java.lang.Comparable,java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset)>/new java.lang.Object[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: void executeQuery(java.sql.Connection,java.lang.String)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.category.CategoryDataset,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<sun.security.x509.X509CertImpl: java.lang.Object get(java.lang.String)>/new java.security.cert.CertificateParsingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.category.CategoryDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/13	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.jdbc.JDBCXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.x509.RDN: void <init>(java.lang.String,java.util.Map)>/new sun.security.x509.AVA/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.invoke.util.Wrapper: void <clinit>()>/new sun.invoke.util.Wrapper/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.ssl.SupportedEllipticCurvesExtension$NamedEllipticCurve: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String,boolean)>/new java.lang.RuntimeException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.nio.charset.CoderResult: void throwException()>/new java.nio.charset.UnmappableCharacterException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<<string-constant>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/24	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.xy.NormalizedMatrixSeries::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>/new java.security.MessageDigest$Delegate/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.jca.ProviderList: void <clinit>()>/new sun.security.jca.ProviderList$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.xy.DefaultWindDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#27#_4471
<<immutable-hcontext>>	<java.lang.System: void initializeSystemClass()>/new java.io.FileOutputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.Invokers: java.lang.invoke.LambdaForm invokeHandleForm(java.lang.invoke.MethodType,boolean,int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/32	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.time.temporal.ChronoUnit: void <clinit>()>/new java.time.temporal.ChronoUnit/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.statistics.DefaultMultiValueCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<sun.reflect.Reflection: void <clinit>()>/new java.lang.String[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.Integer: java.lang.String toString(int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle makeAllocator(java.lang.invoke.MemberName)>/new java.lang.invoke.DirectMethodHandle$Constructor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.gantt.TaskSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<javax.crypto.CryptoPermission: java.security.PermissionCollection newPermissionCollection()>/new javax.crypto.CryptoPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.WeakHashMap: void <clinit>()>/new java.lang.Object/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseNetscapeCertChain(sun.security.util.DerValue)>/new java.security.cert.X509Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/13	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.java2d.Disposer: void addObjectRecord(java.lang.Object,sun.java2d.DisposerRecord)>/new java.lang.ref.WeakReference/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.SubCategoryAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.time.Month: void <clinit>()>/new java.time.Month/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.text.MessageFormat$Field: void <clinit>()>/new java.text.MessageFormat$Field/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.Polygon: void <init>(int[],int[],int)>/new java.lang.NegativeArraySizeException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void failMismatch(java.util.Formatter$Flags,char)>/new java.util.FormatFlagsConversionMismatchException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: void executeQuery(java.sql.Connection,java.lang.String)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.security.Security: void initialize()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseNetscapeCertChain(sun.security.util.DerValue)>/new sun.security.x509.X509CertImpl/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.ChartUtilities: void saveChartAsJPEG(java.io.File,org.jfree.chart.JFreeChart,int,int,org.jfree.chart.ChartRenderingInfo)>/new java.io.FileOutputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.jdbc.JDBCXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.LogarithmicAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.image.SinglePixelPackedSampleModel: java.awt.image.SampleModel createSubsetSampleModel(int[])>/new java.awt.image.RasterFormatException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis3D: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/1	<<immutable-context>>	<java.lang.Object: void <init>()>/@this
<<immutable-hcontext>>	<sun.util.locale.LocaleExtensions: void <init>(java.util.Map,java.util.Set,java.util.Map)>/new sun.util.locale.UnicodeLocaleExtension/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class java.lang.ClassLoader>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class java.lang.Object>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.text.normalizer.RuleCharacterIterator: java.lang.String lookahead()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.image.ColorModel: byte[] getLinearGray16ToOtherGray8LUT(java.awt.color.ICC_ColorSpace)>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.xy.XYSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: void addGrantEntry(sun.security.provider.PolicyParser$GrantEntry,java.security.KeyStore,sun.security.provider.PolicyFile$PolicyInfo)>/new java.security.UnresolvedPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.TreeMap$DescendingKeySpliterator: void forEachRemaining(java.util.function.Consumer)>/new java.util.ConcurrentModificationException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.axis.SegmentedTimeline$BaseTimelineSegmentRange::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$16/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.xy.XYSeries::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[] retrieveDisplayNamesImpl(java.lang.String,java.util.Locale)>/new java.lang.String[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.statistics.SimpleHistogramDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYStepAreaRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.text.CharacterIteratorFieldDelegate: void formatted(java.text.Format$Field,java.lang.Object,int,int,java.lang.StringBuffer)>/new java.text.AttributedString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.axis.SubCategoryAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.util.locale.provider.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.category.GroupedStackedBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.category.LineRenderer3D::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray(java.lang.Object[])>/new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.io.BufferedReader: java.lang.String readLine(boolean)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.ChartRenderingInfo: void <init>(org.jfree.chart.entity.EntityCollection)>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<class java.lang.Object[]>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<javax.swing.table.DefaultTableColumnModel: void addColumn(javax.swing.table.TableColumn)>/new java.lang.IllegalArgumentException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.io.ObjectOutputStream$BlockDataOutputStream: void writeUTF(java.lang.String,long)>/new java.io.UTFDataFormatException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: int width(java.lang.String)>/new java.util.IllegalFormatWidthException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.x509.AVA: java.lang.Byte getEmbeddedHexPair(int,java.io.Reader)>/new java.lang.Byte/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYShapeRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: java.util.List createStackedValueList(org.jfree.data.category.CategoryDataset,java.lang.Comparable,int[],double,boolean)>/new java.lang.Object[]/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.net.URLClassLoader: java.lang.Class defineClass(java.lang.String,sun.misc.Resource)>/new java.security.CodeSource/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.util.locale.provider.LocaleResources: java.lang.Object[] getDecimalFormatSymbolsData()>/new java.lang.Object[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<java.text.MergeCollation: void fixEntry(java.text.PatternEntry)>/new java.text.ParseException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/20	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.util.locale.BaseLocale: sun.util.locale.BaseLocale createInstance(java.lang.String,java.lang.String)>/new sun.util.locale.BaseLocale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.BarRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)>/new java.security.Permissions/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.net.RegisteredDomain: void <clinit>()>/new java.util.HashSet/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.xy.XYSeries getSeries(java.lang.Comparable)>/new org.jfree.data.UnknownKeyException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.FastScatterPlot: void <init>()>/new org.jfree.chart.axis.NumberAxis/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/@parameter0
<<immutable-hcontext>>	<sun.security.x509.X500Name: void parseDN(java.lang.String,java.util.Map)>/new sun.security.x509.RDN/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.io.ByteArrayOutputStream: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.text.TextUtilities: org.jfree.chart.text.TextBlock createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)>/new org.jfree.chart.text.TextFragment/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.ScatterRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.awt.geom.AreaOp: void resolveLinks(java.util.Vector,java.util.Vector,java.util.Vector)>/new sun.awt.geom.ChainEnd/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: org.jfree.chart.LegendItemCollection getLegendItems()>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/22	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.misc.Launcher$AppClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>/new java.lang.RuntimePermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: void drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)>/new org.jfree.chart.entity.PieSectionEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	org.jfree.data.xy.CategoryTableXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.ProcessEnvironment$Variable: java.lang.ProcessEnvironment$Variable valueOf(byte[])>/new java.lang.ProcessEnvironment$Variable/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.time.TimePeriodValuesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#27#_4471
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getDeferredInstance(sun.java2d.cmm.ProfileDeferralInfo)>/new java.awt.color.ICC_Profile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.net.www.ParseUtil: java.lang.String encodePath(java.lang.String,boolean)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.LegendItem getLegendItem(int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)>/new sun.security.pkcs.SignerInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.category.ScatterRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$9/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/22	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.axis.ExtendedCategoryAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1: java.lang.Thread run()>/new java.lang.ThreadGroup/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.text.DateFormatSymbols: void initializeData(java.util.Locale)>/new java.text.DateFormatSymbols/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.Integer$IntegerCache: void <clinit>()>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.nio.ch.SimpleAsynchronousFileChannelImpl: java.util.concurrent.Future implLock(long,long,boolean,java.lang.Object,java.nio.channels.CompletionHandler)>/new java.nio.channels.NonReadableChannelException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.util.ManifestDigester: void <init>(byte[])>/new sun.security.util.ManifestDigester$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/31	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.ssl.SupportedEllipticCurvesExtension$NamedEllipticCurve: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String,boolean)>/new java.lang.RuntimeException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/7	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.statistics.DefaultStatisticalCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.ProcessEnvironment$Variable: java.lang.ProcessEnvironment$Variable valueOf(byte[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.xy.DefaultHighLowDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYLineAndShapeRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.nio.charset.CoderResult: void throwException()>/new java.nio.charset.MalformedInputException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToDomainAxes(int,java.util.List)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl$BindCaller: java.lang.invoke.MethodHandle restoreToType(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.Class)>/new java.lang.invoke.MethodHandleImpl$WrappedMember/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.invoke.util.Wrapper: void <clinit>()>/new sun.invoke.util.Wrapper/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedDomainCategoryPlot: void <init>()>/new org.jfree.chart.axis.CategoryAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.io.BufferedReader: java.lang.String readLine(boolean)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.HashSet: void <clinit>()>/new java.lang.Object/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<class int[]>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/24	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class sun.invoke.util.ValueConversions>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.font.TrueTypeFont: void <init>(java.lang.String,java.lang.Object,int,boolean,boolean)>/new java.awt.FontFormatException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack32
<<immutable-hcontext>>	<java.lang.ClassLoader: void loadLibrary(java.lang.Class,java.lang.String,boolean)>/new java.lang.UnsatisfiedLinkError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedAreaRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void failMismatch(java.util.Formatter$Flags,char)>/new java.util.FormatFlagsConversionMismatchException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList: java.lang.Object elementData(int)>/l0#_0
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.text.Normalizer$Form: void <clinit>()>/new java.text.Normalizer$Form/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.nio.channels.spi.AbstractInterruptibleChannel: void end(boolean)>/new java.nio.channels.AsynchronousCloseException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.io.FilePermission: java.security.PermissionCollection newPermissionCollection()>/new java.io.FilePermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/6	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: java.lang.invoke.LambdaForm$Name argument(int,java.lang.invoke.LambdaForm$BasicType)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/9	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.io.ExpiringCache: void put(java.lang.String,java.lang.String)>/new java.io.ExpiringCache$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Vector: int hugeCapacity(int)>/new java.lang.OutOfMemoryError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.StrikeCache: java.lang.ref.Reference getStrikeRef(sun.font.FontStrike,boolean)>/new sun.font.StrikeCache$SoftDisposerRef/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.Stack: java.lang.Object peek()>/new java.util.EmptyStackException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<sun.security.provider.certpath.X509CertPath: byte[] encodePKIPATH()>/new java.security.cert.CertificateEncodingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.security.SecureClassLoader: java.security.ProtectionDomain getProtectionDomain(java.security.CodeSource)>/new java.security.ProtectionDomain/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.ChartRenderingInfo: void <init>(org.jfree.chart.entity.EntityCollection)>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class java.lang.Short>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: void <init>(sun.java2d.cmm.ProfileDeferralInfo)>/new java.awt.color.ICC_Profile$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.servlet.ServletUtilities: void sendTempFile(java.io.File,javax.servlet.http.HttpServletResponse,java.lang.String)>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/28	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.xy.DefaultWindDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/new sun.security.pkcs.SignerInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.zip.ZipInputStream: int read(byte[],int,int)>/new java.util.zip.ZipException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<class java.lang.Long>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.font.NativeFont: sun.font.FontStrike createStrike(sun.font.FontStrikeDesc)>/new sun.font.NativeStrike/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.HashSet: void <clinit>()>/new java.lang.Object/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$ServiceKey/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.Character$UnicodeBlock: void <clinit>()>/new java.lang.Character$UnicodeBlock/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/14	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.locale.LocaleUtils: java.lang.String toLowerString(java.lang.String)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/10	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm spreadArgumentsForm(int,java.lang.Class,int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.TreeSet: void <clinit>()>/new java.lang.Object/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.SymbolAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.time.ohlc.OHLCSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.axis.LogarithmicAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.misc.JarIndex: void addToList(java.lang.String,java.lang.String,java.util.HashMap)>/new java.util.LinkedList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle makeAllocator(java.lang.invoke.MemberName)>/new java.lang.invoke.DirectMethodHandle$Constructor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<class java.lang.invoke.MethodHandle>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<java.security.Permissions: java.security.PermissionCollection getUnresolvedPermissions(java.security.Permission)>/new java.security.PermissionsHash/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.DeviationRenderer: void drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new double[]/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeWrappedMember(java.lang.invoke.MethodHandle,java.lang.invoke.MemberName,boolean)>/new java.lang.invoke.MethodHandleImpl$WrappedMember/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/new java.security.cert.X509Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.category.LineRenderer3D::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.SpiderWebPlot: org.jfree.chart.LegendItemCollection getLegendItems()>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/28	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.font.StrikeCache: java.lang.ref.Reference getStrikeRef(sun.font.FontStrike,boolean)>/new sun.font.StrikeCache$SoftDisposerRef/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.provider.SeedGenerator$URLSeedGenerator$1: java.io.InputStream run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.jdbc.JDBCCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.axis.SegmentedTimeline$Segment::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<javax.crypto.ExemptionMechanism: javax.crypto.ExemptionMechanism getInstance(java.lang.String)>/new javax.crypto.ExemptionMechanism/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<javax.crypto.ExemptionMechanism: javax.crypto.ExemptionMechanism getInstance(java.lang.String)>/new javax.crypto.ExemptionMechanism/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>/new java.util.zip.ZipFile$ZipFileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.StringCoding: void <clinit>()>/new java.lang.ThreadLocal/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.ExtendedCategoryAxis: org.jfree.chart.text.TextBlock createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)>/new org.jfree.chart.text.TextLine/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.Plot: void createAndAddEntity(java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo,java.lang.String,java.lang.String)>/new org.jfree.chart.entity.PlotEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.calendar.ZoneInfoFile$1: java.lang.Object run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList$Itr: void <init>(java.util.ArrayList)>/l1#_0
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedFieldLambdaForm(byte,boolean,int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$ServiceKey/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<class java.lang.invoke.MethodHandle>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/24	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>/new java.util.Hashtable$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.Plot: void createAndAddEntity(java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo,java.lang.String,java.lang.String)>/new org.jfree.chart.entity.PlotEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedLambdaForm(java.lang.invoke.MethodType,int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/0	<<immutable-context>>	<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>/l1#_0
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<java.awt.image.ColorModel: byte[] getGray16TosRGB8LUT(java.awt.color.ICC_ColorSpace)>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.xy.XIntervalDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Locale$Category: void <clinit>()>/new java.util.Locale$Category/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.util.SignatureFileVerifier: void updateSigners(java.security.CodeSigner[],java.util.Hashtable,java.lang.String)>/new java.security.CodeSigner[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.SamplingXYLineRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/11	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.math.BigInteger: void <clinit>()>/new java.math.BigInteger/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.font.FileFontStrike: java.awt.geom.Point2D$Float getGlyphMetrics(int,boolean)>/new java.util.concurrent.ConcurrentHashMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.jar.JarVerifier: void processEntry(sun.security.util.ManifestEntryVerifier)>/new sun.security.util.SignatureFileVerifier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.DeviationRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.regex.Pattern$CharPropertyNames: void defRange(java.lang.String,int,int)>/new java.util.regex.Pattern$CharPropertyNames$2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.Properties: java.lang.String loadConvert(char[],int,int,char[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.util.DerValue: sun.security.util.ObjectIdentifier getOID()>/new sun.security.util.ObjectIdentifier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.xy.DefaultWindDataset: void <init>(java.util.List,java.lang.Object[][][])>/new java.util.ArrayList/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.xy.MatrixSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm filterReturnForm(java.lang.invoke.LambdaForm$BasicType,boolean)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(byte,java.lang.Class,java.lang.invoke.MemberName)>/new java.lang.invoke.DirectMethodHandle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<java.awt.image.ColorModel: byte[] getGray8TosRGB8LUT(java.awt.color.ICC_ColorSpace)>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPolicyParser$GrantEntry parseGrantEntry(java.util.Hashtable)>/new javax.crypto.CryptoPolicyParser$GrantEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.WaferMapRenderer: void makePositionIndex(java.util.Set)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty family(boolean,boolean)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/23	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.SpreadsheetDate::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.block.LabelBlock: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>/new org.jfree.chart.entity.ChartEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.MultiplePiePlot: org.jfree.chart.LegendItemCollection getLegendItems()>/new org.jfree.chart.LegendItem/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<org.jfree.chart.ChartRenderingInfo: void clear()>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: void executeQuery(java.sql.Connection,java.lang.String)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.math.BigDecimal$UnsafeHolder: void <clinit>()>/new java.lang.ExceptionInInitializerError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class java.lang.Integer>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$4/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList: void ensureCapacityInternal(int)>/l0#_0
<<immutable-hcontext>>	<java.lang.ClassLoader: java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>/new java.lang.Package/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/33	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.misc.Launcher$AppClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>/new java.lang.RuntimePermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/39	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYShapeRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/37	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.MultiplePiePlot: org.jfree.chart.LegendItemCollection getLegendItems()>/new org.jfree.chart.LegendItem/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.xy.WindDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator: void <clinit>()>/new sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.FontResolver: void <init>()>/new java.awt.Font/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.Polygon/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: void executeQuery(java.sql.Connection,java.lang.String)>/new java.util.ArrayList/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.time.DynamicTimeSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.text.normalizer.VersionInfo: sun.text.normalizer.VersionInfo getInstance(int,int,int,int)>/new sun.text.normalizer.VersionInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$Service/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.StackedXYAreaRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.X509Factory: java.security.cert.CRL engineGenerateCRL(java.io.InputStream)>/new java.security.cert.CRLException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.ProcessEnvironment$Value: java.lang.ProcessEnvironment$Value valueOf(byte[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.String: java.lang.String substring(int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: void <init>(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,java.lang.invoke.MemberName)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/8	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPolicyParser$CryptoPermissionEntry parsePermissionEntry(java.util.Hashtable)>/new javax.crypto.CryptoPolicyParser$CryptoPermissionEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.DefaultXYItemRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: void drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)>/new org.jfree.chart.entity.PieSectionEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.Short$ShortCache: void <clinit>()>/new java.lang.Short/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.String: java.lang.String concat(java.lang.String)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.axis.DateAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.ssl.HandshakeMessage$CertificateVerify: java.security.Signature getSignature(sun.security.ssl.ProtocolVersion,java.lang.String)>/new java.security.SignatureException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.CandlestickRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.misc.URLClassPath$3: sun.misc.URLClassPath$Loader run()>/new sun.misc.URLClassPath$Loader/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.title.LegendItemBlockContainer: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>/new org.jfree.chart.entity.LegendItemEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.StringCoding: byte[] encode(java.lang.String,char[],int,int)>/new java.lang.StringCoding$StringEncoder/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.zip.ZipFile: java.util.zip.Inflater getInflater()>/new java.util.zip.Inflater/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYAreaRenderer2: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/20	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.stream.Node: java.util.stream.Node getChild(int)>/new java.lang.IndexOutOfBoundsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.io.File$PathStatus: void <clinit>()>/new java.io.File$PathStatus/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.DynamicTimeSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.Signature$Delegate: void chooseFirstProvider()>/new java.lang.Exception/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.GlyphLayout: void nextEngineRecord(int,int,int,int,sun.font.Font2D,int)>/new sun.font.GlyphLayout$EngineRecord/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String constantPlaceholder(java.lang.Object)>/new java.lang.invoke.InvokerBytecodeGenerator$CpPatch/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.util.calendar.ZoneInfoFile: java.lang.String toCustomID(int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.math.RoundingMode: void <clinit>()>/new java.math.RoundingMode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/29	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/21	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<class java.lang.Boolean>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.font.EAttribute: void <clinit>()>/new sun.font.EAttribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.axis.NumberAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.Arrays: byte[] copyOf(byte[],int)>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.Outlier::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.security.AllPermission: java.security.PermissionCollection newPermissionCollection()>/new java.security.AllPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<class java.lang.Void>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/11	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/16	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.general.DefaultValueDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.SpiderWebPlot: void drawRadarPoly(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotRenderingInfo,int,int,double,double)>/new org.jfree.chart.entity.CategoryItemEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: org.jfree.chart.LegendItemCollection getLegendItems()>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.net.ftp.FtpClientProvider: boolean loadProviderFromProperty()>/new java.util.ServiceConfigurationError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.gantt.XYTaskDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedAreaRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<sun.security.x509.RDN: void <init>(java.lang.String,java.util.Map)>/new sun.security.x509.AVA/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.math.RoundingMode: void <clinit>()>/new java.math.RoundingMode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.time.SpreadsheetDate::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.awt.image.ColorModel: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.StackedXYAreaRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	org.jfree.chart.axis.LogAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.time.TimePeriodValues::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor$Transform: java.lang.invoke.LambdaFormEditor$Transform withResult(java.lang.invoke.LambdaForm)>/new java.lang.invoke.LambdaFormEditor$Transform/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.awt.DebugSettings: void loadFileProperties()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.nio.ch.SimpleAsynchronousFileChannelImpl: java.util.concurrent.Future implLock(long,long,boolean,java.lang.Object,java.nio.channels.CompletionHandler)>/new java.nio.channels.NonReadableChannelException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.geom.Rectangle2D$Double/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedRangeCategoryPlot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYShapeRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.gantt.TaskSeriesCollection: java.lang.Number getStartValue(java.lang.Comparable,java.lang.Comparable)>/new java.lang.Long/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<class java.lang.Object>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.ProcessEnvironment$Value: java.lang.ProcessEnvironment$Value valueOf(byte[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.sql.DriverManager: java.sql.Driver getDriver(java.lang.String)>/new java.sql.SQLException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.jar.JarInputStream: java.util.jar.JarEntry checkManifest(java.util.jar.JarEntry)>/new java.util.jar.Manifest/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/27	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void failMismatch(java.util.Formatter$Flags,char)>/new java.util.FormatFlagsConversionMismatchException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>/new java.lang.String[][]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.FileFontStrike: java.awt.geom.Point2D$Float getGlyphMetrics(int,boolean)>/new java.util.concurrent.ConcurrentHashMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.statistics.DefaultStatisticalCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.xy.VectorDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.net.InetAddress: sun.net.spi.nameservice.NameService createNSProvider(java.lang.String)>/new java.net.InetAddress$2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: void executeQuery(java.sql.Connection,java.lang.String)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$16/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.ssl.HandshakeMessage$CertificateVerify: java.security.Signature getSignature(sun.security.ssl.ProtocolVersion,java.lang.String)>/new java.security.SignatureException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/7	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.DynamicTimeSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<sun.nio.ch.Util: void <clinit>()>/new sun.nio.ch.Util$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.awt.font.TextLine: java.awt.font.TextLine standardCreateTextLine(java.awt.font.FontRenderContext,java.text.AttributedCharacterIterator,char[],float[])>/new java.awt.font.StyledParagraph/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.io.ObjectInputStream$BlockDataInputStream: int readBlockHeader(boolean)>/new java.io.StreamCorruptedException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.OutlierListCollection: boolean add(org.jfree.chart.renderer.Outlier)>/new org.jfree.chart.renderer.OutlierList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.axis.CyclicNumberAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.System: void initializeSystemClass()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.plot.PieLabelRecord::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<class java.lang.System>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.xy.WindDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.Polygon/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: void drawStackHorizontal(java.util.List,java.lang.Comparable,java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset)>/new java.lang.Object[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.xy.YIntervalSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYAreaRenderer2: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: java.lang.invoke.LambdaForm$Name[] buildEmptyNames(int,java.lang.String)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedLambdaForm(java.lang.invoke.MethodType,int)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.font.LayoutPathImpl$EndType: void <clinit>()>/new sun.font.LayoutPathImpl$EndType/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.awt.font.TextAttribute: void <clinit>()>/new java.awt.font.TextAttribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(java.util.List,boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: java.lang.invoke.LambdaForm$Name argument(int,java.lang.invoke.LambdaForm$BasicType)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.AxisLocation: void <clinit>()>/new org.jfree.chart.axis.AxisLocation/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.jca.ProviderList: void <init>()>/new sun.security.jca.ProviderConfig/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.Terminator: void setup()>/new java.lang.Terminator$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.nio.charset.CoderResult$1: java.nio.charset.CoderResult create(int)>/new java.nio.charset.CoderResult/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.net.URI$Parser: void fail(java.lang.String)>/new java.net.URISyntaxException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.category.IntervalBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	org.jfree.chart.axis.NumberAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: boolean isConsistent(java.lang.String,java.lang.String,java.util.Hashtable)>/new java.util.Vector/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYSplineRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.axis.NumberAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.font.Decoration: sun.font.Decoration getDecoration(sun.font.AttributeValues)>/new sun.font.Decoration$DecorationImpl/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection)>/new java.security.ProtectionDomain$Key/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.xy.DefaultWindDataset: void <init>(java.util.List,java.lang.Object[][][])>/new org.jfree.data.xy.WindDataItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<java.lang.ClassValue$Version: void <init>(java.lang.ClassValue)>/new java.lang.ClassValue$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.xy.DefaultIntervalXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<java.util.EnumMap$ValueIterator: java.lang.Object next()>/new java.util.NoSuchElementException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/19	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/11	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.CryptoPrimitive: void <clinit>()>/new java.security.CryptoPrimitive/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.util.locale.provider.JRELocaleConstants: void <clinit>()>/new java.util.Locale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/11	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.xy.DefaultOHLCDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPolicyParser$CryptoPermissionEntry parsePermissionEntry(java.util.Hashtable)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Arrays: byte[] copyOf(byte[],int)>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.io.FileReader: void <init>(java.io.File)>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<javax.crypto.Cipher: java.util.List getTransforms(java.lang.String)>/new javax.crypto.Cipher$Transform/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.TreeMap$DescendingKeySpliterator: void forEachRemaining(java.util.function.Consumer)>/new java.lang.NullPointerException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxis(int,int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.HashSet: void <clinit>()>/new java.lang.Object/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.security.AllPermission: java.security.PermissionCollection newPermissionCollection()>/new java.security.AllPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/7	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.nio.charset.CoderResult: void throwException()>/new java.nio.charset.UnmappableCharacterException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.CyclicXYItemRenderer$OverwriteDataSet::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#27#_4471
<<immutable-hcontext>>	<sun.util.locale.BaseLocale$Cache: sun.util.locale.BaseLocale createObject(sun.util.locale.BaseLocale$Key)>/new sun.util.locale.BaseLocale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/22	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.GlyphLayout$SDCache: sun.font.GlyphLayout$SDCache get(java.awt.Font,java.awt.font.FontRenderContext)>/new java.util.concurrent.ConcurrentHashMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.category.LayeredBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedDomainXYPlot: void <init>()>/new org.jfree.chart.axis.NumberAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/21	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.util.DerValue: sun.security.util.ObjectIdentifier getOID()>/new sun.security.util.ObjectIdentifier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/21	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.util.locale.provider.JRELocaleConstants: void <clinit>()>/new java.util.Locale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.axis.DateAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/17	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	org.jfree.data.xy.YIntervalDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<java.awt.Toolkit: void loadAssistiveTechnologies()>/new java.awt.AWTError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.ProcessEnvironment$Value: java.lang.ProcessEnvironment$Value valueOf(byte[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$ServiceKey/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.time.ohlc.OHLCSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.pkcs.PKCS9Attributes: byte[] decode(sun.security.util.DerInputStream)>/new sun.security.pkcs.PKCS9Attribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: void drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new java.awt.Point/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.locale.LocaleExtensions: void <init>(java.util.Map,java.util.Set,java.util.Map)>/new sun.util.locale.Extension/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<java.util.jar.Manifest: void read(java.io.InputStream)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.nio.CharBuffer: java.nio.CharBuffer put(java.nio.CharBuffer)>/new java.nio.BufferOverflowException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	org.jfree.data.time.Year::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxis(int,int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.nio.ch.SimpleAsynchronousFileChannelImpl: java.util.concurrent.Future implLock(long,long,boolean,java.lang.Object,java.nio.channels.CompletionHandler)>/new java.nio.channels.ClosedChannelException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.font.FileFontStrike: void <init>(sun.font.FileFont,sun.font.FontStrikeDesc)>/new sun.font.FontStrikeDisposer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.nio.charset.Charset: void checkName(java.lang.String)>/new java.nio.charset.IllegalCharsetNameException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<class java.lang.Character>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList$Itr: void remove()>/$stack7
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: boolean isConsistent(java.lang.String,java.lang.String,java.util.Hashtable)>/new java.util.Vector/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/9	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.time.SimpleTimePeriod::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.net.www.ParseUtil: java.lang.String encodePath(java.lang.String,boolean)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.font.FontUtilities$1: java.lang.Object run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.io.File: java.io.File getParentFile()>/new java.io.File/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.String: java.lang.String copyValueOf(char[],int,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.io.FileInputStream: void <init>(java.io.File)>/new java.io.FileNotFoundException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<sun.awt.SunHints: void <clinit>()>/new sun.awt.SunHints$Value/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.awt.geom.Order1: sun.awt.geom.Curve getReversedCurve()>/new sun.awt.geom.Order1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/28	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/12	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.DynamicTimeSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<sun.font.TrueTypeFont: void <init>(java.lang.String,java.lang.Object,int,boolean,boolean)>/new sun.font.TrueTypeFont$TTDisposerRecord/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/19	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.misc.FloatingDecimal$BinaryToASCIIBuffer: java.lang.String toJavaFormatString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.x509.RDN: void <init>(java.lang.String,java.util.Map)>/new sun.security.x509.AVA/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.time.Month: void <clinit>()>/new java.time.Month/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	org.jfree.chart.plot.XYPlot::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/@this
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm collectArgumentArrayForm(int,java.lang.invoke.MethodHandle)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeVarargsCollector(java.lang.invoke.MethodHandle,java.lang.Class)>/new java.lang.invoke.MethodHandleImpl$AsVarargsCollector/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.xy.TableXYDataset,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<sun.security.ssl.HandshakeMessage$Finished: byte[] getFinished(sun.security.ssl.HandshakeHash,int,javax.crypto.SecretKey)>/new java.security.ProviderException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.HighLowRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.CyclicNumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.CyclicNumberAxis$CycleBoundTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.CyclicNumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.CyclicNumberAxis$CycleBoundTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.PropertyPermissionCollection: void add(java.security.Permission)>/new java.util.PropertyPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.regex.Pattern$CharPropertyNames: void <clinit>()>/new java.util.regex.Pattern$CharPropertyNames$5/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.io.UnixFileSystem: java.lang.String[] list(java.io.File)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.image.ColorModel: byte[] getLinearGray16ToOtherGray8LUT(java.awt.color.ICC_ColorSpace)>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.SubCategoryAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.nio.DirectCharBufferRU: java.nio.CharBuffer put(char)>/new java.nio.ReadOnlyBufferException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.nio.ch.SimpleAsynchronousFileChannelImpl: java.util.concurrent.Future implLock(long,long,boolean,java.lang.Object,java.nio.channels.CompletionHandler)>/new java.nio.channels.ClosedChannelException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.FileFontStrike: void <init>(sun.font.FileFont,sun.font.FontStrikeDesc)>/new sun.font.FontStrikeDisposer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis: java.util.List refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.CategoryTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass1(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new org.jfree.chart.entity.XYItemEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<class java.lang.invoke.BoundMethodHandle$Species_L>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getPrintableString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.AbstractCollection: void <init>()>/l0#_0
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<sun.security.x509.CertificateValidity: void construct(sun.security.util.DerValue)>/new java.io.IOException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.TreeMap$DescendingKeySpliterator: void forEachRemaining(java.util.function.Consumer)>/new java.lang.NullPointerException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.Permission getKnownInstance(java.lang.Class,java.lang.String,java.lang.String)>/new java.util.PropertyPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.category.BoxAndWhiskerRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.awt.image.BufferedImage: void <init>(int,int,int)>/new java.awt.image.IndexColorModel/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.font.NativeFont: sun.font.FontStrike createStrike(sun.font.FontStrikeDesc)>/new sun.font.DelegateStrike/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$19/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[] retrieveDisplayNamesImpl(java.lang.String,java.util.Locale)>/new java.lang.String[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String constantPlaceholder(java.lang.Object)>/new java.lang.invoke.InvokerBytecodeGenerator$CpPatch/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.ConditionalSpecialCasing: void <clinit>()>/new java.lang.ConditionalSpecialCasing$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.Permission getKnownInstance(java.lang.Class,java.lang.String,java.lang.String)>/new java.util.PropertyPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.util.SecurityConstants: void <clinit>()>/new java.security.AllPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(java.util.List,boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar getLocalGregorianCalendar(java.lang.String)>/new sun.util.calendar.Era/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.ExtendedCategoryAxis: org.jfree.chart.text.TextBlock createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)>/new org.jfree.chart.text.TextLine/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class java.lang.Void>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.util.DerInputStream: sun.security.util.ObjectIdentifier getOID()>/new sun.security.util.ObjectIdentifier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: java.util.Collection getAnnotations()>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/c#_4493
<<immutable-hcontext>>	<javax.crypto.CryptoAllPermission: java.security.PermissionCollection newPermissionCollection()>/new javax.crypto.CryptoAllPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.ClassValue$Entry: java.lang.ClassValue$Entry refreshVersion(java.lang.ClassValue$Version)>/new java.lang.ClassValue$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.Long: java.lang.String toString(long)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<javax.crypto.Cipher: java.util.List getTransforms(java.lang.String)>/new javax.crypto.Cipher$Transform/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedFieldLambdaForm(byte,boolean,int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedRangeXYPlot: void <init>()>/new org.jfree.chart.axis.NumberAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.StringCoding: void <clinit>()>/new java.lang.ThreadLocal/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>/new sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.CyclicNumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.CyclicNumberAxis$CycleBoundTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.geom.Ellipse2D$Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void <init>(byte[])>/new sun.security.pkcs.ParsingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.io.FilePermission: java.security.PermissionCollection newPermissionCollection()>/new java.io.FilePermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: int precision(java.lang.String)>/new java.util.IllegalFormatPrecisionException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBubbleRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>/new sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.TreeSet: void <clinit>()>/new java.lang.Object/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<javax.crypto.JarVerifier: void verify()>/new java.util.jar.JarException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.ClassValue: void <init>()>/new java.lang.ClassValue$Identity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.font.TrueTypeFont$1: java.lang.Object run()>/new java.io.RandomAccessFile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.misc.Launcher: java.io.File[] getClassPath(java.lang.String)>/new java.io.File/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/25	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.VectorRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<java.io.ExpiringCache: void put(java.lang.String,java.lang.String)>/new java.io.ExpiringCache$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.geom.Rectangle2D$Double/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>/new java.security.NoSuchProviderException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDotRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>/new java.security.MessageDigest$Delegate/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getUTF8String()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/34	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.xy.DefaultOHLCDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$Service/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	sun.font.TrueTypeFont::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYShapeRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.calendar.ZoneInfoFile: java.lang.String toCustomID(int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/20	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.util.DisabledAlgorithmConstraints$Constraints: void <init>(java.lang.String[])>/new sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.ref.Reference: void <clinit>()>/new java.lang.ref.Reference$ReferenceHandler/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.java2d.StateTrackable$State: void <clinit>()>/new sun.java2d.StateTrackable$State/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/9	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.stream.AbstractTask: void setRawResult(java.lang.Object)>/new java.lang.IllegalStateException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<javax.crypto.JarVerifier: void verify()>/new java.util.jar.JarException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/12	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>/new java.awt.color.ICC_ColorSpace/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.awt.image.ColorModel: byte[] getGray8TosRGB8LUT(java.awt.color.ICC_ColorSpace)>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.x509.CertificateExtensions: void init(sun.security.util.DerInputStream)>/new sun.security.x509.Extension/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.time.TimeSeriesDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$4/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxes(int,java.util.List)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceNames(java.lang.invoke.LambdaForm$Name[],java.lang.invoke.LambdaForm$Name[],int,int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.BoxAndWhiskerRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<javax.crypto.JceSecurity: void <clinit>()>/new java.net.URL/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.DataUtilities: java.lang.Number[] createNumberArray(double[])>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String constantPlaceholder(java.lang.Object)>/new java.lang.invoke.InvokerBytecodeGenerator$CpPatch/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: int width(java.lang.String)>/new java.util.IllegalFormatWidthException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/27	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.util.locale.LocaleExtensions: void <init>(java.util.Map,java.util.Set,java.util.Map)>/new sun.util.locale.Extension/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.misc.URLClassPath$FileLoader$1: java.io.InputStream getInputStream()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/11	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>/new java.util.IllegalFormatConversionException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.JFreeChart: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)>/new org.jfree.chart.entity.JFreeChartEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void <init>(byte[])>/new sun.security.pkcs.ParsingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.BoxAndWhiskerRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.font.EAttribute: void <clinit>()>/new sun.font.EAttribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.security.CryptoPrimitive: void <clinit>()>/new java.security.CryptoPrimitive/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.awt.geom.Order2: void addInstance(java.util.Vector,double,double,double,double,double,double,int)>/new sun.awt.geom.Order2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/29	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<java.nio.charset.CoderResult: void throwException()>/new java.nio.charset.MalformedInputException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void printCharacter(java.lang.Object)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: void expandSelf(sun.security.provider.PolicyFile$SelfPermission,java.util.List,java.security.Principal[],java.security.Permissions)>/new java.security.UnresolvedPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.x509.X509Key: java.security.PublicKey buildX509Key(sun.security.x509.AlgorithmId,sun.security.util.BitArray)>/new java.lang.InstantiationException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.xy.DefaultIntervalXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: void drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: void computeInitialPreparedForms()>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.time.Hour::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/15	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.text.MergeCollation: void fixEntry(java.text.PatternEntry)>/new java.text.ParseException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/1	<<immutable-context>>	<java.lang.Object: void <init>()>/l0#_0
<<immutable-hcontext>>	<java.util.Formatter: java.util.Formatter$FormatString[] parse(java.lang.String)>/new java.util.Formatter$FixedString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYSplineRenderer: void drawPrimaryLineAsPath(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)>/new org.jfree.chart.renderer.xy.XYSplineRenderer$ControlPoint/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.image.IndexColorModel: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	org.jfree.chart.renderer.category.LevelRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.locale.InternalLocaleBuilder: void setUnicodeLocaleExtension(java.lang.String)>/new sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.LinkedHashMap: java.util.HashMap$Node newNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)>/new java.util.LinkedHashMap$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.Character$UnicodeScript: void <clinit>()>/new java.lang.Character$UnicodeScript/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/13	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/11	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.util.logging.PlatformLogger: sun.util.logging.PlatformLogger getLogger(java.lang.String)>/new java.lang.ref.WeakReference/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.font.TransformAttribute: void <clinit>()>/new java.awt.font.TransformAttribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void <init>(byte[])>/new sun.security.pkcs.ParsingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/20	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)>/new java.nio.charset.CoderMalfunctionError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<class int[]>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.time.Week::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYLineAndShapeRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.geom.Rectangle2D$Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<class java.lang.Byte>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<class java.lang.Character>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/10	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/new sun.security.x509.X509CertImpl/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.category.DefaultIntervalCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.Font: java.awt.Font deriveFont(java.util.Map)>/new java.awt.Font/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<sun.security.jca.ProviderList: sun.security.jca.ProviderList getJarList(java.lang.String[])>/new sun.security.jca.ProviderConfig/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])>/new java.security.ProtectionDomain$Key/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.ssl.HandshakeMessage$Finished: byte[] getFinished(sun.security.ssl.HandshakeHash,int,javax.crypto.SecretKey)>/new java.security.ProviderException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.category.StackedBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getGeneralString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.time.Day::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.stream.Node: java.util.stream.Node getChild(int)>/new java.lang.IndexOutOfBoundsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/18	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.nio.CharBuffer: java.nio.CharBuffer put(java.nio.CharBuffer)>/new java.nio.BufferOverflowException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/20	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$14/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.DefaultKeyedValues2D: void setValue(java.lang.Number,java.lang.Comparable,java.lang.Comparable)>/new org.jfree.data.DefaultKeyedValues/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.MemberName$Factory: java.lang.invoke.MemberName[] newMemberBuffer(int)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name cloneWithIndex(int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.Formatter: java.util.Formatter format(java.util.Locale,java.lang.String,java.lang.Object[])>/new java.util.MissingFormatArgumentException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.misc.URLClassPath$JarLoader$3: sun.misc.URLClassPath$JarLoader run()>/new sun.misc.URLClassPath$JarLoader/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void printCharacter(java.lang.Object)>/new java.util.IllegalFormatCodePointException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.time.FixedMillisecond::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.ScatterRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedFieldLambdaForm(byte,boolean,int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToRangeAxes(int,java.util.List)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty family(boolean,boolean)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.util.locale.LocaleUtils: java.lang.String toLowerString(java.lang.String)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$PermissionEntry parsePermissionEntry()>/new sun.security.provider.PolicyParser$PermissionEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.awt.geom.Order3: sun.awt.geom.Curve getSubCurve(double,double,int)>/new sun.awt.geom.Order3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList: void rangeCheck(int)>/@this
<<immutable-hcontext>>	org.jfree.chart.renderer.category.WaterfallBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/19	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.RingPlot: void drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)>/new org.jfree.chart.entity.PieSectionEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.category.CategoryDataset,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<org.jfree.chart.plot.MultiplePiePlot: org.jfree.chart.LegendItemCollection getLegendItems()>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedFieldLambdaForm(byte,boolean,int)>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.util.locale.LocaleExtensions: void <init>(java.util.Map,java.util.Set,java.util.Map)>/new sun.util.locale.Extension/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYAreaRenderer2: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<<main-thread>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<sun.reflect.annotation.AnnotationParser: java.lang.annotation.Annotation parseAnnotation2(java.nio.ByteBuffer,sun.reflect.ConstantPool,java.lang.Class,boolean,java.lang.Class[])>/new java.lang.TypeNotPresentException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.StackedXYAreaRenderer2::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.awt.geom.Order1: sun.awt.geom.Curve getReversedCurve()>/new sun.awt.geom.Order1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYShapeRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	org.jfree.data.xy.XIntervalSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.reflect.Reflection: void <clinit>()>/new java.lang.String[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.category.SlidingCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList$Itr: java.lang.Object next()>/$stack5
<<immutable-hcontext>>	<java.awt.image.DirectColorModel: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.zip.ZipInputStream: void <init>(java.io.InputStream,java.nio.charset.Charset)>/new java.util.zip.Inflater/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/29	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.Permission getKnownInstance(java.lang.Class,java.lang.String,java.lang.String)>/new java.net.SocketPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$15/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.String: java.lang.String valueOf(char[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToRangeAxes(int,java.util.List)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray(java.lang.Object[])>/new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/25	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.PropertyPermission: java.security.PermissionCollection newPermissionCollection()>/new java.util.PropertyPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.awt.SunHints: void <clinit>()>/new sun.awt.SunHints$LCDContrastKey/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.util.DerIndefLenConverter: int parseLength()>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<javax.swing.table.DefaultTableColumnModel: void addColumn(javax.swing.table.TableColumn)>/new java.lang.IllegalArgumentException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: void executeQuery(java.sql.Connection,java.lang.String)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.PropertyPermissionCollection: void add(java.security.Permission)>/new java.util.PropertyPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: java.lang.invoke.LambdaForm getPreparedForm(java.lang.String)>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.text.bidi.BidiBase$TextAttributeConstants: java.text.AttributedCharacterIterator$Attribute getTextAttribute(java.lang.String)>/new sun.text.bidi.BidiBase$TextAttributeConstants$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.Terminator: void setup()>/new java.lang.Terminator$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$DomainEntry parseDomainEntry()>/new sun.security.provider.PolicyParser$KeyStoreEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer: void drawVerticalItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new org.jfree.chart.renderer.Outlier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$ServiceKey/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.InvokerBytecodeGenerator$1: java.lang.Void run()>/new java.io.FileOutputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedLambdaForm(java.lang.invoke.MethodType,int)>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.zip.ZipCoder: java.lang.String toString(byte[],int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.awt.geom.Curve: void insertMove(java.util.Vector,double,double)>/new sun.awt.geom.Order0/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int,java.lang.Class)>/new java.lang.Object[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm makeArgumentCombinationForm(int,java.lang.invoke.MethodType,boolean,boolean)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.DeviationRenderer: void drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new double[]/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.ProcessEnvironment$StringEntrySet$1: java.util.Map$Entry next()>/new java.lang.ProcessEnvironment$StringEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.Formatter: java.util.Formatter$FormatString[] parse(java.lang.String)>/new java.util.Formatter$FormatSpecifier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYShapeRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	<java.time.ZoneOffset: java.time.ZoneOffset ofTotalSeconds(int)>/new java.time.ZoneOffset/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.category.CategoryDataset,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<java.lang.ClassLoader: void <clinit>()>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.category.LayeredBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.BoxAndWhiskerRenderer: void drawVerticalItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)>/new org.jfree.chart.renderer.Outlier/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<class java.lang.Float>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.InvokerBytecodeGenerator$1: java.lang.Void run()>/new java.io.FileOutputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/16	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.MultiplePiePlot: org.jfree.chart.LegendItemCollection getLegendItems()>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/new java.util.TreeMap$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.security.Signature$Delegate: void chooseFirstProvider()>/new java.lang.Exception/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/11	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/9	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.HighLowRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.x509.AVAKeyword: void <clinit>()>/new sun.security.x509.AVAKeyword/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.axis.CyclicNumberAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.Locale$Cache: java.util.Locale createObject(java.util.Locale$LocaleKey)>/new java.util.Locale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/11	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.category.CategoryStepRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.jar.Manifest: java.lang.String parseName(byte[],int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedFieldLambdaForm(byte,boolean,int)>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.VectorRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<java.awt.image.ColorModel: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.HashMap: java.util.HashMap$Node newNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)>/new java.util.HashMap$Node/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<class java.lang.Throwable>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.JFreeChart: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)>/new org.jfree.chart.entity.JFreeChartEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.CategoryStepRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$8/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$18/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.misc.Unsafe: void <clinit>()>/new java.lang.String[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.category.CategoryDataset,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	org.jfree.data.xy.XYCoordinate::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: java.lang.invoke.LambdaForm$Name argument(int,java.lang.invoke.LambdaForm$BasicType)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/17	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedRangeCategoryPlot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.statistics.HistogramDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.awt.geom.CurveLink: sun.awt.geom.Curve getMoveto()>/new sun.awt.geom.Order0/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$DomainEntry parseDomainEntry()>/new sun.security.provider.PolicyParser$DomainEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.ArrayList: java.util.Iterator iterator()>/new java.util.ArrayList$Itr/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/i#_4494
<<immutable-hcontext>>	org.jfree.data.time.TimePeriodValues::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.awt.DebugSettings: void loadFileProperties()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.x509.RDN: void <init>(java.lang.String,java.util.Map)>/new sun.security.x509.AVA/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.util.SecurityConstants: void <clinit>()>/new java.security.AllPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: org.jfree.chart.LegendItemCollection getLegendItems()>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.util.DisabledAlgorithmConstraints$Constraints: void <init>(java.lang.String[])>/new java.util.HashSet/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.time.temporal.ChronoField: void <clinit>()>/new java.time.temporal.ChronoField/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.String: java.lang.String valueOf(char)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.ConditionalSpecialCasing: void <clinit>()>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.Polygon/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.FastScatterPlot: void <init>()>/new org.jfree.chart.axis.NumberAxis/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/axis#_0
<<immutable-hcontext>>	<java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>/new java.nio.DirectByteBuffer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<class java.lang.Throwable>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.misc.URLClassPath$JarLoader$3: sun.misc.URLClassPath$JarLoader run()>/new sun.misc.URLClassPath$JarLoader/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.awt.geom.AreaOp: void addEdges(java.util.Vector,java.util.Vector,int)>/new sun.awt.geom.Edge/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/new java.security.cert.X509Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.time.Millisecond::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: char conversion(java.lang.String)>/new java.util.UnknownFormatConversionException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.ChartRenderingInfo: void <init>(org.jfree.chart.entity.EntityCollection)>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$ServiceKey/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.category.BarRenderer3D::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.security.Signature: void <clinit>()>/new sun.security.jca.ServiceId/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.VectorRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$12/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/26	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<class java.lang.invoke.CallSite>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.String: java.lang.String copyValueOf(char[],int,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/22	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/12	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.misc.ExtensionDependency: java.io.File[] getExtFiles(java.io.File[])>/new java.io.File/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm makeArgumentCombinationForm(int,java.lang.invoke.MethodType,boolean,boolean)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: void createIdentityForms()>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis: java.util.List refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.CategoryTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>/new java.util.Hashtable$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.util.DerInputStream: sun.security.util.DerValue[] readVector(int)>/new sun.security.util.DerValue/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<class java.lang.invoke.BoundMethodHandle$Species_L>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.font.TextAttribute: void <clinit>()>/new java.awt.font.TextAttribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(byte,java.lang.Class,java.lang.invoke.MemberName)>/new java.lang.invoke.DirectMethodHandle$Special/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/24	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.awt.SunHints: void <clinit>()>/new sun.awt.SunHints$Key/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String constantPlaceholder(java.lang.Object)>/new java.lang.invoke.InvokerBytecodeGenerator$CpPatch/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.util.locale.LocaleUtils: java.lang.String toUpperString(java.lang.String)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.font.TrueTypeFont$1: java.lang.Object run()>/new java.io.RandomAccessFile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/39	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.xy.DefaultHighLowDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.locale.BaseLocale: sun.util.locale.BaseLocale createInstance(java.lang.String,java.lang.String)>/new sun.util.locale.BaseLocale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.misc.Unsafe: void <clinit>()>/new sun.misc.Unsafe/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultMultiValueCategoryDataset: void <init>()>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<sun.net.ftp.FtpClientProvider: boolean loadProviderFromProperty()>/new java.util.ServiceConfigurationError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/7	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Locale: java.lang.String getISO3Language()>/new java.util.MissingResourceException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedAreaRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<java.util.zip.ZipCoder: java.lang.String toString(byte[],int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: void <clinit>()>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void checkGeneral()>/new java.util.MissingFormatWidthException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.Font: java.awt.Font getFont(java.util.Map)>/new java.awt.Font/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.VectorRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYStepRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.ssl.HandshakeMessage$CertificateVerify: java.security.Signature getSignature(sun.security.ssl.ProtocolVersion,java.lang.String)>/new java.security.SignatureException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getRangeBounds(java.util.List,org.jfree.data.Range,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$15/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.ClassLoader: void loadLibrary(java.lang.Class,java.lang.String,boolean)>/new java.lang.UnsatisfiedLinkError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/20	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.misc.MessageUtils: void where()>/new java.lang.Throwable/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.xy.XYSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.net.SocketInputStream: int read(byte[],int,int,int)>/new java.lang.ArrayIndexOutOfBoundsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class java.lang.Boolean>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(byte,java.lang.Class,java.lang.invoke.MemberName)>/new java.lang.invoke.DirectMethodHandle$Special/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.font.NativeStrike: void <init>(sun.font.NativeFont,sun.font.FontStrikeDesc)>/new sun.font.NativeStrikeDisposer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$14/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.StringCoding: void <clinit>()>/new java.lang.ThreadLocal/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.ResourceBundle: void <clinit>()>/new java.util.ResourceBundle$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.font.FileFontStrike: java.awt.geom.Point2D$Float getGlyphMetrics(int,boolean)>/new java.util.concurrent.ConcurrentHashMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/27	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList: java.lang.Object remove(int)>/@this
<<immutable-hcontext>>	<sun.nio.ch.SimpleAsynchronousFileChannelImpl: java.util.concurrent.Future implLock(long,long,boolean,java.lang.Object,java.nio.channels.CompletionHandler)>/new java.nio.channels.ClosedChannelException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<javax.crypto.CryptoPermissions: void add(java.security.Permission)>/new java.lang.SecurityException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection,java.lang.ClassLoader,java.security.Principal[])>/new java.security.ProtectionDomain$Key/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.LambdaForm makeReinvokerForm(java.lang.invoke.MethodHandle,int,java.lang.Object,java.lang.String,boolean,java.lang.invoke.LambdaForm$NamedFunction,java.lang.invoke.LambdaForm$NamedFunction)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.sql.DriverManager: java.sql.Driver getDriver(java.lang.String)>/new java.sql.SQLException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Formatter: java.util.Formatter$FormatString[] parse(java.lang.String)>/new java.util.Formatter$FormatSpecifier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.Formatter$Flags: java.util.Formatter$Flags parse(java.lang.String)>/new java.util.DuplicateFormatFlagsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.InvokerBytecodeGenerator: java.lang.invoke.MemberName resolveInvokerMember(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.awt.geom.Order1: sun.awt.geom.Curve getSubCurve(double,double,int)>/new sun.awt.geom.Order1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.util.logging.PlatformLogger$Level: void <clinit>()>/new sun.util.logging.PlatformLogger$Level/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.MethodType: java.lang.invoke.MethodType makeImpl(java.lang.Class,java.lang.Class[],boolean)>/new java.lang.invoke.MethodType/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.AreaRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>/new java.util.zip.ZipFile$ZipFileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.category.CategoryDataset,org.jfree.data.KeyToGroupMap)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.WindItemRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class java.lang.Float>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.time.ZoneOffset: java.time.ZoneOffset ofTotalSeconds(int)>/new java.time.ZoneOffset/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToRangeAxes(int,java.util.List)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getRangeBounds(java.util.List,org.jfree.data.Range,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	org.jfree.data.statistics.DefaultMultiValueCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedDomainCategoryPlot: void <init>()>/new org.jfree.chart.axis.CategoryAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/0	<<immutable-context>>	<java.util.ArrayList: int indexOf(java.lang.Object)>/l1#_0
<<immutable-hcontext>>	<java.nio.charset.Charset: void <clinit>()>/new java.lang.ThreadLocal/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)>/new sun.security.x509.X509CertImpl/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.net.URLClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>/new java.net.SocketPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.nio.file.Files: java.nio.file.Path createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>/new java.nio.file.FileSystemException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.xy.TableXYDataset,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	org.jfree.data.time.ohlc.OHLCItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack32
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<java.text.CharacterIteratorFieldDelegate: void formatted(java.text.Format$Field,java.lang.Object,int,int,java.lang.StringBuffer)>/new java.text.AttributedString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.block.LabelBlock: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>/new org.jfree.chart.entity.ChartEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/31	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: java.util.List getDatasetsMappedToRangeAxis(java.lang.Integer)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack50
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$17/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.nio.charset.CoderResult$1: java.nio.charset.CoderResult create(int)>/new java.nio.charset.CoderResult/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/22	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.x509.X500Name: void parseDN(java.lang.String,java.util.Map)>/new sun.security.x509.RDN/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.LambdaForm makeReinvokerForm(java.lang.invoke.MethodHandle,int,java.lang.Object,java.lang.String,boolean,java.lang.invoke.LambdaForm$NamedFunction,java.lang.invoke.LambdaForm$NamedFunction)>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.locale.LocaleUtils: java.lang.String toUpperString(java.lang.String)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.x509.GeneralNames: void <init>(sun.security.util.DerValue)>/new sun.security.x509.GeneralName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/22	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: void addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double)>/new org.jfree.chart.entity.CategoryItemEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.xy.NormalizedMatrixSeries::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYShapeRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYLineAndShapeRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.SpiderWebPlot: void <clinit>()>/new java.awt.Font/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.Integer: java.lang.Integer valueOf(int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/37	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(java.util.List,boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<java.util.ResourceBundle$Control$CandidateListCache: java.util.List getDefaultList(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new java.util.LinkedList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.time.ZoneOffset: java.time.ZoneOffset ofTotalSeconds(int)>/new java.time.ZoneOffset/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.WaterfallBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/11	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/38	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.nio.file.LinkOption: void <clinit>()>/new java.nio.file.LinkOption/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.String: java.lang.String concat(java.lang.String)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.StandardGlyphVector$GlyphStrike: sun.font.StandardGlyphVector$GlyphStrike create(sun.font.StandardGlyphVector,java.awt.geom.AffineTransform,java.awt.geom.AffineTransform)>/new sun.font.StandardGlyphVector$GlyphStrike/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: void executeQuery(java.sql.Connection,java.lang.String)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/1	<<immutable-context>>	<java.util.Vector: int indexOf(java.lang.Object,int)>/l1#_0
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.Axis: void createAndAddEntity(double,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.entity.AxisEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.util.DerInputStream: sun.security.util.DerValue[] readVector(int)>/new sun.security.util.DerValue/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.SubCategoryAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$6/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>/new java.nio.DirectByteBuffer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.jar.JarVerifier: java.security.cert.Certificate[] mapSignersToCertArray(java.security.CodeSigner[])>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.ComparableObjectItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.nio.CharBuffer: java.nio.CharBuffer get(char[],int,int)>/new java.nio.BufferUnderflowException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/1	<<immutable-context>>	<java.util.Vector: int indexOf(java.lang.Object,int)>/@parameter0
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/1	<<immutable-context>>	<java.lang.Number: void <init>()>/l0#_0
<<immutable-hcontext>>	<java.lang.ConditionalSpecialCasing: void <clinit>()>/new java.lang.ConditionalSpecialCasing$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.nio.charset.Charset: void <clinit>()>/new java.lang.ThreadLocal/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.misc.Unsafe: void <clinit>()>/new sun.misc.Unsafe/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxes(int,java.util.List)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.font.AttributeValues: java.lang.Object i_get(sun.font.EAttribute)>/new java.awt.font.TransformAttribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.util.locale.LocaleUtils: java.lang.String toLowerString(java.lang.String)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.general.DefaultValueDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/6	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.CandlestickRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: void addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.category.CategoryDataset,int,int,boolean,double,double)>/new org.jfree.chart.entity.CategoryItemEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.util.calendar.ZoneInfoFile$1: java.lang.Object run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedFieldLambdaForm(byte,boolean,int)>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.Boolean: void <clinit>()>/new java.lang.Boolean/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.StandardXYItemRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.category.CategoryDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYShapeRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<sun.security.x509.X509CertImpl: java.lang.Object get(java.lang.String)>/new java.security.cert.CertificateParsingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.zip.ZipFile: java.util.zip.Inflater getInflater()>/new java.util.zip.Inflater/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.ProcessEnvironment$Value: java.lang.ProcessEnvironment$Value valueOf(byte[])>/new java.lang.ProcessEnvironment$Value/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot3D: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new java.awt.geom.Arc2D$Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPolicyParser$CryptoPermissionEntry parsePermissionEntry(java.util.Hashtable)>/new javax.crypto.CryptoPolicyParser$CryptoPermissionEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.category.LayeredBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/12	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.Long: java.lang.String toUnsignedString0(long,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<java.lang.ThreadGroup: void destroy()>/new java.lang.IllegalThreadStateException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(java.util.List,boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<sun.net.www.ParseUtil: java.net.URL fileToEncodedURL(java.io.File)>/new java.net.URL/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.xy.YIntervalSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<sun.util.locale.LocaleUtils: java.lang.String toTitleString(java.lang.String)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<sun.util.calendar.CalendarSystem$1: java.util.Properties run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<jdk.internal.org.objectweb.asm.Type: java.lang.String getInternalName()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.DynamicTimeSeriesCollection: void findDomainLimits()>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<java.awt.Polygon: void <init>(int[],int[],int)>/new java.lang.NegativeArraySizeException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/27	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.Polygon/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.Locale$Cache: java.util.Locale createObject(java.util.Locale$LocaleKey)>/new java.util.Locale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.misc.ExtensionDependency$1: java.util.jar.Manifest run()>/new java.util.jar.JarFile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.nio.ch.SimpleAsynchronousFileChannelImpl: java.util.concurrent.Future implLock(long,long,boolean,java.lang.Object,java.nio.channels.CompletionHandler)>/new java.nio.channels.NonReadableChannelException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<class java.lang.invoke.LambdaForm>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Base64$Decoder: byte[] decode(byte[])>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.text.NumberFormat$Field: void <clinit>()>/new java.text.NumberFormat$Field/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeIntrinsic(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,java.lang.invoke.MethodHandleImpl$Intrinsic)>/new java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.general.DefaultKeyedValues2DDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYErrorRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	org.jfree.data.xy.MatrixSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.zip.ZipInputStream: int read(byte[],int,int)>/new java.util.zip.ZipException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.ClassLoader: boolean loadLibrary0(java.lang.Class,java.io.File)>/new java.lang.ClassLoader$NativeLibrary/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<sun.security.util.DisabledAlgorithmConstraints$Constraints: void <init>(java.lang.String[])>/new java.util.HashSet/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/11	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.Axis: void createAndAddEntity(double,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.entity.AxisEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.font.SunLayoutEngine: sun.font.GlyphLayout$LayoutEngine getEngine(sun.font.GlyphLayout$LayoutEngineKey)>/new java.util.concurrent.ConcurrentHashMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(byte,java.lang.Class,java.lang.invoke.MemberName)>/new java.lang.invoke.DirectMethodHandle$StaticAccessor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.LogarithmicAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<org.jfree.chart.ChartUtilities: void saveChartAsPNG(java.io.File,org.jfree.chart.JFreeChart,int,int,org.jfree.chart.ChartRenderingInfo)>/new java.io.FileOutputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.awt.geom.Curve: void insertLine(java.util.Vector,double,double,double,double)>/new sun.awt.geom.Order1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList: void grow(int)>/l0#_0
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.category.CategoryDataset,org.jfree.data.KeyToGroupMap)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: void createIdentityForms()>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.Long: java.lang.Long valueOf(long)>/new java.lang.Long/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.Terminator: void setup()>/new sun.misc.Signal/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.MemberName$Factory: java.lang.invoke.MemberName[] newMemberBuffer(int)>/new java.lang.invoke.MemberName[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<sun.text.bidi.BidiBase$TextAttributeConstants: java.text.AttributedCharacterIterator$Attribute getTextAttribute(java.lang.String)>/new sun.text.bidi.BidiBase$TextAttributeConstants$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormBuffer: java.lang.invoke.LambdaFormBuffer replaceFunctions(java.lang.invoke.LambdaForm$NamedFunction[],java.lang.invoke.LambdaForm$NamedFunction[],java.lang.Object[])>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedFieldLambdaForm(byte,boolean,int)>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.certpath.X509CertPath: byte[] encodePKIPATH()>/new java.security.cert.CertificateEncodingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int,java.lang.Class)>/new java.lang.Object[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYShapeRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<sun.util.logging.PlatformLogger: sun.util.logging.PlatformLogger getLogger(java.lang.String)>/new sun.util.logging.PlatformLogger/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.Class: java.lang.Class$ReflectionData newReflectionData(java.lang.ref.SoftReference,int)>/new java.lang.Class$ReflectionData/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: void createIdentityForms()>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.xy.XYSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.LegendItem getLegendItem(int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: void createIdentityForms()>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.ResourceBundle$RBClassLoader$1: java.util.ResourceBundle$RBClassLoader run()>/new java.util.ResourceBundle$RBClassLoader/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList$Itr: java.lang.Object next()>/$stack5
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/12	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/9	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.awt.font.TransformAttribute: void <clinit>()>/new java.awt.font.TransformAttribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: void drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)>/new org.jfree.chart.plot.PieLabelRecord/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.StringBuffer: char charAt(int)>/new java.lang.StringIndexOutOfBoundsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.category.CategoryDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<java.nio.file.LinkOption: void <clinit>()>/new java.nio.file.LinkOption/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.DynamicTimeSeriesCollection: void findDomainLimits()>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/8	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/9	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/38	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1: java.lang.Thread run()>/new java.lang.Thread/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.Polygon/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.ssl.TrustManagerFactoryImpl: void engineInit(java.security.KeyStore)>/new java.security.KeyStoreException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm$BasicType: void <clinit>()>/new java.lang.invoke.LambdaForm$BasicType/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYAreaRenderer2: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<java.util.jar.Manifest: void read(java.io.InputStream)>/new java.util.jar.Attributes/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.Long: java.lang.String toUnsignedString0(long,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.Class: java.lang.Class$ReflectionData newReflectionData(java.lang.ref.SoftReference,int)>/new java.lang.Class$ReflectionData/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYAreaRenderer2::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.DynamicTimeSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.AbstractList: void <init>()>/l0#_0
<<immutable-hcontext>>	<java.awt.image.DirectColorModel: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.axis.NumberAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/axis#_0
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/16	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/21	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.category.DefaultCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.xy.DefaultIntervalXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.Double: java.lang.Double valueOf(double)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: void executeQuery(java.sql.Connection,java.lang.String)>/new java.util.ArrayList/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.BoundMethodHandle$Species_L: java.lang.invoke.BoundMethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.BoundMethodHandle$Species_L/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYBubbleRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.awt.geom.CurveLink: sun.awt.geom.Curve getMoveto()>/new sun.awt.geom.Order0/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/10	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/new java.security.cert.X509Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.category.CategoryDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<java.lang.Integer: java.lang.String toString(int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.VectorRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<sun.security.x509.CertificateExtensions: void encode(java.io.OutputStream,boolean)>/new java.security.cert.CertificateException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedAreaRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.Polygon/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/9	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYShapeRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<sun.security.util.DisabledAlgorithmConstraints$Constraints: void <init>(java.lang.String[])>/new java.util.HashSet/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.Permission getKnownInstance(java.lang.Class,java.lang.String,java.lang.String)>/new java.util.PropertyPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: void createIdentityForms()>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.LambdaForm makeReinvokerForm(java.lang.invoke.MethodHandle,int,java.lang.Object,java.lang.String,boolean,java.lang.invoke.LambdaForm$NamedFunction,java.lang.invoke.LambdaForm$NamedFunction)>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>/new java.security.NoSuchProviderException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.regex.Pattern$CharPropertyNames: void <clinit>()>/new java.util.regex.Pattern$CharPropertyNames$5/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/6	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: void <init>(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,java.lang.invoke.MemberName)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.jar.Attributes: void read(java.util.jar.Manifest$FastInputStream,byte[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Base64$Decoder: byte[] decode(byte[])>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/37	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/18	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.SpiderWebPlot: void drawRadarPoly(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotRenderingInfo,int,int,double,double)>/new org.jfree.chart.entity.CategoryItemEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPolicyParser$CryptoPermissionEntry parsePermissionEntry(java.util.Hashtable)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$6/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/30	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>/new org.jfree.chart.title.LegendItemBlockContainer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.zip.ZipCoder: java.lang.String toString(byte[],int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.ExtendedCategoryAxis: org.jfree.chart.text.TextBlock createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)>/new org.jfree.chart.text.TextLine/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.Terminator: void setup()>/new java.lang.Terminator$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.title.LegendItemBlockContainer: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>/new org.jfree.chart.entity.LegendItemEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.StandardXYItemRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle makeAllocator(java.lang.invoke.MemberName)>/new java.lang.invoke.DirectMethodHandle$Constructor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: void drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)>/new org.jfree.chart.entity.PieSectionEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.misc.Launcher: java.io.File[] getClassPath(java.lang.String)>/new java.io.File/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.TrueTypeFont: void <init>(java.lang.String,java.lang.Object,int,boolean,boolean)>/new sun.font.TrueTypeFont$TTDisposerRecord/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.awt.DebugSettings: void loadFileProperties()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$7/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setExtensions(java.util.List,java.lang.String)>/new sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.Package: java.util.jar.Manifest loadManifest(java.lang.String)>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.ssl.InputRecord: void read(java.io.InputStream,java.io.OutputStream)>/new java.io.EOFException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/13	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<java.util.jar.JarVerifier: java.security.cert.Certificate[] mapSignersToCertArray(java.security.CodeSigner[])>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.CyclicNumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.CyclicNumberAxis$CycleBoundTick/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#27#_4471
<<immutable-hcontext>>	<java.util.TreeMap$DescendingKeySpliterator: void forEachRemaining(java.util.function.Consumer)>/new java.util.ConcurrentModificationException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.security.AccessController: java.security.AccessControlContext createWrapper(java.security.DomainCombiner,java.lang.Class,java.security.AccessControlContext,java.security.AccessControlContext,java.security.Permission[])>/new java.security.ProtectionDomain/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.nio.CharBuffer: java.nio.CharBuffer put(java.nio.CharBuffer)>/new java.nio.BufferOverflowException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.axis.DateTickUnit::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.time.OffsetTime: java.time.OffsetTime from(java.time.temporal.TemporalAccessor)>/new java.time.DateTimeException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.ExtendedCategoryAxis: org.jfree.chart.text.TextBlock createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)>/new org.jfree.chart.text.TextFragment/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.math.BigInteger: void <clinit>()>/new java.math.BigInteger[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.ssl.HandshakeMessage$Finished: byte[] getFinished(sun.security.ssl.HandshakeHash,int,javax.crypto.SecretKey)>/new java.security.ProviderException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.util.DisabledAlgorithmConstraints$Constraints: void <init>(java.lang.String[])>/new java.util.HashSet/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.SubCategoryAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<javax.crypto.JceSecurity: void loadPolicies(java.io.File,javax.crypto.CryptoPermissions,javax.crypto.CryptoPermissions)>/new java.util.jar.JarFile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<java.io.File$PathStatus: void <clinit>()>/new java.io.File$PathStatus/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.util.locale.InternalLocaleBuilder: void setUnicodeLocaleExtension(java.lang.String)>/new sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getIA5String()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<sun.font.StrikeCache: java.lang.ref.Reference getStrikeRef(sun.font.FontStrike,boolean)>/new sun.font.StrikeCache$WeakDisposerRef/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/9	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.category.StackedBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Arrays: java.util.List asList(java.lang.Object[])>/new java.util.Arrays$ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.DynamicTimeSeriesCollection: void findDomainLimits()>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$Service/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.net.SocketPermission: java.security.PermissionCollection newPermissionCollection()>/new java.net.SocketPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass1(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new org.jfree.chart.entity.XYItemEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.Locale: void readObject(java.io.ObjectInputStream)>/new java.util.IllformedLocaleException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal)>/new java.lang.ArithmeticException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.util.CoreResourceBundleControl: void <init>()>/new java.util.Locale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$5/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.jca.ProviderList: void <init>()>/new sun.security.jca.ProviderConfig/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.WaterfallBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<java.lang.ProcessEnvironment$Variable: java.lang.ProcessEnvironment$Variable valueOf(byte[])>/new java.lang.ProcessEnvironment$Variable/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/22	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.Character: java.lang.Character valueOf(char)>/new java.lang.Character/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.xy.OHLCDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.nio.cs.US_ASCII: java.nio.charset.CharsetDecoder newDecoder()>/new sun.nio.cs.US_ASCII$Decoder/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.font.GlyphLayout: void nextEngineRecord(int,int,int,int,sun.font.Font2D,int)>/new sun.font.GlyphLayout$EngineRecord/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.Character: java.lang.Character valueOf(char)>/new java.lang.Character/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer: void drawVerticalItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new org.jfree.chart.renderer.Outlier/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<class java.lang.invoke.BoundMethodHandle$Species_L>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.BoxAndWhiskerRenderer: void drawVerticalItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)>/new org.jfree.chart.renderer.Outlier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.certpath.PKIX$ValidatorParams: void <init>(java.security.cert.CertPath,java.security.cert.PKIXParameters)>/new java.security.InvalidAlgorithmParameterException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.DefaultXYItemRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPermission[] getPermissions()>/new javax.crypto.CryptoPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.DeviationRenderer: void drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new double[]/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.AreaRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: char conversion(java.lang.String)>/new java.util.UnknownFormatConversionException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.axis.ModuloAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.Long: java.lang.String toString(long,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$Service/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYAreaRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.Polygon/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYSplineRenderer: void drawPrimaryLineAsPath(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)>/new org.jfree.chart.renderer.xy.XYSplineRenderer$ControlPoint/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.Plot: void createAndAddEntity(java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo,java.lang.String,java.lang.String)>/new org.jfree.chart.entity.PlotEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/23	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<class java.lang.Boolean>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<java.util.Formatter$Flags: java.util.Formatter$Flags parse(java.lang.String)>/new java.util.DuplicateFormatFlagsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.jar.JarVerifier: java.security.cert.Certificate[] mapSignersToCertArray(java.security.CodeSigner[])>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedDomainCategoryPlot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm$NamedFunction: void <init>(java.lang.reflect.Method)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.DeviationRenderer: void drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new double[]/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	java.lang.String::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.DynamicTimeSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<sun.security.x509.AVAKeyword: void <clinit>()>/new sun.security.x509.AVAKeyword/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: void read(java.io.Reader)>/new javax.crypto.CryptoPolicyParser$ParsingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/24	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.font.NativeStrike: void <init>(sun.font.NativeFont,sun.font.FontStrikeDesc)>/new sun.font.NativeStrikeDisposer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	org.jfree.chart.renderer.category.ScatterRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.io.ObjectInputStream$BlockDataInputStream: int readBlockHeader(boolean)>/new java.io.StreamCorruptedException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList: java.lang.String outOfBoundsMsg(int)>/l0#_0
<<immutable-hcontext>>	<class java.lang.invoke.MethodHandleImpl$ArrayAccessor>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.logging.PlatformLogger: sun.util.logging.PlatformLogger getLogger(java.lang.String)>/new java.lang.ref.WeakReference/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.CyclicNumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.CyclicNumberAxis$CycleBoundTick/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF(int,int,char[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor$Transform$Kind: void <clinit>()>/new java.lang.invoke.LambdaFormEditor$Transform$Kind/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.Plot: void createAndAddEntity(java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo,java.lang.String,java.lang.String)>/new org.jfree.chart.entity.PlotEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.Millisecond::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>/new sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.category.BoxAndWhiskerRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: int precision(java.lang.String)>/new java.util.IllegalFormatPrecisionException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.ClassLoader: java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>/new java.lang.Package/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeWrappedMember(java.lang.invoke.MethodHandle,java.lang.invoke.MemberName,boolean)>/new java.lang.invoke.MethodHandleImpl$WrappedMember/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.nio.channels.spi.AbstractInterruptibleChannel: void end(boolean)>/new java.nio.channels.AsynchronousCloseException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.xy.XYIntervalDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedLambdaForm(java.lang.invoke.MethodType,int)>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray()>/new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.axis.CategoryAxis3D::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	java.lang.Character::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList$Itr: void checkForComodification()>/$stack1
<<immutable-hcontext>>	org.jfree.data.jdbc.JDBCXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.Permission getKnownInstance(java.lang.Class,java.lang.String,java.lang.String)>/new java.lang.RuntimePermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.category.CategoryDataset,org.jfree.data.KeyToGroupMap)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<sun.awt.DebugSettings: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.nio.DirectCharBufferRU: java.nio.CharBuffer put(char)>/new java.nio.ReadOnlyBufferException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.Permission getKnownInstance(java.lang.Class,java.lang.String,java.lang.String)>/new java.net.NetPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.Class: java.lang.Class$ReflectionData newReflectionData(java.lang.ref.SoftReference,int)>/new java.lang.Class$ReflectionData/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.net.URLClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>/new java.net.SocketPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.category.StackedAreaRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.xy.DefaultHighLowDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.SymbolAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.util.logging.PlatformLogger$Level: void <clinit>()>/new sun.util.logging.PlatformLogger$Level/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.awt.geom.Order3: sun.awt.geom.Curve getReversedCurve()>/new sun.awt.geom.Order3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.nio.CharBuffer: java.nio.CharBuffer put(java.nio.CharBuffer)>/new java.nio.BufferOverflowException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<method type ()java.time.temporal.TemporalQuery>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/22	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.nio.channels.spi.AbstractInterruptibleChannel: void end(boolean)>/new java.nio.channels.ClosedByInterruptException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[] retrieveDisplayNamesImpl(java.lang.String,java.util.Locale)>/new java.util.concurrent.ConcurrentHashMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYAreaRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.awt.font.TextAttribute: void <clinit>()>/new java.awt.font.TextAttribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.PolicyFile$4: java.lang.Void run()>/new sun.security.provider.PolicyFile$PolicyEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void print(java.lang.StringBuilder,double,java.util.Locale,java.util.Formatter$Flags,char,int,boolean)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.nio.file.AccessMode: void <clinit>()>/new java.nio.file.AccessMode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<class java.lang.Float>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>/new java.util.TreeMap$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/9	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.DeviationRenderer: void drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new double[]/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.Terminator: void setup()>/new java.lang.Terminator$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.Package: java.util.jar.Manifest loadManifest(java.lang.String)>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.java2d.cmm.CMSManager: sun.java2d.cmm.PCMM getModule()>/new java.awt.color.CMMException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.zip.ZipInputStream: int read(byte[],int,int)>/new java.util.zip.ZipException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getPrintableString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.awt.SunHints: void <clinit>()>/new sun.awt.SunHints$Value/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.time.Week::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>/new javax.crypto.NoSuchPaddingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.nio.ch.Util: void <clinit>()>/new sun.nio.ch.Util$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.ProcessEnvironment$StringEntrySet$1: java.util.Map$Entry next()>/new java.lang.ProcessEnvironment$StringEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.CyclicNumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.CyclicNumberAxis$CycleBoundTick/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.misc.MessageUtils: void where()>/new java.lang.Throwable/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.xy.DefaultWindDataset: void <init>(java.util.List,java.lang.Object[][][])>/new java.util.ArrayList/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: void createIdentityForms()>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getDeferredInstance(sun.java2d.cmm.ProfileDeferralInfo)>/new java.awt.color.ICC_ProfileGray/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList: java.lang.Object remove(int)>/@this
<<immutable-hcontext>>	<java.lang.invoke.MemberName$Factory: java.lang.invoke.MemberName[] newMemberBuffer(int)>/new java.lang.invoke.MemberName[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.awt.Color: void <clinit>()>/new java.awt.Color/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.time.TimeSeries::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedRangeXYPlot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getInstance(java.lang.String)>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.text.TextBlock: void addLine(java.lang.String,java.awt.Font,java.awt.Paint)>/new org.jfree.chart.text.TextLine/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/27	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPolicyParser$CryptoPermissionEntry parsePermissionEntry(java.util.Hashtable)>/new javax.crypto.CryptoPolicyParser$CryptoPermissionEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.gantt.SlidingGanttCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.DynamicTimeSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	org.jfree.chart.renderer.category.BoxAndWhiskerRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.font.NativeStrike: void <init>(sun.font.NativeFont,sun.font.FontStrikeDesc)>/new sun.font.NativeStrikeDisposer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.xy.CategoryTableXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#27#_4471
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.font.NativeStrike: void <init>(sun.font.NativeFont,sun.font.FontStrikeDesc)>/new sun.font.NativeStrikeDisposer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<javax.crypto.CryptoAllPermission: void <clinit>()>/new javax.crypto.CryptoAllPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.RingPlot: void drawItem(java.awt.Graphics2D,int,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState,int)>/new org.jfree.chart.entity.PieSectionEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.MemberName$Factory: java.lang.invoke.MemberName[] newMemberBuffer(int)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.Long: java.lang.Long valueOf(long)>/new java.lang.Long/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.awt.geom.Curve: void insertLine(java.util.Vector,double,double,double,double)>/new sun.awt.geom.Order1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.font.Decoration: void <clinit>()>/new sun.font.Decoration/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: void executeQuery(java.sql.Connection,java.lang.String)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,boolean,double,double)>/new org.jfree.chart.entity.XYItemEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.geom.Ellipse2D$Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/20	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultMultiValueCategoryDataset: java.lang.Number getValue(int,int)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.Short: short parseShort(java.lang.String,int)>/new java.lang.NumberFormatException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.provider.PolicyParser$GrantEntry: java.lang.Object clone()>/new sun.security.provider.PolicyParser$GrantEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormBuffer: java.lang.invoke.LambdaForm lambdaForm()>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.category.DefaultCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.AbstractList: void <init>()>/@this
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void checkGeneral()>/new java.util.MissingFormatWidthException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.axis.NumberTickUnit::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.ClassLoader: java.lang.Class findClass(java.lang.String)>/new java.lang.ClassNotFoundException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/13	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.Permission getKnownInstance(java.lang.Class,java.lang.String,java.lang.String)>/new java.net.NetPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/28	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.time.temporal.ChronoField: void <clinit>()>/new java.time.temporal.ChronoField/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/0	<<immutable-context>>	<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>/@parameter0
<<immutable-hcontext>>	<java.io.ByteArrayOutputStream: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxes(int,java.util.List)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.SymbolAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: java.util.List createStackedValueList(org.jfree.data.category.CategoryDataset,java.lang.Comparable,int[],double,boolean)>/new java.lang.Object[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.Integer: java.lang.String toString(int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.x509.RDN: void <init>(sun.security.util.DerValue)>/new sun.security.x509.AVA/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.axis.NumberAxis3D::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/7	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.awt.SunHints: void <clinit>()>/new sun.awt.SunHints$Key/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedDomainXYPlot: void <init>()>/new org.jfree.chart.axis.NumberAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.DynamicTimeSeriesCollection: void findDomainLimits()>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/26	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.Double: java.lang.Double valueOf(java.lang.String)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.MemberName: java.lang.IllegalAccessException makeAccessException(java.lang.String,java.lang.Object)>/new java.lang.IllegalAccessException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.Arrays: byte[] copyOf(byte[],int)>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.InvokerBytecodeGenerator: java.lang.invoke.MemberName resolveInvokerMember(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.StackedXYBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/0	<<immutable-context>>	<java.util.ArrayList: boolean contains(java.lang.Object)>/@parameter0
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/19	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.general.DefaultKeyedValues2DDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.category.LineAndShapeRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.reflect.annotation.AnnotationParser: java.lang.annotation.Annotation parseAnnotation2(java.nio.ByteBuffer,sun.reflect.ConstantPool,java.lang.Class,boolean,java.lang.Class[])>/new java.lang.TypeNotPresentException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/0	<<immutable-context>>	<java.lang.Object: void <init>()>/@this
<<immutable-hcontext>>	<java.awt.image.IndexColorModel: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.misc.MetaIndex: void registerDirectory(java.io.File)>/new java.io.File/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.AttributeValues: java.lang.Object i_get(sun.font.EAttribute)>/new java.awt.font.TransformAttribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.pkcs.PKCS9Attributes: byte[] decode(sun.security.util.DerInputStream)>/new sun.security.pkcs.PKCS9Attribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<<main-thread-group>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<sun.awt.geom.Order2: sun.awt.geom.Curve getSubCurve(double,double,int)>/new sun.awt.geom.Order2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.net.www.ParseUtil: java.lang.String encodePath(java.lang.String,boolean)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<class java.lang.invoke.BoundMethodHandle>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.io.File: java.net.URL toURL()>/new java.net.MalformedURLException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.LogarithmicAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.util.SecurityConstants: void <clinit>()>/new java.security.AllPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyParser$DomainEntry: void add(sun.security.provider.PolicyParser$KeyStoreEntry)>/new sun.security.provider.PolicyParser$ParsingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/8	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.axis.DateAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.xy.VectorSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#27#_4471
<<immutable-hcontext>>	<org.jfree.chart.JFreeChart: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)>/new org.jfree.chart.entity.JFreeChartEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.MemberName: java.lang.ReflectiveOperationException makeAccessException()>/new java.lang.NoSuchFieldException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<javax.crypto.CryptoAllPermission: java.security.PermissionCollection newPermissionCollection()>/new javax.crypto.CryptoAllPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/1	<<immutable-context>>	<java.util.ArrayList: int indexOf(java.lang.Object)>/@parameter0
<<immutable-hcontext>>	<org.jfree.chart.block.LabelBlock: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>/new org.jfree.chart.entity.ChartEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.InvokerBytecodeGenerator: java.lang.String constantPlaceholder(java.lang.Object)>/new java.lang.invoke.InvokerBytecodeGenerator$CpPatch/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>/new sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.Permission getKnownInstance(java.lang.Class,java.lang.String,java.lang.String)>/new java.net.NetPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<<main-thread-group>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.util.calendar.ZoneInfoFile: java.lang.String toCustomID(int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.EnumMap$ValueIterator: java.lang.Object next()>/new java.util.NoSuchElementException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToDomainAxes(int,java.util.List)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.jca.ProviderList: sun.security.jca.ProviderList getJarList(java.lang.String[])>/new sun.security.jca.ProviderConfig/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/10	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.LegendItem getLegendItem(int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.ProcessEnvironment$StringEntrySet$1: java.util.Map$Entry next()>/new java.lang.ProcessEnvironment$StringEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBubbleRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.text.NumberFormat$Field: void <clinit>()>/new java.text.NumberFormat$Field/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/16	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.StringBuffer: char charAt(int)>/new java.lang.StringIndexOutOfBoundsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/7	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<sun.security.x509.CertificateExtensions: void parseExtension(sun.security.x509.Extension)>/new sun.security.x509.UnparseableExtension/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<sun.misc.JarIndex: void addToList(java.lang.String,java.lang.String,java.util.HashMap)>/new java.util.LinkedList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.block.LabelBlock: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>/new org.jfree.chart.entity.ChartEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxis(int,int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.LinkedHashMap: java.util.HashMap$TreeNode newTreeNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)>/new java.util.HashMap$TreeNode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/12	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.SpiderWebPlot: org.jfree.chart.LegendItemCollection getLegendItems()>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.io.File: java.io.File getParentFile()>/new java.io.File/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.nio.cs.US_ASCII: java.nio.charset.CharsetDecoder newDecoder()>/new sun.nio.cs.US_ASCII$Decoder/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.ScatterRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.xy.XYDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.Second::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.category.StatisticalBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.misc.URLClassPath$FileLoader$1: java.io.InputStream getInputStream()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.CyclicNumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.CyclicNumberAxis$CycleBoundTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.misc.URLClassPath$3: sun.misc.URLClassPath$Loader run()>/new sun.misc.URLClassPath$Loader/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.axis.ModuloAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#27#_4471
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/19	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.ref.Finalizer: void <clinit>()>/new java.lang.ref.Finalizer$FinalizerThread/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1: java.lang.Thread run()>/new java.lang.ThreadGroup/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.xy.XYDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.misc.URLClassPath$3: sun.misc.URLClassPath$Loader run()>/new sun.misc.URLClassPath$FileLoader/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<java.lang.ConditionalSpecialCasing: void <clinit>()>/new java.lang.ConditionalSpecialCasing$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.JFreeChartInfo: void <init>()>/new org.jfree.chart.ui.Contributor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeVarargsCollector(java.lang.invoke.MethodHandle,java.lang.Class)>/new java.lang.invoke.MethodHandleImpl$AsVarargsCollector/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: void read(java.io.Reader)>/new javax.crypto.CryptoPolicyParser$ParsingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.StackedXYAreaRenderer2::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	<sun.util.locale.provider.LocaleResources: java.lang.Object[] getDecimalFormatSymbolsData()>/new java.lang.Object[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.SamplingXYLineRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.font.StandardGlyphVector: java.awt.Shape getGlyphVisualBounds(int)>/new java.awt.Shape[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.jca.ProviderList: void <clinit>()>/new sun.security.jca.ProviderList$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.gantt.TaskSeriesCollection: java.lang.Number getStartValue(java.lang.Comparable,java.lang.Comparable)>/new java.lang.Long/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$7/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/31	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/new sun.security.x509.X509CertImpl/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.image.ColorModel: java.awt.image.ColorModel getRGBdefault()>/new java.awt.image.DirectColorModel/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>/new sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: void expandSelf(sun.security.provider.PolicyFile$SelfPermission,java.util.List,java.security.Principal[],java.security.Permissions)>/new java.security.UnresolvedPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<javax.crypto.CryptoPermission: java.security.PermissionCollection newPermissionCollection()>/new javax.crypto.CryptoPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$6/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/7	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.text.DecimalFormat: java.lang.String fastFormat(double)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.InvokerBytecodeGenerator$1: java.lang.Void run()>/new java.io.FileOutputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.time.Minute::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.MeterPlot: org.jfree.chart.LegendItemCollection getLegendItems()>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.VectorRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.AxisLocation: void <clinit>()>/new org.jfree.chart.axis.AxisLocation/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.xy.DefaultOHLCDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getDeferredInstance(sun.java2d.cmm.ProfileDeferralInfo)>/new java.awt.color.ICC_ProfileGray/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseNetscapeCertChain(sun.security.util.DerValue)>/new sun.security.x509.X509CertImpl/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.String: java.lang.String copyValueOf(char[],int,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.ResourceBundle$RBClassLoader$1: java.util.ResourceBundle$RBClassLoader run()>/new java.util.ResourceBundle$RBClassLoader/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.GlyphLayout: void nextEngineRecord(int,int,int,int,sun.font.Font2D,int)>/new sun.font.GlyphLayout$EngineRecord/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.jar.Attributes: void read(java.util.jar.Manifest$FastInputStream,byte[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.image.BufferedImage: void <init>(int,int,int)>/new java.awt.image.ComponentColorModel/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.time.Day::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.PropertyPermissionCollection: void add(java.security.Permission)>/new java.util.PropertyPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<javax.crypto.JarVerifier: void verify()>/new java.util.jar.JarException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.misc.ProxyGenerator$ConstantPool$ValueEntry: void write(java.io.DataOutputStream)>/new java.lang.InternalError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.provider.X509Factory: java.security.cert.CRL engineGenerateCRL(java.io.InputStream)>/new java.security.cert.CRLException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/17	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.axis.LogarithmicAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.MemberName: void <init>(java.lang.reflect.Method,boolean)>/new java.lang.LinkageError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList: java.lang.Object remove(int)>/l0#_0
<<immutable-hcontext>>	<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<java.lang.Long: java.lang.Long valueOf(long)>/new java.lang.Long/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.util.locale.provider.LocaleProviderAdapter$Type: void <clinit>()>/new sun.util.locale.provider.LocaleProviderAdapter$Type/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.BoxAndWhiskerRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYShapeRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.Permission getKnownInstance(java.lang.Class,java.lang.String,java.lang.String)>/new java.io.FilePermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.xy.DefaultXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/1	<<immutable-context>>	<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>/l1#_0
<<immutable-hcontext>>	<sun.security.provider.PolicyParser$DomainEntry: void add(sun.security.provider.PolicyParser$KeyStoreEntry)>/new sun.security.provider.PolicyParser$ParsingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList$Itr: void <init>(java.util.ArrayList)>/$stack2
<<immutable-hcontext>>	<org.jfree.chart.axis.LogarithmicAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.stream.AbstractTask: void setRawResult(java.lang.Object)>/new java.lang.IllegalStateException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF(int,int,char[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedLambdaForm(java.lang.invoke.MethodType,int)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList: void ensureExplicitCapacity(int)>/@this
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.net.ftp.FtpClientProvider: boolean loadProviderFromProperty()>/new java.util.ServiceConfigurationError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.AxisLocation: void <clinit>()>/new org.jfree.chart.axis.AxisLocation/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.axis.DateAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.TimeTableXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#27#_4471
<<immutable-hcontext>>	org.jfree.chart.renderer.category.DefaultCategoryItemRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>/new java.security.MessageDigest$Delegate/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.misc.MetaIndex: void registerDirectory(java.io.File)>/new java.io.File/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.ClassValue$Version: void <init>(java.lang.ClassValue)>/new java.lang.ClassValue$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.LinkedHashMap: java.util.HashMap$Node newNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)>/new java.util.LinkedHashMap$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/0	<<immutable-context>>	<java.util.LinkedList: boolean contains(java.lang.Object)>/l1#_0
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$11/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: void <init>(sun.java2d.cmm.ProfileDeferralInfo)>/new java.awt.color.ICC_Profile$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.CyclicNumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.CyclicNumberAxis$CycleBoundTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.Permission getKnownInstance(java.lang.Class,java.lang.String,java.lang.String)>/new java.util.PropertyPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.Package: java.util.jar.Manifest loadManifest(java.lang.String)>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.ClassLoader: void <clinit>()>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/15	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void checkGeneral()>/new java.util.MissingFormatWidthException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class java.lang.invoke.MethodHandleImpl>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.axis.NumberTickUnit::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.Hashtable: void addEntry(int,java.lang.Object,java.lang.Object,int)>/new java.util.Hashtable$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/14	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.text.TextUtilities: org.jfree.chart.text.TextBlock createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)>/new org.jfree.chart.text.TextFragment/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/24	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$7/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.Axis: org.jfree.chart.axis.AxisState drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.entity.AxisLabelEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList: int access$100(java.util.ArrayList)>/@parameter0
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.CyclicNumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.CyclicNumberAxis$CycleBoundTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)>/new sun.security.x509.X509CertImpl/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.cert.Certificate[] getCertificates(java.security.KeyStore,java.lang.String,sun.security.provider.PolicyFile$PolicyInfo)>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.util.SignatureFileVerifier: java.security.CodeSigner[] getSigners(sun.security.pkcs.SignerInfo[],sun.security.pkcs.PKCS7)>/new java.security.CodeSigner[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/7	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.x509.X509Key: java.security.PublicKey buildX509Key(sun.security.x509.AlgorithmId,sun.security.util.BitArray)>/new java.lang.InstantiationException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.ClassValue: void <init>()>/new java.lang.ClassValue$Identity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1: java.lang.Thread run()>/new java.lang.Thread/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedDomainCategoryPlot: void <init>()>/new org.jfree.chart.axis.CategoryAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.VectorRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: void <clinit>()>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYLineAndShapeRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.awt.image.BufferedImage: void <init>(int,int,int)>/new java.awt.image.IndexColorModel/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: void drawStackHorizontal(java.util.List,java.lang.Comparable,java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset)>/new java.lang.Object[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.Double: java.lang.Double valueOf(double)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.jar.JarVerifier: void processEntry(sun.security.util.ManifestEntryVerifier)>/new sun.security.util.SignatureFileVerifier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.awt.geom.Order3: void addInstance(java.util.Vector,double,double,double,double,double,double,double,double,int)>/new sun.awt.geom.Order3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList: void <init>()>/l0#_0
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.AreaRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedDomainXYPlot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/0	<<immutable-context>>	<java.lang.Number: void <init>()>/@this
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getBMPString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: void <clinit>()>/new java.awt.BasicStroke/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.general.DefaultKeyedValues2DDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<java.nio.file.AccessMode: void <clinit>()>/new java.nio.file.AccessMode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.misc.ExtensionDependency: java.io.File[] getExtFiles(java.io.File[])>/new java.io.File/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.util.locale.provider.LocaleResources: java.lang.String[][] getZoneStrings()>/new java.lang.String[][]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$GrantEntry parseGrantEntry()>/new sun.security.provider.PolicyParser$PrincipalEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>/new org.jfree.chart.title.LegendGraphic/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<sun.security.provider.SeedGenerator$URLSeedGenerator$1: java.io.InputStream run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.misc.FloatingDecimal$BinaryToASCIIBuffer: java.lang.String toJavaFormatString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<class java.lang.invoke.CallSite>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/18	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.Locale$Cache: java.util.Locale createObject(java.util.Locale$LocaleKey)>/new java.util.Locale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.net.InetAddress$Cache$Type: void <clinit>()>/new java.net.InetAddress$Cache$Type/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>/new org.jfree.chart.block.LabelBlock/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/23	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedDomainXYPlot: void <init>()>/new org.jfree.chart.axis.NumberAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: int index(java.lang.String)>/new java.lang.AssertionError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.nio.file.spi.FileSystemProvider: java.nio.file.FileSystem newFileSystem(java.nio.file.Path,java.util.Map)>/new java.lang.UnsupportedOperationException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.font.TrueTypeFont: void <init>(java.lang.String,java.lang.Object,int,boolean,boolean)>/new java.awt.FontFormatException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<javax.swing.table.DefaultTableColumnModel: void addColumn(javax.swing.table.TableColumn)>/new java.lang.IllegalArgumentException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.xy.XYIntervalSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#27#_4471
<<immutable-hcontext>>	org.jfree.data.xy.XYSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.util.locale.LocaleExtensions: void <init>(java.util.Map,java.util.Set,java.util.Map)>/new sun.util.locale.UnicodeLocaleExtension/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.HashMap: java.util.HashMap$Node newNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)>/new java.util.HashMap$Node/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.AbstractValidatingLambdaMetafactory: void <init>(java.lang.invoke.MethodHandles$Lookup,java.lang.invoke.MethodType,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,java.lang.Class[],java.lang.invoke.MethodType[])>/new java.lang.invoke.LambdaConversionException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: void executeQuery(java.sql.Connection,java.lang.String)>/new java.util.ArrayList/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/24	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.awt.RenderingHints$Key: void recordIdentity(java.awt.RenderingHints$Key)>/new java.lang.ref.WeakReference/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPermission[] getPermissions()>/new javax.crypto.CryptoPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.jca.ProviderList: void <clinit>()>/new sun.security.jca.ProviderList$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.awt.image.BufferedImage: void <init>(int,int,int)>/new java.awt.image.DirectColorModel/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.misc.MetaIndex: void registerDirectory(java.io.File)>/new sun.misc.MetaIndex/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.x509.X509CRLImpl: void parse(sun.security.util.DerValue)>/new sun.security.x509.X509CRLImpl$X509IssuerSerial/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.Axis: org.jfree.chart.axis.AxisState drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.entity.AxisLabelEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>/new java.util.regex.Pattern$CharPropertyNames$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/14	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.xy.XYSeries::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void printCharacter(java.lang.Object)>/new java.util.IllegalFormatCodePointException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.nio.channels.spi.AbstractInterruptibleChannel: void end(boolean)>/new java.nio.channels.ClosedByInterruptException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.text.CharacterIteratorFieldDelegate: java.text.AttributedCharacterIterator getIterator(java.lang.String)>/new java.text.AttributedString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<java.text.BreakIterator: java.text.BreakIterator getBreakInstance(java.util.Locale,int)>/new java.text.BreakIterator$BreakIteratorCache/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.text.bidi.BidiBase$TextAttributeConstants: java.text.AttributedCharacterIterator$Attribute getTextAttribute(java.lang.String)>/new sun.text.bidi.BidiBase$TextAttributeConstants$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.JFreeChartInfo: void <init>()>/new org.jfree.chart.ui.Contributor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$14/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.WaterfallBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	org.jfree.chart.renderer.category.StatisticalBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.ClusteredXYBarRenderer: org.jfree.data.Range findDomainBoundsWithOffset(org.jfree.data.xy.IntervalXYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<java.math.BigInteger: void <clinit>()>/new java.math.BigInteger/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.util.ObjectIdentifier: sun.security.util.ObjectIdentifier newInternal(int[])>/new sun.security.util.ObjectIdentifier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.ssl.TrustManagerFactoryImpl: void engineInit(java.security.KeyStore)>/new java.security.KeyStoreException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDotRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.CallSite: java.lang.invoke.WrongMethodTypeException wrongTargetType(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>/new java.lang.invoke.WrongMethodTypeException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.stream.Node: java.util.stream.Node getChild(int)>/new java.lang.IndexOutOfBoundsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.Axis: org.jfree.chart.axis.AxisState drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.entity.AxisLabelEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: void createIdentityForms()>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/12	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.security.CryptoPrimitive: void <clinit>()>/new java.security.CryptoPrimitive/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.StackedXYBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.misc.URLClassPath$JarLoader: java.net.URL[] parseClassPath(java.net.URL,java.lang.String)>/new java.net.URL/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle$Special: java.lang.invoke.MethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.DirectMethodHandle$Special/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$DomainEntry parseDomainEntry()>/new sun.security.provider.PolicyParser$KeyStoreEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.category.BarRenderer3D::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedRangeCategoryPlot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.xy.XYSeries getSeries(java.lang.Comparable)>/new org.jfree.data.UnknownKeyException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>/new sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.awt.geom.Order3: sun.awt.geom.Curve getSubCurve(double,double,int)>/new sun.awt.geom.Order3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.Long: java.lang.String toString(long)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.String: java.lang.String substring(int,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.misc.MetaIndex: void registerDirectory(java.io.File)>/new java.io.File/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.time.Week::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<sun.util.locale.BaseLocale$Cache: sun.util.locale.BaseLocale createObject(sun.util.locale.BaseLocale$Key)>/new sun.util.locale.BaseLocale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.ssl.HandshakeMessage$Finished: byte[] getFinished(sun.security.ssl.HandshakeHash,int,javax.crypto.SecretKey)>/new java.security.ProviderException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.Long: java.lang.String toString(long,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$5/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.LayoutPathImpl$EndType: void <clinit>()>/new sun.font.LayoutPathImpl$EndType/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.awt.geom.AreaOp: void addEdges(java.util.Vector,java.util.Vector,int)>/new sun.awt.geom.Edge/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/6	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.x509.X509CRLImpl: void parse(sun.security.util.DerValue)>/new sun.security.x509.X509CRLImpl$X509IssuerSerial/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.font.FileFontStrike: java.awt.geom.GeneralPath getGlyphOutline(int,float,float)>/new java.util.concurrent.ConcurrentHashMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.BoundMethodHandle$Species_L: java.lang.invoke.BoundMethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.BoundMethodHandle$Species_L/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: java.util.List createStackedValueList(org.jfree.data.category.CategoryDataset,java.lang.Comparable,int[],double,boolean)>/new java.lang.Object[]/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/new java.util.TreeMap$Entry/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/19	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.category.SlidingCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.lang.Object: void <init>()>/@this
<<immutable-hcontext>>	<sun.awt.geom.AreaOp: void resolveLinks(java.util.Vector,java.util.Vector,java.util.Vector)>/new sun.awt.geom.ChainEnd/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/20	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYAreaRenderer2: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.StringBuilder: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYShapeRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Formatter$Flags: java.util.Formatter$Flags parse(char)>/new java.util.UnknownFormatFlagsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.axis.CyclicNumberAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/@parameter0
<<immutable-hcontext>>	<sun.misc.JarIndex: void addToList(java.lang.String,java.lang.String,java.util.HashMap)>/new java.util.LinkedList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.xy.MatrixSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#27#_4471
<<immutable-hcontext>>	<method type ()java.util.Comparator>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/16	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.util.PolicyUtil: java.io.InputStream getInputStream(java.net.URL)>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.Stack: java.lang.Object peek()>/new java.util.EmptyStackException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle getDirectMethodCommon(byte,java.lang.Class,java.lang.invoke.MemberName,boolean,boolean,java.lang.Class)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.Long: java.lang.String toString(long)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: void addGrantEntry(sun.security.provider.PolicyParser$GrantEntry,java.security.KeyStore,sun.security.provider.PolicyFile$PolicyInfo)>/new sun.security.provider.PolicyFile$SelfPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/8	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.LookupPaintScale$PaintItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.DeviationRenderer: void drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new double[]/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/17	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.math.BigDecimal: java.math.BigDecimal divide(java.math.BigDecimal)>/new java.lang.ArithmeticException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<mock string concatenation result>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm bindArgumentForm(int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.TimeTableXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$PermissionEntry parsePermissionEntry()>/new sun.security.provider.PolicyParser$PermissionEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[] retrieveDisplayNamesImpl(java.lang.String,java.util.Locale)>/new java.lang.String[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar getLocalGregorianCalendar(java.lang.String)>/new sun.util.calendar.Era/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.locale.LocaleExtensions: void <init>(java.util.Map,java.util.Set,java.util.Map)>/new sun.util.locale.UnicodeLocaleExtension/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$17/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/0	<<immutable-context>>	<java.lang.Number: void <init>()>/l0#_0
<<immutable-hcontext>>	<sun.security.util.SignatureFileVerifier: void updateSigners(java.security.CodeSigner[],java.util.Hashtable,java.lang.String)>/new java.security.CodeSigner[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.security.Permissions: java.security.PermissionCollection getPermissionCollection(java.security.Permission,boolean)>/new java.security.PermissionsHash/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYStepRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.Permission getKnownInstance(java.lang.Class,java.lang.String,java.lang.String)>/new java.lang.RuntimePermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxes(int,java.util.List)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.category.IntervalBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.misc.Unsafe: void <clinit>()>/new sun.misc.Unsafe/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.String: java.lang.String substring(int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.jar.JarFile: java.util.jar.Manifest getManifestFromReference()>/new java.util.jar.Manifest/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.ssl.HandshakeMessage$Finished: byte[] getFinished(sun.security.ssl.HandshakeHash,int,javax.crypto.SecretKey)>/new java.security.ProviderException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.PolicyFile$4: java.lang.Void run()>/new sun.security.provider.PolicyFile$PolicyEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/14	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/1	<<immutable-context>>	<java.util.Arrays$ArrayList: int indexOf(java.lang.Object)>/@parameter0
<<immutable-hcontext>>	<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.LambdaForm makeReinvokerForm(java.lang.invoke.MethodHandle,int,java.lang.Object,java.lang.String,boolean,java.lang.invoke.LambdaForm$NamedFunction,java.lang.invoke.LambdaForm$NamedFunction)>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.time.ohlc.OHLCItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: void drawStackVertical(java.util.List,java.lang.Comparable,java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset)>/new java.lang.Object[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.nio.charset.CoderResult$Cache: java.nio.charset.CoderResult get(int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.statistics.SimpleHistogramDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#27#_4471
<<immutable-hcontext>>	<java.sql.DriverManager: java.sql.Driver getDriver(java.lang.String)>/new java.sql.SQLException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.WaterfallBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot3D: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.entity.PieSectionEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis3D: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<class java.lang.Void>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.category.CategoryDataset,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.geom.Ellipse2D$Double/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/9	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.Font: java.awt.Font deriveFont(java.util.Map)>/new java.awt.Font/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedFieldLambdaForm(byte,boolean,int)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYLineAndShapeRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.xy.DefaultWindDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$12/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.category.CategoryDataset,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getT61String()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.nio.cs.US_ASCII: java.nio.charset.CharsetDecoder newDecoder()>/new sun.nio.cs.US_ASCII$Decoder/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.nio.ch.Util: void <clinit>()>/new sun.nio.ch.Util$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.DataUtilities: java.lang.Number[] createNumberArray(double[])>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name withConstraint(java.lang.Object)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<sun.util.locale.provider.LocaleResources: void <clinit>()>/new java.lang.Object/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.xy.DefaultHighLowDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedRangeXYPlot: void <init>()>/new org.jfree.chart.axis.NumberAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/axis#_0
<<immutable-hcontext>>	<org.jfree.chart.plot.Plot: void createAndAddEntity(java.awt.geom.Rectangle2D,org.jfree.chart.plot.PlotRenderingInfo,java.lang.String,java.lang.String)>/new org.jfree.chart.entity.PlotEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYBlockRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultMultiValueCategoryDataset: void <init>()>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<class java.lang.invoke.MethodHandleImpl$BindCaller>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.Integer$IntegerCache: void <clinit>()>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.awt.color.ICC_Profile$3: java.io.FileInputStream run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis: java.util.List refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.CategoryTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.general.DefaultKeyedValues2DDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<class java.lang.invoke.MethodHandleImpl>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultMultiValueCategoryDataset: void <init>()>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<org.jfree.chart.axis.ValueAxis: org.jfree.chart.axis.AxisState drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeIntrinsic(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandleImpl$Intrinsic)>/new java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.MultiplePiePlot: org.jfree.chart.LegendItemCollection getLegendItems()>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getRangeBounds(java.util.List,org.jfree.data.Range,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<sun.font.EAttribute: void <clinit>()>/new sun.font.EAttribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MemberName resolveOrFail(byte,java.lang.Class,java.lang.String,java.lang.Class)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.net.URLClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>/new java.io.FilePermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>/new java.nio.charset.UnsupportedCharsetException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void failMismatch(java.util.Formatter$Flags,char)>/new java.util.FormatFlagsConversionMismatchException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.ThreadGroup: void destroy()>/new java.lang.IllegalThreadStateException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.HashMap: java.util.HashMap$TreeNode replacementTreeNode(java.util.HashMap$Node,java.util.HashMap$Node)>/new java.util.HashMap$TreeNode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack60
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getIA5String()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.time.temporal.ChronoField: void <clinit>()>/new java.time.temporal.ChronoField/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.BarRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.awt.image.ColorModel: java.awt.image.ColorModel getRGBdefault()>/new java.awt.image.DirectColorModel/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>/new java.util.zip.ZipFile$ZipFileInflaterInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>/new org.jfree.chart.block.LabelBlock/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.font.TrueTypeFont$1: java.lang.Object run()>/new java.io.RandomAccessFile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class java.lang.Integer>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.Long: java.lang.Long valueOf(long)>/new java.lang.Long/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/new sun.security.pkcs.SignerInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.util.DerIndefLenConverter: byte[] getLengthBytes(int)>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.net.InetAddress$Cache$Type: void <clinit>()>/new java.net.InetAddress$Cache$Type/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.ClusteredXYBarRenderer: org.jfree.data.Range findDomainBoundsWithOffset(org.jfree.data.xy.IntervalXYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<java.nio.charset.CoderResult$1: java.nio.charset.CoderResult create(int)>/new java.nio.charset.CoderResult/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.text.DateFormat$Field: void <clinit>()>/new java.text.DateFormat$Field/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList$Itr: void <init>(java.util.ArrayList,java.util.ArrayList$1)>/l1#_0
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.x509.RDN: void <init>(sun.security.util.DerValue)>/new sun.security.x509.AVA/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<java.lang.invoke.BoundMethodHandle$Species_L: java.lang.invoke.BoundMethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.BoundMethodHandle$Species_L/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.FileFontStrike: void <init>(sun.font.FileFont,sun.font.FontStrikeDesc)>/new sun.font.FontStrikeDisposer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/20	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedDomainXYPlot: void <init>()>/new org.jfree.chart.axis.NumberAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/axis#_0
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/18	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.DynamicTimeSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<java.util.jar.Manifest: void read(java.io.InputStream)>/new java.util.jar.Attributes/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.Terminator: void setup()>/new sun.misc.Signal/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.axis.CyclicNumberAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.java2d.Disposer: java.lang.Void lambda$static$0()>/new java.lang.Thread/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.category.StatisticalBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>/new sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.xy.XYBarDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPermission[] getPermissions()>/new javax.crypto.CryptoPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.awt.geom.AreaOp: java.util.Vector pruneEdges(java.util.Vector)>/new sun.awt.geom.CurveLink/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYShapeRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/9	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.awt.geom.Order2: sun.awt.geom.Curve getReversedCurve()>/new sun.awt.geom.Order2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.xy.VectorSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class int[]>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyParser$DomainEntry: void add(sun.security.provider.PolicyParser$KeyStoreEntry)>/new sun.security.provider.PolicyParser$ParsingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.java2d.StateTrackable$State: void <clinit>()>/new sun.java2d.StateTrackable$State/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.ClassValue: java.lang.ClassValue$Entry makeEntry(java.lang.ClassValue$Version,java.lang.Object)>/new java.lang.ClassValue$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.jca.ProviderList: sun.security.jca.ProviderList getJarList(java.lang.String[])>/new sun.security.jca.ProviderConfig/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/22	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<java.security.AllPermission: java.security.PermissionCollection newPermissionCollection()>/new java.security.AllPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.font.NativeFont: sun.font.FontStrike createStrike(sun.font.FontStrikeDesc)>/new sun.font.DelegateStrike/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.axis.ExtendedCategoryAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeWrappedMember(java.lang.invoke.MethodHandle,java.lang.invoke.MemberName,boolean)>/new java.lang.invoke.MethodHandleImpl$WrappedMember/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.util.DisabledAlgorithmConstraints$Constraints: void <init>(java.lang.String[])>/new sun.security.util.DisabledAlgorithmConstraints$jdkCAConstraint/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<java.io.FileInputStream: void <init>(java.io.File)>/new java.io.FileNotFoundException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.SpiderWebPlot: org.jfree.chart.LegendItemCollection getLegendItems()>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.ClusteredXYBarRenderer: org.jfree.data.Range findDomainBoundsWithOffset(org.jfree.data.xy.IntervalXYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<class java.lang.Double>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.category.CategoryDataset,org.jfree.data.KeyToGroupMap)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.Polygon/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.util.DerInputStream: sun.security.util.DerValue[] readVector(int)>/new sun.security.util.DerValue/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.time.Hour::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<java.util.LinkedHashMap: java.util.HashMap$Node newNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)>/new java.util.LinkedHashMap$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.System: void initializeSystemClass()>/new java.io.FileOutputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.provider.SeedGenerator$URLSeedGenerator$1: java.io.InputStream run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.ThreadGroup: void destroy()>/new java.lang.IllegalThreadStateException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$5/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/1	<<immutable-context>>	<java.lang.Integer: boolean equals(java.lang.Object)>/l0#_0
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.axis.AxisState drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.entity.CategoryLabelEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.category.ScatterRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.statistics.HistogramDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createStandardTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.net.InetAddress$Cache$Type: void <clinit>()>/new java.net.InetAddress$Cache$Type/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.Class: java.lang.Class$ReflectionData newReflectionData(java.lang.ref.SoftReference,int)>/new java.lang.Class$ReflectionData/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.Properties: java.lang.String loadConvert(char[],int,int,char[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.axis.AxisState drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.entity.CategoryLabelEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<java.lang.StringBuffer: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.StringCoding: void <clinit>()>/new java.lang.ThreadLocal/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.time.Minute::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.security.UnresolvedPermissionCollection: void add(java.security.Permission)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$17/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/35	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYLine3DRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	org.jfree.data.xy.VectorDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(byte,java.lang.Class,java.lang.invoke.MemberName)>/new java.lang.invoke.DirectMethodHandle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.font.TrueTypeFont$1: java.lang.Object run()>/new java.io.RandomAccessFile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$Service/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.ClusteredXYBarRenderer: org.jfree.data.Range findDomainBoundsWithOffset(org.jfree.data.xy.IntervalXYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<java.lang.invoke.MemberName: void <init>(java.lang.reflect.Method,boolean)>/new java.lang.LinkageError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.font.FontResolver: void <init>()>/new java.awt.Font/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.math.BigInteger: void <clinit>()>/new java.math.BigInteger/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm makeArgumentCombinationForm(int,java.lang.invoke.MethodType,boolean,boolean)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.awt.geom.Order1: sun.awt.geom.Curve getReversedCurve()>/new sun.awt.geom.Order1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedFieldLambdaForm(byte,boolean,int)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.misc.URLClassPath$JarLoader$3: sun.misc.URLClassPath$JarLoader run()>/new sun.misc.URLClassPath$JarLoader/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getInstance(byte[])>/new java.awt.color.ICC_ProfileRGB/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartUtilities: void saveChartAsPNG(java.io.File,org.jfree.chart.JFreeChart,int,int,org.jfree.chart.ChartRenderingInfo)>/new java.io.FileOutputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<javax.crypto.CryptoPermissions: void add(java.security.Permission)>/new java.lang.SecurityException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/19	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYAreaRenderer2: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<java.lang.Short: java.lang.Short valueOf(short)>/new java.lang.Short/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>/new org.jfree.chart.block.BlockContainer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	java.util.Locale::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<java.awt.Polygon: void <init>(int[],int[],int)>/new java.lang.NegativeArraySizeException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCCategoryDataset: void executeQuery(java.sql.Connection,java.lang.String)>/new java.lang.Long/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<<string-constant>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.LambdaForm makeReinvokerForm(java.lang.invoke.MethodHandle,int,java.lang.Object,java.lang.String,boolean,java.lang.invoke.LambdaForm$NamedFunction,java.lang.invoke.LambdaForm$NamedFunction)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.invoke.util.Wrapper: void <clinit>()>/new sun.invoke.util.Wrapper/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxis(int,int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>/new org.jfree.chart.title.LegendGraphic/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.misc.URLClassPath$JarLoader: sun.misc.Resource getResource(java.lang.String,boolean,java.util.Set)>/new sun.misc.InvalidJarIndexException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int,java.lang.Class)>/new java.lang.Object[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.time.SimpleTimePeriod::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/38	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.time.OffsetTime: java.time.OffsetTime from(java.time.temporal.TemporalAccessor)>/new java.time.DateTimeException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getT61String()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.util.locale.provider.LocaleResources: java.lang.Object[] getDecimalFormatSymbolsData()>/new java.lang.Object[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.System: void initializeSystemClass()>/new java.io.FileOutputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.util.SignatureFileVerifier: java.security.CodeSigner[] getSigners(sun.security.pkcs.SignerInfo[],sun.security.pkcs.PKCS7)>/new java.security.CodeSigner[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYAreaRenderer2: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<java.io.FileReader: void <init>(java.io.File)>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<org.jfree.chart.plot.PolarPlot: java.util.List refreshAngleTicks()>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.Signature: void <clinit>()>/new sun.security.jca.ServiceId/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYLineAndShapeRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: int width(java.lang.String)>/new java.util.IllegalFormatWidthException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYSplineRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>/new java.util.zip.ZipFile$ZipFileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.jar.Manifest: java.lang.String parseName(byte[],int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.time.DynamicTimeSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<class java.lang.System>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.cert.Certificate[] getSignerCertificates(java.security.CodeSource)>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.LinkedHashMap: java.util.HashMap$Node replacementNode(java.util.HashMap$Node,java.util.HashMap$Node)>/new java.util.LinkedHashMap$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.statistics.DefaultMultiValueCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.net.URI$Parser: void fail(java.lang.String)>/new java.net.URISyntaxException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.Short: short parseShort(java.lang.String,int)>/new java.lang.NumberFormatException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYStepRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.jca.Providers: void <clinit>()>/new java.lang.InheritableThreadLocal/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.nio.file.spi.FileSystemProvider: java.nio.file.FileSystem newFileSystem(java.nio.file.Path,java.util.Map)>/new java.lang.UnsupportedOperationException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.image.IndexColorModel: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name cloneWithIndex(int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name cloneWithIndex(int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.regex.Pattern$CharPropertyNames: void defClone(java.lang.String,java.util.regex.Pattern$CharPropertyNames$CloneableProperty)>/new java.util.regex.Pattern$CharPropertyNames$4/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.xy.DefaultWindDataset: void <init>(java.util.List,java.lang.Object[][][])>/new org.jfree.data.xy.WindDataItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.axis.NumberAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.Base64$Decoder: byte[] decode(byte[])>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.util.KeyUtil: void validateDHPublicKey(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>/new java.security.InvalidKeyException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<method type ()java.time.temporal.TemporalQuery>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<sun.misc.FormattedFloatingDecimal$Form: void <clinit>()>/new sun.misc.FormattedFloatingDecimal$Form/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.awt.DebugSettings: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.WeakHashMap: void <clinit>()>/new java.lang.Object/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: java.lang.invoke.LambdaForm getPreparedForm(java.lang.String)>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.Character$CharacterCache: void <clinit>()>/new java.lang.Character/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.Polygon/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/8	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<sun.awt.geom.Order1: sun.awt.geom.Curve getReversedCurve()>/new sun.awt.geom.Order1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: void executeQuery(java.sql.Connection,java.lang.String)>/new java.lang.Long/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.OutlierListCollection: boolean add(org.jfree.chart.renderer.Outlier)>/new org.jfree.chart.renderer.OutlierList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/8	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.text.CharacterIteratorFieldDelegate: java.text.AttributedCharacterIterator getIterator(java.lang.String)>/new java.text.AttributedString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.System: void initializeSystemClass()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.xy.YIntervalDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.VectorRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<sun.awt.geom.Order1: sun.awt.geom.Curve getSubCurve(double,double,int)>/new sun.awt.geom.Order1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void <init>(org.jfree.data.xy.XYDataset,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.chart.renderer.xy.XYItemRenderer)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack53
<<immutable-hcontext>>	<java.text.BreakIterator: java.text.BreakIterator getBreakInstance(java.util.Locale,int)>/new java.text.BreakIterator$BreakIteratorCache/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<class java.lang.String>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$12/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYSplineRenderer: void drawPrimaryLineAsPath(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)>/new org.jfree.chart.renderer.xy.XYSplineRenderer$ControlPoint/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.LegendItem getLegendItem(int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.StringCoding: byte[] encode(java.lang.String,char[],int,int)>/new java.lang.StringCoding$StringEncoder/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.awt.geom.Order2: sun.awt.geom.Curve getSubCurve(double,double,int)>/new sun.awt.geom.Order2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.awt.geom.Order3: sun.awt.geom.Curve getReversedCurve()>/new sun.awt.geom.Order3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.Stack: java.lang.Object peek()>/new java.util.EmptyStackException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.color.ICC_Profile$3: java.io.FileInputStream run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/13	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.Outlier::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: java.util.List getDatasetsMappedToDomainAxis(java.lang.Integer)>/@parameter0
<<immutable-hcontext>>	<java.util.jar.Manifest: java.lang.String parseName(byte[],int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.awt.geom.AreaOp: void resolveLinks(java.util.Vector,java.util.Vector,java.util.Vector)>/new sun.awt.geom.ChainEnd/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.general.DefaultPieDataset: void setValue(java.lang.Comparable,double)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/20	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.Long$LongCache: void <clinit>()>/new java.lang.Long/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/31	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<jdk.internal.org.objectweb.asm.Type: java.lang.String getInternalName()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.time.Year::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.io.ObjectInputStream$BlockDataInputStream: int readBlockHeader(boolean)>/new java.io.StreamCorruptedException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/23	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class java.lang.invoke.BoundMethodHandle$Species_L>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/6	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<com.sun.beans.finder.MethodFinder: java.lang.reflect.Method findInstanceMethod(java.lang.Class,java.lang.String,java.lang.Class[])>/new java.lang.NoSuchMethodException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm filterReturnForm(java.lang.invoke.LambdaForm$BasicType,boolean)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.security.AllPermission: java.security.PermissionCollection newPermissionCollection()>/new java.security.AllPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.axis.SymbolAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.awt.image.BufferedImage: void <init>(int,int,int)>/new java.awt.image.DirectColorModel/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.net.SocketPermission: java.security.PermissionCollection newPermissionCollection()>/new java.net.SocketPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$DomainEntry parseDomainEntry()>/new sun.security.provider.PolicyParser$KeyStoreEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.SpiderWebPlot: void <clinit>()>/new java.awt.Font/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/9	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.security.ProtectionDomain$WeakProtectionDomainKey: void <clinit>()>/new java.security.ProtectionDomain$Key/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.ClassLoader: java.security.ProtectionDomain preDefineClass(java.lang.String,java.security.ProtectionDomain)>/new java.lang.NoClassDefFoundError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/23	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.Long: java.lang.String toUnsignedString0(long,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.Invokers: java.lang.invoke.LambdaForm invokeHandleForm(java.lang.invoke.MethodType,boolean,int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.util.SecurityConstants: void <clinit>()>/new java.net.SocketPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	sun.font.TrueTypeFont::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: void drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)>/new java.lang.Double/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.Permission getKnownInstance(java.lang.Class,java.lang.String,java.lang.String)>/new java.util.PropertyPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	org.jfree.data.xy.CategoryTableXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.statistics.DefaultStatisticalCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.DynamicTimeSeriesCollection: void findDomainLimits()>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<java.math.BigInteger: void <clinit>()>/new java.math.BigInteger[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.awt.image.SinglePixelPackedSampleModel: java.awt.image.SampleModel createSubsetSampleModel(int[])>/new java.awt.image.RasterFormatException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYShapeRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<java.util.ResourceBundle$Control$CandidateListCache: java.util.List getDefaultList(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new java.util.LinkedList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.x509.CRLExtensions: void init(sun.security.util.DerInputStream)>/new sun.security.x509.Extension/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.axis.SegmentedTimeline$SegmentRange::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<java.util.jar.Manifest: java.lang.String parseName(byte[],int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedFieldLambdaForm(byte,boolean,int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.io.File: java.io.File getParentFile()>/new java.io.File/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/18	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/23	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.Byte$ByteCache: void <clinit>()>/new java.lang.Byte/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.axis.NumberAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.x509.CertificateExtensions: void init(sun.security.util.DerInputStream)>/new sun.security.x509.Extension/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[] retrieveDisplayNamesImpl(java.lang.String,java.util.Locale)>/new java.util.concurrent.ConcurrentHashMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/13	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList$Itr: void remove()>/$stack4
<<immutable-hcontext>>	<java.lang.ref.Reference: void <clinit>()>/new java.lang.ref.Reference$ReferenceHandler/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.DefaultXYItemRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.font.TrueTypeFont: java.lang.String makeString(byte[],int,short)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$DomainEntry parseDomainEntry()>/new sun.security.provider.PolicyParser$DomainEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: void drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new java.awt.Point/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.WaterfallBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/10	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.misc.JarIndex: void addToList(java.lang.String,java.lang.String,java.util.HashMap)>/new java.util.LinkedList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.awt.geom.Order2: sun.awt.geom.Curve getReversedCurve()>/new sun.awt.geom.Order2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: java.util.List createStackedValueList(org.jfree.data.category.CategoryDataset,java.lang.Comparable,int[],double,boolean)>/new java.lang.Object[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYAreaRenderer2: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPermission[] getPermissions()>/new javax.crypto.CryptoPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.Polygon/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<javax.crypto.CryptoPermissions: void add(java.security.Permission)>/new java.lang.SecurityException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.DeviationRenderer: void drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new double[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/9	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/18	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.locale.provider.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$18/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.ClassValue: java.lang.ClassValue$Entry makeEntry(java.lang.ClassValue$Version,java.lang.Object)>/new java.lang.ClassValue$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getRangeBounds(java.util.List,org.jfree.data.Range,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<java.awt.Toolkit$1: java.lang.String run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/22	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.geom.Rectangle2D$Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(byte,java.lang.Class,java.lang.invoke.MemberName)>/new java.lang.invoke.DirectMethodHandle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYAreaRenderer2::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<jdk.internal.org.objectweb.asm.Type: java.lang.String getInternalName()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.x509.CertificateExtensions: void parseExtension(sun.security.x509.Extension)>/new sun.security.x509.UnparseableExtension/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/11	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: void executeQuery(java.sql.Connection,java.lang.String)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.text.normalizer.VersionInfo: sun.text.normalizer.VersionInfo getInstance(int,int,int,int)>/new sun.text.normalizer.VersionInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.general.DefaultValueDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.MemberName: void <init>(java.lang.reflect.Method,boolean)>/new java.lang.AbstractMethodError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>/new java.security.NoSuchProviderException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: void read(java.io.Reader)>/new javax.crypto.CryptoPolicyParser$ParsingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/0	<<immutable-context>>	<java.util.Arrays$ArrayList: boolean contains(java.lang.Object)>/l1#_0
<<immutable-hcontext>>	<sun.font.Decoration: void <clinit>()>/new sun.font.Decoration/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.title.TextTitle: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>/new org.jfree.chart.entity.TitleEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.util.DerInputStream: sun.security.util.DerValue[] readVector(int)>/new sun.security.util.DerValue/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYShapeRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.regex.Pattern: java.util.regex.Pattern$CharProperty family(boolean,boolean)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.Character$UnicodeBlock: void <clinit>()>/new java.lang.Character$UnicodeBlock/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.text.TextBlock: void addLine(java.lang.String,java.awt.Font,java.awt.Paint)>/new org.jfree.chart.text.TextLine/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis: java.util.List refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.CategoryTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.xy.CategoryTableXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.security.UnresolvedPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.x509.CertificateExtensions: void encode(java.io.OutputStream,boolean)>/new java.security.cert.CertificateException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.net.InetAddress: sun.net.spi.nameservice.NameService createNSProvider(java.lang.String)>/new java.net.InetAddress$2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/13	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.font.XMap: sun.font.XMap getXMapperInternal(java.lang.String)>/new sun.font.XMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.axis.PeriodAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<<string-constant>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.io.PrintWriter: java.nio.charset.Charset toCharset(java.lang.String)>/new java.io.UnsupportedEncodingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.TreeSet: void <clinit>()>/new java.lang.Object/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.WaferMapRenderer: org.jfree.chart.LegendItemCollection getLegendCollection()>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.misc.ExtensionDependency: java.io.File[] getExtFiles(java.io.File[])>/new java.io.File/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.category.AreaRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.util.SignatureFileVerifier: java.security.CodeSigner[] getSigners(sun.security.pkcs.SignerInfo[],sun.security.pkcs.PKCS7)>/new java.security.CodeSigner/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYAreaRenderer2::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList$Itr: void <init>(java.util.ArrayList)>/l1#_0
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$11/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.VectorRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/9	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.regex.Pattern$CharPropertyNames: void defClone(java.lang.String,java.util.regex.Pattern$CharPropertyNames$CloneableProperty)>/new java.util.regex.Pattern$CharPropertyNames$4/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList: void grow(int)>/@this
<<immutable-hcontext>>	<java.net.InetAddress: sun.net.spi.nameservice.NameService createNSProvider(java.lang.String)>/new java.net.InetAddress$2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxes(int,java.util.List)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.io.File$PathStatus: void <clinit>()>/new java.io.File$PathStatus/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedFieldLambdaForm(byte,boolean,int)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: void run()>/new java.lang.Thread/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.LookupPaintScale$PaintItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: void executeQuery(java.sql.Connection,java.lang.String)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.gantt.TaskSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<class java.lang.Class>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.misc.URLClassPath$JarLoader: java.net.URL[] parseClassPath(java.net.URL,java.lang.String)>/new java.net.URL/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.MemberName: void <init>(java.lang.reflect.Method,boolean)>/new java.lang.AbstractMethodError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getInstance(java.lang.String)>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<org.jfree.chart.servlet.ServletUtilities: void sendTempFile(java.io.File,javax.servlet.http.HttpServletResponse,java.lang.String)>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.text.AttributedString$AttributeMap: java.util.Set entrySet()>/new java.text.AttributeEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.Invokers: java.lang.invoke.LambdaForm invokeHandleForm(java.lang.invoke.MethodType,boolean,int)>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.DataUtilities: java.lang.Number[] createNumberArray(double[])>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList: void ensureCapacityInternal(int)>/@this
<<immutable-hcontext>>	<java.awt.Font: sun.font.FontLineMetrics defaultLineMetrics(java.awt.font.FontRenderContext)>/new sun.font.FontLineMetrics/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.StandardGlyphVector: java.awt.Shape getGlyphVisualBounds(int)>/new java.awt.Shape[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.invoke.util.Wrapper: void <clinit>()>/new sun.invoke.util.Wrapper/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDotRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.xy.TableXYDataset,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<class sun.reflect.Reflection>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.Polygon/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: void <init>(sun.java2d.cmm.ProfileDeferralInfo)>/new java.awt.color.ICC_Profile$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: void drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)>/new java.lang.Double/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<sun.security.x509.X509CRLImpl: void parse(sun.security.util.DerValue)>/new sun.security.x509.X509CRLEntryImpl/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/13	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.Character$UnicodeScript: void <clinit>()>/new java.lang.Character$UnicodeScript/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.Signature$Delegate: java.security.SignatureSpi newInstance(java.security.Provider$Service)>/new java.security.NoSuchAlgorithmException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: void drawStackVertical(java.util.List,java.lang.Comparable,java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset)>/new java.lang.Object[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: void executeQuery(java.sql.Connection,java.lang.String)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.SimpleMethodHandle: java.lang.invoke.BoundMethodHandle make(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.SimpleMethodHandle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.AbstractCollection: void <init>()>/@this
<<immutable-hcontext>>	<java.lang.invoke.MethodType: java.lang.invoke.MethodType makeImpl(java.lang.Class,java.lang.Class[],boolean)>/new java.lang.invoke.MethodType/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.nio.cs.US_ASCII: java.nio.charset.CharsetDecoder newDecoder()>/new sun.nio.cs.US_ASCII$Decoder/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.net.SocksSocketImpl: void connect(java.net.SocketAddress,int)>/new java.net.UnknownHostException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/24	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.geom.Ellipse2D$Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Formatter: java.util.Formatter$FormatString[] parse(java.lang.String)>/new java.util.Formatter$FormatSpecifier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<java.lang.StringCoding: char[] decode(java.lang.String,byte[],int,int)>/new java.lang.StringCoding$StringDecoder/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.JFreeChartInfo: void <init>()>/new org.jfree.chart.ui.Contributor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.x509.X509CRLImpl: void parse(sun.security.util.DerValue)>/new sun.security.x509.X509CRLEntryImpl/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/30	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.axis.PeriodAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/@parameter0
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/25	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.PolarPlot: java.util.List refreshAngleTicks()>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.security.UnresolvedPermissionCollection: void add(java.security.Permission)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis3D: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.zip.ZipInputStream: int read(byte[],int,int)>/new java.util.zip.ZipException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedRangeCategoryPlot: void <init>()>/new org.jfree.chart.axis.NumberAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.Package$1: java.lang.Package run()>/new java.lang.Package/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>/new org.jfree.chart.block.BlockContainer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.util.locale.LocaleUtils: java.lang.String toLowerString(java.lang.String)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/26	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.xy.XYSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.String: java.lang.String substring(int,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$ServiceKey/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.jar.Attributes: void read(java.util.jar.Manifest$FastInputStream,byte[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.awt.image.ColorModel: byte[] getLinearGray16ToOtherGray8LUT(java.awt.color.ICC_ColorSpace)>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	java.lang.String::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/new java.util.TreeMap$Entry/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.BoxAndWhiskerRenderer: void drawVerticalItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)>/new org.jfree.chart.renderer.Outlier/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYStepRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYAreaRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYLine3DRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.nio.file.AccessMode: void <clinit>()>/new java.nio.file.AccessMode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/0	<<immutable-context>>	<java.util.LinkedList: int indexOf(java.lang.Object)>/l1#_0
<<immutable-hcontext>>	<sun.font.FontResolver: void <init>()>/new java.awt.Font/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.WaterfallBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	org.jfree.data.jdbc.JDBCXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.category.CategoryDataset,org.jfree.data.KeyToGroupMap)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<java.security.AccessController: java.security.AccessControlContext createWrapper(java.security.DomainCombiner,java.lang.Class,java.security.AccessControlContext,java.security.AccessControlContext,java.security.Permission[])>/new java.security.ProtectionDomain/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.xy.XYCoordinate::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.io.BufferedReader: java.lang.String readLine(boolean)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<javax.swing.table.DefaultTableColumnModel: void addColumn(javax.swing.table.TableColumn)>/new java.lang.IllegalArgumentException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.UnresolvedPermission: java.security.PermissionCollection newPermissionCollection()>/new java.security.UnresolvedPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.TimeSeriesDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.ClassLoader: java.security.ProtectionDomain preDefineClass(java.lang.String,java.security.ProtectionDomain)>/new java.lang.NoClassDefFoundError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/25	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.StringBuffer: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: void <clinit>()>/new java.awt.BasicStroke/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.category.MinMaxCategoryRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.util.logging.PlatformLogger: sun.util.logging.PlatformLogger getLogger(java.lang.String)>/new sun.util.logging.PlatformLogger/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.category.DefaultIntervalCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/36	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.axis.AxisState drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.entity.CategoryLabelEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.axis.CyclicNumberAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/axis#_0
<<immutable-hcontext>>	<org.jfree.chart.axis.SymbolAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	org.jfree.data.jdbc.JDBCCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<javax.crypto.CryptoPermissions: void add(java.security.Permission)>/new java.lang.SecurityException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.category.CategoryStepRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.gantt.TaskSeriesCollection: java.lang.Number getStartValue(java.lang.Comparable,java.lang.Comparable)>/new java.lang.Long/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.provider.certpath.PKIX$ValidatorParams: void <init>(java.security.cert.CertPath,java.security.cert.PKIXParameters)>/new java.security.InvalidAlgorithmParameterException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.axis.SegmentedTimeline$Segment::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedLambdaForm(java.lang.invoke.MethodType,int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.text.CharacterIteratorFieldDelegate: java.text.AttributedCharacterIterator getIterator(java.lang.String)>/new java.text.AttributedString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.Polygon/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.DynamicTimeSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<sun.security.util.DisabledAlgorithmConstraints$Constraints: void <init>(java.lang.String[])>/new sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.HashMap: java.util.HashMap$TreeNode newTreeNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)>/new java.util.HashMap$TreeNode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.ClassLoader: java.lang.Class findClass(java.lang.String)>/new java.lang.ClassNotFoundException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.StackedXYAreaRenderer2::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/0	<<immutable-context>>	<java.util.LinkedList: boolean contains(java.lang.Object)>/@parameter0
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/15	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.CyclicNumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.CyclicNumberAxis$CycleBoundTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYSplineRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.regex.Pattern$CharPropertyNames: void defCtype(java.lang.String,int)>/new java.util.regex.Pattern$CharPropertyNames$3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<class java.lang.Short>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<javax.swing.JMenuBar: void setHelpMenu(javax.swing.JMenu)>/new java.lang.Error/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.regex.Pattern$CharPropertyNames: void <clinit>()>/new java.util.regex.Pattern$CharPropertyNames$5/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: void executeQuery(java.sql.Connection,java.lang.String)>/new java.lang.Long/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<class java.lang.invoke.MethodHandleImpl$ArrayAccessor>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.math.BigInteger: java.math.BigInteger valueOf(long)>/new java.math.BigInteger/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.OutlierListCollection: boolean add(org.jfree.chart.renderer.Outlier)>/new org.jfree.chart.renderer.OutlierList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.net.SocksSocketImpl: void connect(java.net.SocketAddress,int)>/new java.net.UnknownHostException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.DynamicTimeSeriesCollection: void findDomainLimits()>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<java.math.BigInteger: java.math.BigInteger valueOf(long)>/new java.math.BigInteger/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.StackedXYAreaRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.jar.Attributes: java.lang.String putValue(java.lang.String,java.lang.String)>/new java.util.jar.Attributes$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.geom.Rectangle2D$Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$GrantEntry parseGrantEntry()>/new sun.security.provider.PolicyParser$PrincipalEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createStandardTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$7/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.TrueTypeFont: void <init>(java.lang.String,java.lang.Object,int,boolean,boolean)>/new sun.font.TrueTypeFont$TTDisposerRecord/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.util.DisabledAlgorithmConstraints$Constraints: void <init>(java.lang.String[])>/new java.util.HashSet/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<class java.lang.Short>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.geom.Ellipse2D$Double/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: java.util.List getDatasetsMappedToRangeAxis(java.lang.Integer)>/@parameter0
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void printCharacter(java.lang.Object)>/new java.util.IllegalFormatCodePointException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.xy.MatrixSeries::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.VectorRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<java.util.regex.Pattern$CharPropertyNames: void defCtype(java.lang.String,int)>/new java.util.regex.Pattern$CharPropertyNames$3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.color.ColorSpace: java.awt.color.ColorSpace getInstance(int)>/new java.awt.color.ICC_ColorSpace/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormBuffer: java.lang.invoke.LambdaFormBuffer replaceFunctions(java.lang.invoke.LambdaForm$NamedFunction[],java.lang.invoke.LambdaForm$NamedFunction[],java.lang.Object[])>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.nio.cs.ThreadLocalCoders$Cache: void <init>(int)>/new java.lang.ThreadLocal/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/12	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.axis.SegmentedTimeline$Segment::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceNames(java.lang.invoke.LambdaForm$Name[],java.lang.invoke.LambdaForm$Name[],int,int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator(java.text.AttributedCharacterIterator$Attribute[],int,int)>/new java.text.AttributedString$AttributedStringIterator/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.ConditionalSpecialCasing: void <clinit>()>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: java.util.List createStackedValueList(org.jfree.data.category.CategoryDataset,java.lang.Comparable,int[],double,boolean)>/new java.lang.Object[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$5/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.provider.PolicyFile$4: java.lang.Void run()>/new java.util.PropertyPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.StrikeCache: java.lang.ref.Reference getStrikeRef(sun.font.FontStrike,boolean)>/new sun.font.StrikeCache$WeakDisposerRef/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyFile$SelfPermission: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.Certificate[])>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: void addGrantEntry(sun.security.provider.PolicyParser$GrantEntry,java.security.KeyStore,sun.security.provider.PolicyFile$PolicyInfo)>/new sun.security.provider.PolicyFile$SelfPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.text.DateFormat$Field: void <clinit>()>/new java.text.DateFormat$Field/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.category.CategoryDataset,org.jfree.data.KeyToGroupMap)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<java.lang.ProcessEnvironment$Value: java.lang.ProcessEnvironment$Value valueOf(byte[])>/new java.lang.ProcessEnvironment$Value/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/20	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.text.DateFormat$Field: void <clinit>()>/new java.text.DateFormat$Field/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedRangeCategoryPlot: void <init>()>/new org.jfree.chart.axis.NumberAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/axis#_0
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$PermissionEntry parsePermissionEntry()>/new sun.security.provider.PolicyParser$PermissionEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>/new java.util.zip.ZipFile$ZipFileInflaterInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/12	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.ssl.InputRecord: void read(java.io.InputStream,java.io.OutputStream)>/new java.io.EOFException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: void drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$GrantEntry parseGrantEntry()>/new sun.security.provider.PolicyParser$GrantEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYShapeRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.LineAndShapeRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/21	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<class java.lang.Integer>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYAreaRenderer2::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<javax.swing.JMenuBar: void setHelpMenu(javax.swing.JMenu)>/new java.lang.Error/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYShapeRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<class java.lang.invoke.LambdaForm>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1: java.lang.Thread run()>/new java.lang.Thread/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.time.Millisecond::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.VectorRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.category.CategoryDataset,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<java.lang.Double: java.lang.Double valueOf(double)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.FileFontStrike: void <init>(sun.font.FileFont,sun.font.FontStrikeDesc)>/new sun.font.FontStrikeDisposer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.font.StandardGlyphVector: java.awt.Shape getGlyphVisualBounds(int)>/new java.awt.Shape[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.CategoryStepRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.io.FilePermission: java.security.PermissionCollection newPermissionCollection()>/new java.io.FilePermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setExtensions(java.util.List,java.lang.String)>/new sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyParser$DomainEntry: void add(sun.security.provider.PolicyParser$KeyStoreEntry)>/new sun.security.provider.PolicyParser$ParsingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.net.RegisteredDomain: void <clinit>()>/new java.util.HashSet/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.misc.ExtensionDependency$1: java.util.jar.Manifest run()>/new java.util.jar.JarFile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.time.Month::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.Polygon/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.statistics.SimpleHistogramBin::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<org.jfree.chart.axis.ValueAxis: org.jfree.chart.axis.AxisState drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.WaferMapRenderer: org.jfree.chart.LegendItemCollection getLegendCollection()>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.PolarPlot: java.util.List refreshAngleTicks()>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<class java.lang.Object[]>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.Properties: java.lang.String loadConvert(char[],int,int,char[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: java.lang.Comparable getSectionKey(int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(java.util.List,boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm makeArgumentCombinationForm(int,java.lang.invoke.MethodType,boolean,boolean)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.time.OffsetTime: java.time.OffsetTime from(java.time.temporal.TemporalAccessor)>/new java.time.DateTimeException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getInstance(byte[])>/new java.awt.color.ICC_Profile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$10/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.xy.MatrixSeries::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList$Itr: java.lang.Object next()>/$stack3
<<immutable-hcontext>>	<java.awt.Font: sun.font.FontLineMetrics defaultLineMetrics(java.awt.font.FontRenderContext)>/new sun.font.FontLineMetrics/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.Polygon/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.axis.SegmentedTimeline$Segment::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.ChartRenderingInfo: void <init>(org.jfree.chart.entity.EntityCollection)>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.Locale: java.lang.String getISO3Language()>/new java.util.MissingResourceException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.axis.CategoryAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.StandardGlyphVector$GlyphStrike: sun.font.StandardGlyphVector$GlyphStrike create(sun.font.StandardGlyphVector,java.awt.geom.AffineTransform,java.awt.geom.AffineTransform)>/new sun.font.StandardGlyphVector$GlyphStrike/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<java.util.ResourceBundle$Control$CandidateListCache: java.util.List createObject(sun.util.locale.BaseLocale)>/new java.util.LinkedList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.CyclicXYItemRenderer$OverwriteDataSet::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: org.jfree.chart.LegendItemCollection getLegendItems()>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.axis.SubCategoryAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getRangeBounds(java.util.List,org.jfree.data.Range,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<class java.lang.Character>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<java.lang.Double: java.lang.Double valueOf(java.lang.String)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.misc.FloatingDecimal$BinaryToASCIIBuffer: java.lang.String toJavaFormatString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.VectorRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.category.GanttRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.geom.Rectangle2D$Double/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot3D: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.entity.PieSectionEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.MethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.DirectMethodHandle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/13	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.WaferMapRenderer: void makeValueIndex(java.lang.Number,java.lang.Number,java.util.Set)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.xy.OHLCDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<java.lang.invoke.MemberName: java.lang.ReflectiveOperationException makeAccessException()>/new java.lang.NoSuchFieldException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.provider.PolicyFile$4: java.lang.Void run()>/new sun.security.provider.PolicyFile$PolicyEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>/new java.util.regex.Pattern$CharPropertyNames$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.NativeFont: sun.font.FontStrike createStrike(sun.font.FontStrikeDesc)>/new sun.font.DelegateStrike/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.text.Normalizer$Form: void <clinit>()>/new java.text.Normalizer$Form/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.LogarithmicAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.awt.geom.Order2: sun.awt.geom.Curve getSubCurve(double,double,int)>/new sun.awt.geom.Order2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.font.LayoutPathImpl$EndType: void <clinit>()>/new sun.font.LayoutPathImpl$EndType/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray()>/new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/12	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.title.LegendTitle: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>/new org.jfree.chart.entity.TitleEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.awt.Toolkit$1: java.lang.String run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	org.jfree.data.xy.VectorSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.reflect.Reflection: void <clinit>()>/new java.lang.String[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.java2d.cmm.CMSManager: sun.java2d.cmm.PCMM getModule()>/new java.awt.color.CMMException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<javax.crypto.ExemptionMechanism: javax.crypto.ExemptionMechanism getInstance(java.lang.String)>/new javax.crypto.ExemptionMechanism/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.Boolean: void <clinit>()>/new java.lang.Boolean/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.Formatter: void ensureOpen()>/new java.util.FormatterClosedException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.misc.MetaIndex: void registerDirectory(java.io.File)>/new sun.misc.MetaIndex/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.text.DateFormat$Field: void <clinit>()>/new java.text.DateFormat$Field/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	org.jfree.data.time.Year::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/8	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.String: java.lang.String valueOf(char)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultMultiValueCategoryDataset: void <init>()>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<sun.font.Decoration: void <clinit>()>/new sun.font.Decoration/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>/new java.util.regex.Pattern$CharPropertyNames$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeIntrinsic(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandleImpl$Intrinsic)>/new java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.x509.CertificateExtensions: void init(sun.security.util.DerInputStream)>/new sun.security.x509.Extension/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.CandlestickRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class java.lang.ClassLoader>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.awt.geom.Order2: sun.awt.geom.Curve getReversedCurve()>/new sun.awt.geom.Order2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.xy.DefaultXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.time.Day::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.locale.InternalLocaleBuilder: void setUnicodeLocaleExtension(java.lang.String)>/new sun.util.locale.InternalLocaleBuilder$CaseInsensitiveString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/10	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$DomainEntry parseDomainEntry()>/new sun.security.provider.PolicyParser$KeyStoreEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.plot.PieLabelRecord::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<class java.lang.invoke.MethodHandleImpl$ArrayAccessor>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MemberName resolveOrFail(byte,java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.Double: java.lang.Double valueOf(double)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.axis.CategoryAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.ClassLoader: boolean loadLibrary0(java.lang.Class,java.io.File)>/new java.lang.ClassLoader$NativeLibrary/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: java.util.List getDatasetsMappedToDomainAxis(java.lang.Integer)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack61
<<immutable-hcontext>>	<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray(java.lang.Object[])>/new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.ResourceBundle$Control$CandidateListCache: java.util.List createObject(sun.util.locale.BaseLocale)>/new java.util.LinkedList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.WaferMapRenderer: void makePositionIndex(java.util.Set)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.net.SocksSocketImpl: void connect(java.net.SocketAddress,int)>/new java.net.UnknownHostException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.awt.image.ColorModel: byte[] getLinearGray16ToOtherGray8LUT(java.awt.color.ICC_ColorSpace)>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/17	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.misc.Unsafe: void <clinit>()>/new sun.misc.Unsafe/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.FontUtilities$1: java.lang.Object run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.ClassLoader: void <clinit>()>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxes(int,java.util.List)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.ProcessEnvironment$Value: java.lang.ProcessEnvironment$Value valueOf(byte[])>/new java.lang.ProcessEnvironment$Value/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: void drawRightLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)>/new org.jfree.chart.plot.PieLabelRecord/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/7	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.font.Decoration: sun.font.Decoration getDecoration(sun.font.AttributeValues)>/new sun.font.Decoration$DecorationImpl/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.nio.charset.CharsetEncoder: java.nio.charset.CoderResult encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)>/new java.nio.charset.CoderMalfunctionError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.ThreadGroup: void destroy()>/new java.lang.IllegalThreadStateException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/16	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	java.lang.String::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.OutlierListCollection: boolean add(org.jfree.chart.renderer.Outlier)>/new org.jfree.chart.renderer.OutlierList/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.java2d.HeadlessGraphicsEnvironment: java.awt.GraphicsDevice[] getScreenDevices()>/new java.awt.HeadlessException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.util.ObjectIdentifier: sun.security.util.ObjectIdentifier newInternal(int[])>/new sun.security.util.ObjectIdentifier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getT61String()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/6	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<method type ()java.util.Comparator>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.geom.Rectangle2D$Double/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar getLocalGregorianCalendar(java.lang.String)>/new sun.util.calendar.Era/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYAreaRenderer2::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Locale: java.lang.String getISO3Language()>/new java.util.MissingResourceException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.text.DecimalFormat: java.text.FieldPosition[] expandAffix(java.lang.String)>/new java.text.FieldPosition/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/15	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/13	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.io.FileReader: void <init>(java.io.File)>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.awt.font.TransformAttribute: void <clinit>()>/new java.awt.font.TransformAttribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Properties: java.lang.String loadConvert(char[],int,int,char[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.security.SecureClassLoader: java.security.ProtectionDomain getProtectionDomain(java.security.CodeSource)>/new java.security.ProtectionDomain/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection)>/new java.security.ProtectionDomain$Key/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList: java.util.Iterator iterator()>/@this
<<immutable-hcontext>>	<java.lang.ClassValue$Version: void <init>(java.lang.ClassValue)>/new java.lang.ClassValue$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/6	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: void run()>/new java.lang.Thread/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.nio.file.Files: java.nio.file.Path createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>/new java.nio.file.FileSystemException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$PermissionEntry parsePermissionEntry()>/new sun.security.provider.PolicyParser$PermissionEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer: void drawVerticalItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new org.jfree.chart.renderer.Outlier/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	org.jfree.chart.renderer.category.GanttRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedRangeXYPlot: void <init>()>/new org.jfree.chart.axis.NumberAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.io.ExpiringCache: void put(java.lang.String,java.lang.String)>/new java.io.ExpiringCache$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/9	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYShapeRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: void addGrantEntry(sun.security.provider.PolicyParser$GrantEntry,java.security.KeyStore,sun.security.provider.PolicyFile$PolicyInfo)>/new sun.security.provider.PolicyFile$PolicyEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.axis.LogarithmicAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.java2d.Disposer: java.lang.Void lambda$static$0()>/new java.lang.Thread/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.util.locale.provider.JRELocaleConstants: void <clinit>()>/new java.util.Locale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.Character$UnicodeScript: void <clinit>()>/new java.lang.Character$UnicodeScript/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.security.AccessController: java.security.AccessControlContext createWrapper(java.security.DomainCombiner,java.lang.Class,java.security.AccessControlContext,java.security.AccessControlContext,java.security.Permission[])>/new java.security.ProtectionDomain/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.DeviationRenderer: void drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new double[]/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.xy.DefaultXYZDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$18/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.CyclicNumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.CyclicNumberAxis$CycleBoundTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.MemberName: void <init>(java.lang.reflect.Method,boolean)>/new java.lang.LinkageError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYLineAndShapeRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.stream.AbstractTask: void setRawResult(java.lang.Object)>/new java.lang.IllegalStateException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.time.Hour::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/12	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.xy.XYBarDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.time.TimeTableXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.SpiderWebPlot: void <clinit>()>/new java.awt.Font/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.title.TextTitle: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>/new org.jfree.chart.entity.TitleEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$13/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/18	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/19	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.ClassValue: void <init>()>/new java.lang.ClassValue$Version/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.util.locale.LocaleUtils: java.lang.String toLowerString(java.lang.String)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.stream.Node: java.util.stream.Node getChild(int)>/new java.lang.IndexOutOfBoundsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.CyclicXYItemRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<java.awt.Toolkit$1: java.lang.String run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.category.MinMaxCategoryRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<class java.lang.Integer>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: void drawStackVertical(java.util.List,java.lang.Comparable,java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset)>/new java.lang.Object[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.misc.MetaIndex: void registerDirectory(java.io.File)>/new java.io.File/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.misc.URLClassPath$3: sun.misc.URLClassPath$Loader run()>/new sun.misc.URLClassPath$Loader/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.Byte$ByteCache: void <clinit>()>/new java.lang.Byte/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.axis.DateTickUnit::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToRangeAxis(int,int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.ClassLoader: void <clinit>()>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.String: java.lang.String valueOf(char)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/13	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.ChartUtilities: void saveChartAsPNG(java.io.File,org.jfree.chart.JFreeChart,int,int,org.jfree.chart.ChartRenderingInfo)>/new java.io.FileOutputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.AxisLocation: void <clinit>()>/new org.jfree.chart.axis.AxisLocation/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.ClusteredXYBarRenderer: org.jfree.data.Range findDomainBoundsWithOffset(org.jfree.data.xy.IntervalXYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<sun.util.locale.LocaleUtils: java.lang.String toUpperString(java.lang.String)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<class java.lang.String>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYDifferenceRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<javax.crypto.CryptoPermission: java.security.PermissionCollection newPermissionCollection()>/new javax.crypto.CryptoPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.ClassLoader: boolean loadLibrary0(java.lang.Class,java.io.File)>/new java.lang.ClassLoader$NativeLibrary/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$15/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>/new org.jfree.chart.block.LabelBlock/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>/new java.lang.String[][]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.xy.XYIntervalDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/16	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.awt.geom.CurveLink: sun.awt.geom.Curve getMoveto()>/new sun.awt.geom.Order0/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.security.Permissions: java.security.PermissionCollection getUnresolvedPermissions(java.security.Permission)>/new java.security.PermissionsHash/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.time.Millisecond::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.geom.Ellipse2D$Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm$BasicType: void <clinit>()>/new java.lang.invoke.LambdaForm$BasicType/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.statistics.SimpleHistogramDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.ClassValue: void <init>()>/new java.lang.ClassValue$Version/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/1	<<immutable-context>>	<java.lang.Number: void <init>()>/@this
<<immutable-hcontext>>	org.jfree.chart.axis.CategoryAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.CyclicNumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.CyclicNumberAxis$CycleBoundTick/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(java.util.List,boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/19	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.category.BarRenderer3D::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.text.AttributedCharacterIterator$Attribute: void <clinit>()>/new java.text.AttributedCharacterIterator$Attribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/20	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(java.util.List,boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<class java.lang.Short>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/16	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.ResourceBundle$Control$CandidateListCache: java.util.List createObject(sun.util.locale.BaseLocale)>/new java.util.LinkedList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.misc.URLClassPath$JarLoader: java.util.jar.JarFile getJarFile(java.net.URL)>/new java.util.jar.JarFile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.ClusteredXYBarRenderer: org.jfree.data.Range findDomainBoundsWithOffset(org.jfree.data.xy.IntervalXYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$ServiceKey/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.Boolean: void <clinit>()>/new java.lang.Boolean/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getRangeBounds(java.util.List,org.jfree.data.Range,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/22	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.xy.DefaultWindDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.geom.Rectangle2D$Double/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/12	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection)>/new java.security.ProtectionDomain$Key/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.MultiplePiePlot: org.jfree.chart.LegendItemCollection getLegendItems()>/new org.jfree.chart.LegendItem/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.category.StatisticalBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.Polygon/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)>/new java.security.Permissions/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/26	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm$NamedFunction: void <init>(java.lang.reflect.Method)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator(java.text.AttributedCharacterIterator$Attribute[],int,int)>/new java.text.AttributedString$AttributedStringIterator/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.gantt.XYTaskDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.xy.TableXYDataset,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/12	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.Permission getKnownInstance(java.lang.Class,java.lang.String,java.lang.String)>/new java.net.NetPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>/new java.awt.geom.NoninvertibleTransformException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: void expandSelf(sun.security.provider.PolicyFile$SelfPermission,java.util.List,java.security.Principal[],java.security.Permissions)>/new java.security.UnresolvedPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: void addPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[],sun.security.provider.PolicyFile$PolicyEntry)>/new sun.security.provider.PolicyParser$PrincipalEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>/new java.nio.charset.UnsupportedCharsetException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.Integer: java.lang.Integer valueOf(int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getBMPString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void print(java.lang.StringBuilder,double,java.util.Locale,java.util.Formatter$Flags,char,int,boolean)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.util.locale.BaseLocale: sun.util.locale.BaseLocale createInstance(java.lang.String,java.lang.String)>/new sun.util.locale.BaseLocale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/13	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.LinkedHashMap: java.util.HashMap$TreeNode replacementTreeNode(java.util.HashMap$Node,java.util.HashMap$Node)>/new java.util.HashMap$TreeNode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/7	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.Byte$ByteCache: void <clinit>()>/new java.lang.Byte/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<java.security.ProtectionDomain$WeakProtectionDomainKey: void <clinit>()>/new java.security.ProtectionDomain$Key/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYDotRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLanguage(java.lang.String)>/new sun.util.locale.LocaleSyntaxException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class java.lang.invoke.LambdaForm>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.LambdaForm makeReinvokerForm(java.lang.invoke.MethodHandle,int,java.lang.Object,java.lang.String,boolean,java.lang.invoke.LambdaForm$NamedFunction,java.lang.invoke.LambdaForm$NamedFunction)>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.misc.URLClassPath$3: sun.misc.URLClassPath$Loader run()>/new sun.misc.URLClassPath$JarLoader/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: void drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)>/new java.lang.Double/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.util.locale.BaseLocale: sun.util.locale.BaseLocale createInstance(java.lang.String,java.lang.String)>/new sun.util.locale.BaseLocale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.zip.ZipFile$ZipEntryIterator: java.util.zip.ZipEntry next()>/new java.util.zip.ZipError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: void drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)>/new java.lang.Double/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.text.BreakIterator: java.text.BreakIterator getBreakInstance(java.util.Locale,int)>/new java.text.BreakIterator$BreakIteratorCache/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<org.jfree.chart.title.LegendTitle: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>/new org.jfree.chart.entity.TitleEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/9	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.awt.geom.Curve: void insertMove(java.util.Vector,double,double)>/new sun.awt.geom.Order0/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/19	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.security.UnresolvedPermissionCollection: void add(java.security.Permission)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/26	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class java.lang.System>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedDomainCategoryPlot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	org.jfree.data.xy.CategoryTableXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.font.GlyphLayout$SDCache: sun.font.GlyphLayout$SDCache get(java.awt.Font,java.awt.font.FontRenderContext)>/new java.util.concurrent.ConcurrentHashMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.TimeSeries::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.title.LegendTitle: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>/new org.jfree.chart.entity.TitleEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$Service/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.security.UnresolvedPermission: java.security.PermissionCollection newPermissionCollection()>/new java.security.UnresolvedPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.security.Permissions: java.security.PermissionCollection getPermissionCollection(java.security.Permission,boolean)>/new java.security.PermissionsHash/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.util.calendar.ZoneInfoFile: java.lang.String toCustomID(int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/14	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/23	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.SymbolAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray()>/new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.CandlestickRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.pkcs.PKCS9Attributes: byte[] decode(sun.security.util.DerInputStream)>/new sun.security.pkcs.PKCS9Attribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet: java.lang.Object[] toArray()>/new java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	org.jfree.data.time.TimePeriodValuesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry: java.lang.Object setValue(java.lang.Object)>/new java.lang.ClassCastException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: char conversion(java.lang.String)>/new java.util.UnknownFormatConversionException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class java.lang.invoke.MethodHandle>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.String: java.lang.String concat(java.lang.String)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.font.TrueTypeFont$1: java.lang.Object run()>/new java.io.RandomAccessFile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>/new java.awt.geom.NoninvertibleTransformException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	org.jfree.chart.axis.PeriodAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/axis#_0
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.nio.CharBuffer: java.nio.CharBuffer get(char[],int,int)>/new java.nio.BufferUnderflowException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.font.SunLayoutEngine: sun.font.GlyphLayout$LayoutEngine getEngine(sun.font.GlyphLayout$LayoutEngineKey)>/new java.util.concurrent.ConcurrentHashMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: char conversion(java.lang.String)>/new java.util.UnknownFormatConversionException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry: java.lang.Object setValue(java.lang.Object)>/new java.lang.ClassCastException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$ServiceKey/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.util.locale.provider.LocaleServiceProviderPool: java.util.Locale getLookupLocale(java.util.Locale)>/new java.util.Locale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.EnumMap$ValueIterator: java.lang.Object next()>/new java.util.NoSuchElementException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.java2d.Disposer: void addObjectRecord(java.lang.Object,sun.java2d.DisposerRecord)>/new java.lang.ref.WeakReference/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormBuffer: java.lang.invoke.LambdaForm lambdaForm()>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList: boolean addAll(java.util.Collection)>/l0#_0
<<immutable-hcontext>>	<java.lang.invoke.MemberName$Factory: java.lang.invoke.MemberName[] newMemberBuffer(int)>/new java.lang.invoke.MemberName[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYLineAndShapeRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.net.SocketPermission: java.security.PermissionCollection newPermissionCollection()>/new java.net.SocketPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.time.TimeSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator: void <clinit>()>/new sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.math.BigDecimal$UnsafeHolder: void <clinit>()>/new java.lang.ExceptionInInitializerError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$Service/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.WaferMapRenderer: org.jfree.chart.LegendItemCollection getLegendCollection()>/new org.jfree.chart.LegendItem/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.util.DisabledAlgorithmConstraints$Constraints: void <init>(java.lang.String[])>/new sun.security.util.DisabledAlgorithmConstraints$jdkCAConstraint/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.FixedMillisecond::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.general.DefaultKeyedValues2DDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.nio.charset.CoderResult$2: java.nio.charset.CoderResult create(int)>/new java.nio.charset.CoderResult/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis3D: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.util.logging.PlatformLogger: sun.util.logging.PlatformLogger getLogger(java.lang.String)>/new sun.util.logging.PlatformLogger/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.text.AttributedCharacterIterator$Attribute: void <clinit>()>/new java.text.AttributedCharacterIterator$Attribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.ChartUtilities: void saveChartAsJPEG(java.io.File,org.jfree.chart.JFreeChart,int,int,org.jfree.chart.ChartRenderingInfo)>/new java.io.FileOutputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.Float: java.lang.Float valueOf(float)>/new java.lang.Float/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.awt.color.ICC_Profile$3: java.io.FileInputStream run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.net.InetAddress$Cache: java.net.InetAddress$Cache put(java.lang.String,java.net.InetAddress[])>/new java.net.InetAddress$CacheEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.awt.geom.Order2: void addInstance(java.util.Vector,double,double,double,double,double,double,int)>/new sun.awt.geom.Order2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.io.ExpiringCache: void put(java.lang.String,java.lang.String)>/new java.io.ExpiringCache$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<method type ()java.util.Comparator>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.util.PolicyUtil: java.io.InputStream getInputStream(java.net.URL)>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<class java.lang.Float>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/15	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.ProcessEnvironment$Value: java.lang.ProcessEnvironment$Value valueOf(byte[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.category.ScatterRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.Short$ShortCache: void <clinit>()>/new java.lang.Short/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.util.logging.PlatformLogger: sun.util.logging.PlatformLogger getLogger(java.lang.String)>/new java.lang.ref.WeakReference/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.Toolkit: void loadAssistiveTechnologies()>/new java.awt.AWTError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/6	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>/new java.util.regex.Pattern$CharPropertyNames$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.category.CategoryStepRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.category.BarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.ScatterRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.Locale$Category: void <clinit>()>/new java.util.Locale$Category/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.TrueTypeFont: java.lang.String makeString(byte[],int,short)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList: void grow(int)>/l0#_0
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.AbstractCollection: void <init>()>/l0#_0
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<sun.font.FileFont: sun.font.FontStrike createStrike(sun.font.FontStrikeDesc)>/new sun.font.FileFontStrike/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.xy.WindDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.text.TextUtilities: org.jfree.chart.text.TextBlock createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)>/new org.jfree.chart.text.TextFragment/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToRangeAxis(int,int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<class java.lang.invoke.BoundMethodHandle>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.String: java.lang.String substring(int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList: void ensureExplicitCapacity(int)>/@this
<<immutable-hcontext>>	<java.io.File: java.net.URL toURL()>/new java.net.MalformedURLException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/26	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<java.lang.Long$LongCache: void <clinit>()>/new java.lang.Long/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.Long$LongCache: void <clinit>()>/new java.lang.Long/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.ClassValue: java.lang.ClassValue$Entry makeEntry(java.lang.ClassValue$Version,java.lang.Object)>/new java.lang.ClassValue$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator: void <clinit>()>/new sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.java2d.Disposer: java.lang.Void lambda$static$0()>/new java.lang.Thread/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.invoke.util.Wrapper: void <clinit>()>/new sun.invoke.util.Wrapper/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.time.SimpleTimePeriod::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.misc.Launcher: java.io.File[] getClassPath(java.lang.String)>/new java.io.File/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.text.normalizer.VersionInfo: sun.text.normalizer.VersionInfo getInstance(int,int,int,int)>/new sun.text.normalizer.VersionInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.nio.charset.CoderResult$Cache: java.nio.charset.CoderResult get(int)>/new java.lang.ref.WeakReference/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.SubCategoryAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.jar.JarVerifier: java.security.cert.Certificate[] mapSignersToCertArray(java.security.CodeSigner[])>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$11/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.geom.Path2D$Float: void needRoom(boolean,int)>/new java.awt.geom.IllegalPathStateException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.PropertyPermission: java.security.PermissionCollection newPermissionCollection()>/new java.util.PropertyPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/26	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.time.Quarter::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm filterReturnForm(java.lang.invoke.LambdaForm$BasicType,boolean)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.category.LineRenderer3D::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(byte,java.lang.Class,java.lang.invoke.MemberName)>/new java.lang.invoke.DirectMethodHandle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.x509.OIDMap: void addInternal(java.lang.String,sun.security.util.ObjectIdentifier,java.lang.String)>/new sun.security.x509.OIDMap$OIDInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class java.lang.Void>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.Axis: void createAndAddEntity(double,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.entity.AxisEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.ClusteredXYBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: int width(java.lang.String)>/new java.util.IllegalFormatWidthException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.RenderingHints$Key: void recordIdentity(java.awt.RenderingHints$Key)>/new java.lang.ref.WeakReference/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYDifferenceRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.xy.DefaultXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.font.NativeFont: sun.font.FontStrike createStrike(sun.font.FontStrikeDesc)>/new sun.font.DelegateStrike/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.Collections$CheckedMap$CheckedEntrySet$CheckedEntry: java.lang.Object setValue(java.lang.Object)>/new java.lang.ClassCastException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.MemberName: java.lang.ReflectiveOperationException makeAccessException()>/new java.lang.NoSuchFieldException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.net.RegisteredDomain: void <clinit>()>/new java.util.HashSet/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.Terminator: void setup()>/new java.lang.Terminator$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.net.ftp.FtpClientProvider: boolean loadProviderFromProperty()>/new java.util.ServiceConfigurationError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.WindItemRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.XMap: sun.font.XMap getXMapperInternal(java.lang.String)>/new sun.font.XMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)>/new sun.security.pkcs.SignerInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.category.BarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$ServiceKey/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.util.SignatureFileVerifier: java.security.CodeSigner[] getSigners(sun.security.pkcs.SignerInfo[],sun.security.pkcs.PKCS7)>/new java.security.CodeSigner[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl$Intrinsic: void <clinit>()>/new java.lang.invoke.MethodHandleImpl$Intrinsic/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/1	<<immutable-context>>	<java.util.ArrayList: boolean contains(java.lang.Object)>/l1#_0
<<immutable-hcontext>>	<java.util.regex.Pattern$CharPropertyNames: void defRange(java.lang.String,int,int)>/new java.util.regex.Pattern$CharPropertyNames$2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: void drawLabels(java.awt.Graphics2D,java.util.List,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.plot.PiePlotState)>/new java.lang.Double/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.awt.image.ColorModel: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.category.DefaultCategoryItemRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.Locale: java.lang.String getISO3Language()>/new java.util.MissingResourceException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.util.locale.LanguageTag: void <clinit>()>/new java.lang.String[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: void computeInitialPreparedForms()>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$10/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis3D: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.text.DecimalFormat: java.text.FieldPosition[] expandAffix(java.lang.String)>/new java.text.FieldPosition/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList: java.lang.String outOfBoundsMsg(int)>/l0#_0
<<immutable-hcontext>>	<org.jfree.chart.text.TextLine: void <init>(java.lang.String,java.awt.Font,java.awt.Paint)>/new org.jfree.chart.text.TextFragment/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.text.BreakIterator: java.text.BreakIterator getBreakInstance(java.util.Locale,int)>/new java.text.BreakIterator$BreakIteratorCache/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYBlockRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: void addGrantEntry(sun.security.provider.PolicyParser$GrantEntry,java.security.KeyStore,sun.security.provider.PolicyFile$PolicyInfo)>/new sun.security.provider.PolicyFile$PolicyEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: java.lang.invoke.LambdaForm$Name argument(int,java.lang.invoke.LambdaForm$BasicType)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$13/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.Permission getKnownInstance(java.lang.Class,java.lang.String,java.lang.String)>/new java.lang.RuntimePermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/8	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: void drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new java.awt.Point/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/15	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYLine3DRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.ResourceBundle: void <clinit>()>/new java.util.ResourceBundle$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Vector: int hugeCapacity(int)>/new java.lang.OutOfMemoryError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.xy.XIntervalSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setExtensions(java.util.List,java.lang.String)>/new sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultMultiValueCategoryDataset: java.lang.Number getValue(int,int)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: void read(java.io.Reader)>/new javax.crypto.CryptoPolicyParser$ParsingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class java.lang.Long>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.nio.charset.Charset: void checkName(java.lang.String)>/new java.nio.charset.IllegalCharsetNameException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList: void ensureCapacityInternal(int)>/l0#_0
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Arrays: byte[] copyOf(byte[],int)>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis3D: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.SpiderWebPlot: void <clinit>()>/new java.awt.Font/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.io.ByteArrayOutputStream: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: java.lang.invoke.LambdaForm$Name[] buildEmptyNames(int,java.lang.String)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack32
<<immutable-hcontext>>	<sun.security.x509.AVAKeyword: void <clinit>()>/new sun.security.x509.AVAKeyword/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result#_4427
<<immutable-hcontext>>	<java.lang.String: java.lang.String valueOf(char[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.nio.CharBuffer: java.nio.CharBuffer put(java.nio.CharBuffer)>/new java.nio.BufferOverflowException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<java.awt.RenderingHints$Key: void recordIdentity(java.awt.RenderingHints$Key)>/new java.lang.ref.WeakReference/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.Millisecond::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.calendar.CalendarSystem$1: java.util.Properties run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.Integer: java.lang.Integer valueOf(int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<java.text.DateFormatSymbols: void initializeData(java.util.Locale)>/new java.text.DateFormatSymbols/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void checkNumeric()>/new java.util.IllegalFormatFlagsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.DynamicTimeSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm$BasicType: void <clinit>()>/new java.lang.invoke.LambdaForm$BasicType/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$ServiceKey/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYAreaRenderer2::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<class java.lang.Short>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.axis.LogAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.awt.geom.Curve: void insertLine(java.util.Vector,double,double,double,double)>/new sun.awt.geom.Order1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/7	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.DynamicTimeSeriesCollection: void findDomainLimits()>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.DeviationRenderer: void drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new double[]/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/10	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StandardXYItemRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>/new java.security.Provider$EngineDescription/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.awt.geom.Order3: sun.awt.geom.Curve getSubCurve(double,double,int)>/new sun.awt.geom.Order3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.BasicPermission: java.security.PermissionCollection newPermissionCollection()>/new java.security.BasicPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.ProcessEnvironment$Value: java.lang.ProcessEnvironment$Value valueOf(byte[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>/new org.jfree.chart.title.LegendGraphic/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.jca.ProviderList: void <init>()>/new sun.security.jca.ProviderConfig/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPolicyParser$CryptoPermissionEntry parsePermissionEntry(java.util.Hashtable)>/new javax.crypto.CryptoPolicyParser$CryptoPermissionEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<class sun.reflect.Reflection>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.certpath.X509CertPath: byte[] encodePKIPATH()>/new java.security.cert.CertificateEncodingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle getDirectMethodCommon(byte,java.lang.Class,java.lang.invoke.MemberName,boolean,boolean,java.lang.Class)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.VectorRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.Permission getKnownInstance(java.lang.Class,java.lang.String,java.lang.String)>/new java.lang.RuntimePermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/30	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$8/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.misc.Launcher$AppClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>/new java.lang.RuntimePermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<class java.lang.String>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>/new org.jfree.chart.title.LegendItemBlockContainer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.PeriodAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.axis.LogAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.LayoutPathImpl$EndType: void <clinit>()>/new sun.font.LayoutPathImpl$EndType/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.LookupPaintScale$PaintItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.WaferMapRenderer: void makePaintIndex()>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.category.CategoryDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/10	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.math.BigInteger: java.math.BigInteger valueOf(long)>/new java.math.BigInteger/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm bindArgumentForm(int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	org.jfree.data.jdbc.JDBCXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/29	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.cert.Certificate[] getCertificates(java.security.KeyStore,java.lang.String,sun.security.provider.PolicyFile$PolicyInfo)>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.java2d.cmm.CMSManager: sun.java2d.cmm.PCMM getModule()>/new java.awt.color.CMMException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.xy.XYCoordinate::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/24	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$7/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: void drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)>/new org.jfree.chart.plot.PieLabelRecord/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.jdbc.JDBCCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.AbstractStringBuilder: java.lang.String substring(int,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<sun.awt.geom.CurveLink: sun.awt.geom.Curve getMoveto()>/new sun.awt.geom.Order0/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.Font: sun.font.FontLineMetrics defaultLineMetrics(java.awt.font.FontRenderContext)>/new sun.font.FontLineMetrics/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.x509.CertificateExtensions: void encode(java.io.OutputStream,boolean)>/new java.security.cert.CertificateException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.x509.CertificateValidity: void construct(sun.security.util.DerValue)>/new java.io.IOException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/0	<<immutable-context>>	<java.util.Vector: boolean contains(java.lang.Object)>/l1#_0
<<immutable-hcontext>>	<org.jfree.data.time.DynamicTimeSeriesCollection: void findDomainLimits()>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$9/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,boolean,double,double)>/new org.jfree.chart.entity.XYItemEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.awt.geom.Order2: sun.awt.geom.Curve getReversedCurve()>/new sun.awt.geom.Order2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.net.www.ParseUtil: java.lang.String encodePath(java.lang.String,boolean)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/15	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseSignedData(sun.security.util.DerValue)>/new sun.security.x509.X509CertImpl/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: java.util.List createStackedValueList(org.jfree.data.category.CategoryDataset,java.lang.Comparable,int[],double,boolean)>/new java.lang.Object[]/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<class java.lang.Class>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.util.ObjectIdentifier: sun.security.util.ObjectIdentifier newInternal(int[])>/new sun.security.util.ObjectIdentifier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList$Itr: boolean hasNext()>/$stack1
<<immutable-hcontext>>	org.jfree.chart.axis.CategoryAxis3D::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.xy.VectorSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.LinkedHashMap: java.util.HashMap$Node replacementNode(java.util.HashMap$Node,java.util.HashMap$Node)>/new java.util.LinkedHashMap$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/15	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Formatter$BigDecimalLayoutForm: void <clinit>()>/new java.util.Formatter$BigDecimalLayoutForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.security.UnresolvedPermissionCollection: void add(java.security.Permission)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.Formatter: void ensureOpen()>/new java.util.FormatterClosedException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<com.sun.beans.finder.MethodFinder: java.lang.reflect.Method findInstanceMethod(java.lang.Class,java.lang.String,java.lang.Class[])>/new java.lang.NoSuchMethodException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.net.URLClassLoader: java.lang.Class defineClass(java.lang.String,sun.misc.Resource)>/new java.security.CodeSource/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToDomainAxis(int,int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<class java.lang.System>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<java.awt.Font: sun.font.FontLineMetrics defaultLineMetrics(java.awt.font.FontRenderContext)>/new sun.font.FontLineMetrics/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/21	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void checkNumeric()>/new java.util.IllegalFormatFlagsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.io.ObjectOutputStream$BlockDataOutputStream: void writeUTF(java.lang.String,long)>/new java.io.UTFDataFormatException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>/new java.util.IllegalFormatConversionException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.axis.NumberTickUnit::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.Formatter: java.util.Formatter format(java.util.Locale,java.lang.String,java.lang.Object[])>/new java.util.MissingFormatArgumentException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/12	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.net.InetAddress: sun.net.spi.nameservice.NameService createNSProvider(java.lang.String)>/new java.net.InetAddress$2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/new java.util.TreeMap$Entry/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis3D: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.String: java.lang.String concat(java.lang.String)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/new java.util.TreeMap$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBarRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,boolean,double,double)>/new org.jfree.chart.entity.XYItemEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/6	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.Permission getKnownInstance(java.lang.Class,java.lang.String,java.lang.String)>/new java.io.FilePermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<class java.lang.Object[]>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.ClassLoader: java.security.ProtectionDomain preDefineClass(java.lang.String,java.security.ProtectionDomain)>/new java.lang.NoClassDefFoundError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.category.CategoryDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<java.nio.charset.CoderResult$Cache: java.nio.charset.CoderResult get(int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/25	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.Currency$1: java.lang.Void run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<class java.lang.String>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.MethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.DirectMethodHandle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.MemberName$Factory: java.lang.invoke.MemberName[] newMemberBuffer(int)>/new java.lang.invoke.MemberName[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormBuffer: java.lang.invoke.LambdaForm lambdaForm()>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm collectArgumentArrayForm(int,java.lang.invoke.MethodHandle)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$6/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/6	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	java.lang.String::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/13	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis3D: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.DeviationRenderer: void drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new double[]/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getGeneralString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/new java.util.TreeMap$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.awt.image.IndexColorModel: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: java.util.List createStackedValueList(org.jfree.data.category.CategoryDataset,java.lang.Comparable,int[],double,boolean)>/new java.lang.Object[]/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: void <clinit>()>/new java.awt.BasicStroke/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.ClassValue$Version: void <init>(java.lang.ClassValue)>/new java.lang.ClassValue$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.PolicyParser$GrantEntry: java.lang.Object clone()>/new sun.security.provider.PolicyParser$GrantEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.WaferMapRenderer: void makePositionIndex(java.util.Set)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/19	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<sun.awt.geom.Order3: void addInstance(java.util.Vector,double,double,double,double,double,double,double,double,int)>/new sun.awt.geom.Order3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<class java.lang.invoke.MethodHandle>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.time.SpreadsheetDate::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/8	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCCategoryDataset: void executeQuery(java.sql.Connection,java.lang.String)>/new java.lang.Long/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.image.ColorModel: java.awt.image.ColorModel getRGBdefault()>/new java.awt.image.DirectColorModel/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: void computeInitialPreparedForms()>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>/new org.jfree.chart.title.LegendGraphic/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.WindItemRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$4/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack32
<<immutable-hcontext>>	<<string-constant>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int,java.lang.Class)>/new java.lang.Object[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle makeAllocator(java.lang.invoke.MemberName)>/new java.lang.invoke.DirectMethodHandle$Constructor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.awt.image.ColorModel: byte[] getGray16TosRGB8LUT(java.awt.color.ICC_ColorSpace)>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/0	<<immutable-context>>	<java.lang.Integer: boolean equals(java.lang.Object)>/@this
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/23	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/26	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(byte,java.lang.Class,java.lang.invoke.MemberName)>/new java.lang.invoke.DirectMethodHandle$Accessor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/13	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.axis.LogarithmicAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/axis#_0
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<sun.misc.URLClassPath$JarLoader$3: sun.misc.URLClassPath$JarLoader run()>/new sun.misc.URLClassPath$JarLoader/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getIA5String()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.xy.XIntervalSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.xy.XIntervalDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.net.www.ParseUtil: java.lang.String encodePath(java.lang.String,boolean)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedDomainCategoryPlot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<javax.crypto.CryptoAllPermission: java.security.PermissionCollection newPermissionCollection()>/new javax.crypto.CryptoAllPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.misc.FloatingDecimal: void <clinit>()>/new sun.misc.FloatingDecimal$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandle getDirectMethodCommon(byte,java.lang.Class,java.lang.invoke.MemberName,boolean,boolean,java.lang.Class)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<sun.awt.geom.Curve: void insertMove(java.util.Vector,double,double)>/new sun.awt.geom.Order0/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getRangeBounds(java.util.List,org.jfree.data.Range,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	org.jfree.data.ComparableObjectItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.PeriodAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<sun.awt.geom.AreaOp: java.util.Vector pruneEdges(java.util.Vector)>/new sun.awt.geom.CurveLink/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator: void <clinit>()>/new sun.security.util.DisabledAlgorithmConstraints$Constraint$Operator/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	org.jfree.data.time.TimeSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#27#_4471
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedAreaRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<sun.font.FileFontStrike: java.awt.geom.GeneralPath getGlyphOutline(int,float,float)>/new java.util.concurrent.ConcurrentHashMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<javax.crypto.CryptoAllPermission: void <clinit>()>/new javax.crypto.CryptoAllPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.x509.X509CertImpl: java.lang.Object get(java.lang.String)>/new java.security.cert.CertificateParsingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<sun.security.provider.PolicyFile$4: java.lang.Void run()>/new java.util.PropertyPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<class java.lang.Character>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.ResourceBundle$Control: java.util.ResourceBundle newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean)>/new java.util.PropertyResourceBundle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.ClassLoader: java.lang.Class findClass(java.lang.String)>/new java.lang.ClassNotFoundException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.WaferMapRenderer: void makeValueIndex(java.lang.Number,java.lang.Number,java.util.Set)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>/new org.jfree.chart.block.BlockContainer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedAreaRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.LinkedHashMap: java.util.HashMap$Node replacementNode(java.util.HashMap$Node,java.util.HashMap$Node)>/new java.util.LinkedHashMap$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/10	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	java.util.Locale::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.ConditionalSpecialCasing: void <clinit>()>/new java.util.HashSet/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.ClusteredXYBarRenderer: org.jfree.data.Range findDomainBoundsWithOffset(org.jfree.data.xy.IntervalXYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedRangeXYPlot: void <init>()>/new org.jfree.chart.axis.NumberAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/@parameter0
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: void addPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[],sun.security.provider.PolicyFile$PolicyEntry)>/new sun.security.provider.PolicyParser$PrincipalEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<<main-thread-group>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	org.jfree.chart.axis.NumberAxis3D::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/axis#_0
<<immutable-hcontext>>	org.jfree.data.ComparableObjectItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYBubbleRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getInstance(java.lang.String)>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.nio.charset.CoderResult$Cache: java.nio.charset.CoderResult get(int)>/new java.lang.ref.WeakReference/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.Short: short parseShort(java.lang.String,int)>/new java.lang.NumberFormatException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.BoxAndWhiskerRenderer: void drawVerticalItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)>/new org.jfree.chart.renderer.Outlier/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.util.locale.LocaleUtils: java.lang.String toTitleString(java.lang.String)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.nio.charset.CoderResult: void throwException()>/new java.nio.charset.MalformedInputException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.util.DerIndefLenConverter: byte[] getLengthBytes(int)>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.jar.JarInputStream: java.util.jar.JarEntry checkManifest(java.util.jar.JarEntry)>/new java.util.jar.Manifest/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.InvokerBytecodeGenerator$1: java.lang.Void run()>/new java.io.FileOutputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.font.TrueTypeFont: void <init>(java.lang.String,java.lang.Object,int,boolean,boolean)>/new sun.font.TrueTypeFont$TTDisposerRecord/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseNetscapeCertChain(sun.security.util.DerValue)>/new sun.security.x509.X509CertImpl/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle$Special: java.lang.invoke.MethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.DirectMethodHandle$Special/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.x509.AVA: java.lang.Byte getEmbeddedHexPair(int,java.io.Reader)>/new java.lang.Byte/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.geom.Rectangle2D$Double/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.Polygon: void <init>(int[],int[],int)>/new java.lang.NegativeArraySizeException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/7	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.Signature$CipherAdapter: void engineSetParameter(java.lang.String,java.lang.Object)>/new java.security.InvalidParameterException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.plot.PieLabelRecord::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.security.CryptoPrimitive: void <clinit>()>/new java.security.CryptoPrimitive/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.CallSite: java.lang.invoke.WrongMethodTypeException wrongTargetType(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>/new java.lang.invoke.WrongMethodTypeException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.ClassLoader: java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>/new java.lang.Package/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(byte,java.lang.Class,java.lang.invoke.MemberName)>/new java.lang.invoke.DirectMethodHandle$StaticAccessor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: void drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new java.awt.Point/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.misc.FloatingDecimal: void <clinit>()>/new sun.misc.FloatingDecimal$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.ProcessEnvironment$Value: java.lang.ProcessEnvironment$Value valueOf(byte[])>/new java.lang.ProcessEnvironment$Value/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToDomainAxes(int,java.util.List)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.xy.DefaultWindDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.Short: java.lang.Short valueOf(short)>/new java.lang.Short/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis3D: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.category.CategoryDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.axis.AxisState drawCategoryLabels(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.entity.CategoryLabelEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/20	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm bindArgumentForm(int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.category.CategoryDataset,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getInstance(byte[])>/new java.awt.color.ICC_ProfileRGB/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.text.DateFormatSymbols: void initializeData(java.util.Locale)>/new java.text.DateFormatSymbols/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList: boolean add(java.lang.Object)>/l0#_0
<<immutable-hcontext>>	<java.io.File$PathStatus: void <clinit>()>/new java.io.File$PathStatus/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.provider.SeedGenerator$ThreadedSeedGenerator$1: java.lang.Thread run()>/new java.lang.ThreadGroup/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: java.lang.String match(java.lang.String)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.Byte$ByteCache: void <clinit>()>/new java.lang.Byte/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<class sun.reflect.Reflection>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.AbstractCategoryItemRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.GlyphLayout$SDCache: sun.font.GlyphLayout$SDCache get(java.awt.Font,java.awt.font.FontRenderContext)>/new java.util.concurrent.ConcurrentHashMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.gantt.SlidingGanttCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.MeterPlot: org.jfree.chart.LegendItemCollection getLegendItems()>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.ArrayList: java.util.Iterator iterator()>/new java.util.ArrayList$Itr/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#14_$$A_1#_4464
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYAreaRenderer2: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	org.jfree.chart.plot.PieLabelRecord::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.VectorRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	org.jfree.chart.renderer.Outlier::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: void activateDeferredProfile()>/new java.awt.color.ProfileDataException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MemberName resolveOrFail(byte,java.lang.Class,java.lang.String,java.lang.Class)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.awt.Color: void <clinit>()>/new java.awt.Color/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.awt.image.ColorModel: byte[] getGray8TosRGB8LUT(java.awt.color.ICC_ColorSpace)>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBubbleRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.awt.geom.Order2: void addInstance(java.util.Vector,double,double,double,double,double,double,int)>/new sun.awt.geom.Order2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/12	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToDomainAxes(int,java.util.List)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.ArrayList: java.util.Iterator iterator()>/new java.util.ArrayList$Itr/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#14_$$A_2#_4469
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/8	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.util.DerValue: sun.security.util.ObjectIdentifier getOID()>/new sun.security.util.ObjectIdentifier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/8	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.ArrayList: java.util.Iterator iterator()>/new java.util.ArrayList$Itr/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/iterator#_4440
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$ServiceKey/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.AxisLocation: void <clinit>()>/new org.jfree.chart.axis.AxisLocation/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.nio.charset.CoderResult$2: java.nio.charset.CoderResult create(int)>/new java.nio.charset.CoderResult/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.util.DerIndefLenConverter: byte[] getLengthBytes(int)>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.ClusteredXYBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name cloneWithIndex(int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/25	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>/new java.lang.String[][]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceNames(java.lang.invoke.LambdaForm$Name[],java.lang.invoke.LambdaForm$Name[],int,int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.category.CategoryDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/31	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/10	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<class java.lang.ClassLoader>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.regex.Pattern$CharPropertyNames: void defRange(java.lang.String,int,int)>/new java.util.regex.Pattern$CharPropertyNames$2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl$Intrinsic: void <clinit>()>/new java.lang.invoke.MethodHandleImpl$Intrinsic/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/22	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: void drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)>/new org.jfree.chart.plot.PieLabelRecord/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.java2d.HeadlessGraphicsEnvironment: java.awt.GraphicsDevice[] getScreenDevices()>/new java.awt.HeadlessException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<class java.lang.Object>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<sun.security.util.SignatureFileVerifier: void updateSigners(java.security.CodeSigner[],java.util.Hashtable,java.lang.String)>/new java.security.CodeSigner[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/37	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>/new java.util.TreeMap$Entry/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.misc.FloatingDecimal$BinaryToASCIIBuffer: java.lang.String toJavaFormatString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.general.DefaultValueDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$ServiceKey/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.security.Signature$Delegate: void chooseFirstProvider()>/new java.lang.Exception/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/23	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: void expandSelf(sun.security.provider.PolicyFile$SelfPermission,java.util.List,java.security.Principal[],java.security.Permissions)>/new java.security.UnresolvedPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.Stack: java.lang.Object peek()>/new java.util.EmptyStackException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.x509.OIDMap: void addInternal(java.lang.String,sun.security.util.ObjectIdentifier,java.lang.String)>/new sun.security.x509.OIDMap$OIDInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.text.AttributedCharacterIterator$Attribute: void <clinit>()>/new java.text.AttributedCharacterIterator$Attribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.DeviationRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.geom.Rectangle2D$Double/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.Long: java.lang.String toString(long)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.calendar.ZoneInfoFile$1: java.lang.Object run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList: java.lang.Object elementData(int)>/@this
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/21	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/35	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(byte,java.lang.Class,java.lang.invoke.MemberName)>/new java.lang.invoke.DirectMethodHandle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.ResourceBundle$Control$CandidateListCache: java.util.List getDefaultList(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>/new java.util.LinkedList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.String: java.lang.String copyValueOf(char[],int,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>/new java.security.MessageDigest$Delegate/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: void read(java.io.Reader)>/new javax.crypto.CryptoPolicyParser$ParsingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYDifferenceRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/7	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<class java.lang.Double>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/17	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.misc.URLClassPath$JarLoader: sun.misc.Resource getResource(java.lang.String,boolean,java.util.Set)>/new sun.misc.InvalidJarIndexException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/10	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.zip.ZipFile$ZipEntryIterator: java.util.zip.ZipEntry next()>/new java.util.zip.ZipError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceNames(java.lang.invoke.LambdaForm$Name[],java.lang.invoke.LambdaForm$Name[],int,int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToRangeAxes(int,java.util.List)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>/new java.security.NoSuchProviderException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.util.SecurityConstants: void <clinit>()>/new java.security.AllPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDotRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.xy.TableXYDataset,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>/new org.jfree.chart.title.LegendItemBlockContainer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.jar.Attributes: java.lang.String putValue(java.lang.String,java.lang.String)>/new java.util.jar.Attributes$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)>/new java.security.cert.X509Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.plot.PieLabelRecord::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: void <init>(sun.java2d.cmm.ProfileDeferralInfo)>/new java.awt.color.ICC_Profile$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.BoxAndWhiskerRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.axis.DateAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/@parameter0
<<immutable-hcontext>>	<sun.misc.FloatingDecimal$BinaryToASCIIBuffer: java.lang.String toJavaFormatString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getT61String()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.font.FontUtilities$1: java.lang.Object run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.jdbc.JDBCXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#27#_4471
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList: void <init>()>/@this
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/25	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.String: java.lang.String concat(java.lang.String)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedAreaRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<java.math.BigInteger: void <clinit>()>/new java.math.BigInteger/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(java.util.List,boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<java.util.Formatter$Flags: java.util.Formatter$Flags parse(java.lang.String)>/new java.util.DuplicateFormatFlagsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.DefaultXYItemRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<javax.crypto.JceSecurity: void <clinit>()>/new java.net.URL/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.math.BigDecimal$UnsafeHolder: void <clinit>()>/new java.lang.ExceptionInInitializerError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.category.GanttRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>/new java.security.MessageDigest$Delegate/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: void <clinit>()>/new java.awt.BasicStroke/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<java.awt.Color: void <clinit>()>/new java.awt.Color/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.x509.X509CertImpl: java.lang.Object get(java.lang.String)>/new java.security.cert.CertificateParsingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.security.Provider: void addEngine(java.lang.String,boolean,java.lang.String)>/new java.security.Provider$EngineDescription/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.x509.X509CRLImpl: void parse(sun.security.util.DerValue)>/new sun.security.x509.X509CRLEntryImpl/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.category.AreaRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.Boolean: void <clinit>()>/new java.lang.Boolean/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: java.util.List createStackedValueList(org.jfree.data.category.CategoryDataset,java.lang.Comparable,int[],double,boolean)>/new java.lang.Object[]/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.nio.charset.Charset: void checkName(java.lang.String)>/new java.nio.charset.IllegalCharsetNameException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.java2d.cmm.CMSManager: sun.java2d.cmm.PCMM getModule()>/new java.awt.color.CMMException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.SymbolAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/0	<<immutable-context>>	<java.util.Vector: boolean contains(java.lang.Object)>/@parameter0
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/22	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.x509.CertificateValidity: void construct(sun.security.util.DerValue)>/new java.io.IOException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.provider.SeedGenerator$ThreadedSeedGenerator: void run()>/new java.lang.Thread/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<class java.lang.Character>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.StringBuilder: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.BoxAndWhiskerRenderer: void drawVerticalItem(java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset,int,int,boolean,int)>/new org.jfree.chart.renderer.Outlier/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.nio.charset.CoderResult: void throwException()>/new java.nio.charset.UnmappableCharacterException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class java.lang.invoke.MethodHandleImpl$BindCaller>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.ProcessEnvironment$StringEntrySet$1: java.util.Map$Entry next()>/new java.lang.ProcessEnvironment$StringEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot3D: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new java.awt.geom.Arc2D$Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(byte,java.lang.Class,java.lang.invoke.MemberName)>/new java.lang.invoke.DirectMethodHandle$StaticAccessor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.util.locale.provider.LocaleServiceProviderPool: java.util.Locale getLookupLocale(java.util.Locale)>/new java.util.Locale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedAreaRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<java.net.URLClassLoader: java.lang.Class defineClass(java.lang.String,sun.misc.Resource)>/new java.security.CodeSource/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar getLocalGregorianCalendar(java.lang.String)>/new sun.util.calendar.Era/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<javax.crypto.CryptoAllPermission: java.security.PermissionCollection newPermissionCollection()>/new javax.crypto.CryptoAllPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.image.ColorModel: byte[] getLinearGray16ToOtherGray8LUT(java.awt.color.ICC_ColorSpace)>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.DeviationRenderer: void drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new double[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<method type ()java.security.PrivilegedAction>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.NativeFont: sun.font.FontStrike createStrike(sun.font.FontStrikeDesc)>/new sun.font.NativeStrike/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultMultiValueCategoryDataset: java.lang.Number getValue(int,int)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.Polygon/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToDomainAxis(int,int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.font.NativeFont: sun.font.FontStrike createStrike(sun.font.FontStrikeDesc)>/new sun.font.NativeStrike/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.axis.DateAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/axis#_0
<<immutable-hcontext>>	<java.text.Normalizer$Form: void <clinit>()>/new java.text.Normalizer$Form/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.axis.SegmentedTimeline$BaseTimelineSegmentRange::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.misc.ProxyGenerator$ConstantPool$ValueEntry: void write(java.io.DataOutputStream)>/new java.lang.InternalError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.xy.XYBarDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.SimpleMethodHandle: java.lang.invoke.BoundMethodHandle make(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.SimpleMethodHandle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.TreeSet: void <clinit>()>/new java.lang.Object/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.util.PropertyExpander: java.lang.String expand(java.lang.String,boolean)>/new sun.security.util.PropertyExpander$ExpandException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: void activateDeferredProfile()>/new java.awt.color.ProfileDataException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.misc.URLClassPath$3: sun.misc.URLClassPath$Loader run()>/new sun.misc.URLClassPath$FileLoader/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.DynamicTimeSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<java.math.RoundingMode: void <clinit>()>/new java.math.RoundingMode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/27	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.Package: java.util.jar.Manifest loadManifest(java.lang.String)>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.misc.URLClassPath$JarLoader: java.util.jar.JarFile getJarFile(java.net.URL)>/new java.util.jar.JarFile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.Locale$Category: void <clinit>()>/new java.util.Locale$Category/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxes(int,java.util.List)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/7	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.StackedXYAreaRenderer2::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.OutlierListCollection: boolean add(org.jfree.chart.renderer.Outlier)>/new org.jfree.chart.renderer.OutlierList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.category.GroupedStackedBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.xy.DefaultTableXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYSplineRenderer: void drawPrimaryLineAsPath(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)>/new org.jfree.chart.renderer.xy.XYSplineRenderer$ControlPoint/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.font.FontResolver: void <init>()>/new java.awt.Font/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultMultiValueCategoryDataset: void <init>()>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<sun.security.provider.PolicyFile$4: java.lang.Void run()>/new java.util.PropertyPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYShapeRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/8	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.font.StrikeCache: java.lang.ref.Reference getStrikeRef(sun.font.FontStrike,boolean)>/new sun.font.StrikeCache$SoftDisposerRef/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.awt.SunHints: void <clinit>()>/new sun.awt.SunHints$Value/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<java.util.zip.ZipInputStream: void <init>(java.io.InputStream,java.nio.charset.Charset)>/new java.util.zip.Inflater/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: void executeQuery(java.sql.Connection,java.lang.String)>/new java.lang.Long/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[] retrieveDisplayNamesImpl(java.lang.String,java.util.Locale)>/new java.util.concurrent.ConcurrentHashMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/6	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.xy.MatrixSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>/new java.nio.DirectByteBuffer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.JFreeChart: void <init>(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)>/new org.jfree.chart.title.LegendTitle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class sun.invoke.util.Wrapper>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.ohlc.OHLCItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.axis.NumberAxis3D::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.JFreeChart: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.ChartRenderingInfo)>/new org.jfree.chart.entity.JFreeChartEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.xy.TableXYDataset,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<sun.font.SunLayoutEngine: sun.font.GlyphLayout$LayoutEngine getEngine(sun.font.GlyphLayout$LayoutEngineKey)>/new java.util.concurrent.ConcurrentHashMap/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.HighLowRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/8	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.nio.charset.Charset: void checkName(java.lang.String)>/new java.nio.charset.IllegalCharsetNameException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/11	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.ClusteredXYBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/22	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.lang.Object: void <init>()>/l0#_0
<<immutable-hcontext>>	<java.lang.ConditionalSpecialCasing: void <clinit>()>/new java.util.HashSet/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.axis.SubCategoryAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<javax.crypto.CryptoPermissions: void add(java.security.Permission)>/new java.lang.SecurityException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis3D: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.category.CategoryDataset,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<java.util.stream.AbstractTask: void setRawResult(java.lang.Object)>/new java.lang.IllegalStateException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYDotRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultMultiValueCategoryDataset: void <init>()>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<java.lang.invoke.InvokerBytecodeGenerator$1: java.lang.Void run()>/new java.io.FileOutputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<java.lang.Long$LongCache: void <clinit>()>/new java.lang.Long/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.sql.DriverManager: java.sql.Driver getDriver(java.lang.String)>/new java.sql.SQLException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.util.locale.LocaleUtils: java.lang.String toTitleString(java.lang.String)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermission[] getMinimum(int,java.security.PermissionCollection)>/new javax.crypto.CryptoPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(byte,java.lang.Class,java.lang.invoke.MemberName)>/new java.lang.invoke.DirectMethodHandle$Accessor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<java.lang.Package$1: java.lang.Package run()>/new java.lang.Package/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.Short: java.lang.Short valueOf(short)>/new java.lang.Short/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	sun.font.TrueTypeFont::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.misc.Unsafe: void <clinit>()>/new sun.misc.Unsafe/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.category.LayeredBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeIntrinsic(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,java.lang.invoke.MethodHandleImpl$Intrinsic)>/new java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.awt.geom.Curve: void insertLine(java.util.Vector,double,double,double,double)>/new sun.awt.geom.Order1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.LambdaForm makeReinvokerForm(java.lang.invoke.MethodHandle,int,java.lang.Object,java.lang.String,boolean,java.lang.invoke.LambdaForm$NamedFunction,java.lang.invoke.LambdaForm$NamedFunction)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.AccessController: java.security.AccessControlContext createWrapper(java.security.DomainCombiner,java.lang.Class,java.security.AccessControlContext,java.security.AccessControlContext,java.security.Permission[])>/new java.security.ProtectionDomain/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.statistics.SimpleHistogramBin::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.title.LegendItemBlockContainer: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>/new org.jfree.chart.entity.LegendItemEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor$Transform: java.lang.invoke.LambdaFormEditor$Transform withResult(java.lang.invoke.LambdaForm)>/new java.lang.invoke.LambdaFormEditor$Transform/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.AbstractValidatingLambdaMetafactory: void <init>(java.lang.invoke.MethodHandles$Lookup,java.lang.invoke.MethodType,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,java.lang.Class[],java.lang.invoke.MethodType[])>/new java.lang.invoke.LambdaConversionException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.time.TimePeriodValuesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.util.locale.provider.DictionaryBasedBreakIterator: void divideUpDictionaryRange(int,int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.axis.NumberTickUnit::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.util.locale.provider.LocaleProviderAdapter$Type: void <clinit>()>/new sun.util.locale.provider.LocaleProviderAdapter$Type/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.AreaRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.awt.geom.Order3: void addInstance(java.util.Vector,double,double,double,double,double,double,double,double,int)>/new sun.awt.geom.Order3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.HashMap: java.util.HashMap$Node replacementNode(java.util.HashMap$Node,java.util.HashMap$Node)>/new java.util.HashMap$Node/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.ClusteredXYBarRenderer: org.jfree.data.Range findDomainBoundsWithOffset(org.jfree.data.xy.IntervalXYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYShapeRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.awt.Toolkit: void loadAssistiveTechnologies()>/new java.awt.AWTError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.ComparableObjectItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.ClassValue$Entry: java.lang.ClassValue$Entry refreshVersion(java.lang.ClassValue$Version)>/new java.lang.ClassValue$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.StringCoding: char[] decode(java.lang.String,byte[],int,int)>/new java.lang.StringCoding$StringDecoder/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.util.locale.provider.LocaleResources: void <clinit>()>/new java.lang.Object/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.StandardXYItemRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedRangeCategoryPlot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.x509.AVA: java.lang.Byte getEmbeddedHexPair(int,java.io.Reader)>/new java.lang.Byte/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/22	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.LogarithmicAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.xy.YIntervalSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#27#_4471
<<immutable-hcontext>>	org.jfree.chart.axis.ExtendedCategoryAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.text.TextBlock: void addLine(java.lang.String,java.awt.Font,java.awt.Paint)>/new org.jfree.chart.text.TextLine/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.util.SignatureFileVerifier: void updateSigners(java.security.CodeSigner[],java.util.Hashtable,java.lang.String)>/new java.security.CodeSigner[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.jar.JarFile: java.util.jar.Manifest getManifestFromReference()>/new java.util.jar.Manifest/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.Invokers: java.lang.invoke.LambdaForm invokeHandleForm(java.lang.invoke.MethodType,boolean,int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.axis.NumberAxis3D::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void printCharacter(java.lang.Object)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.nio.channels.spi.AbstractInterruptibleChannel: void end(boolean)>/new java.nio.channels.ClosedByInterruptException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/8	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.util.locale.provider.LocaleResources: java.lang.String[][] getZoneStrings()>/new java.lang.String[][]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedDomainXYPlot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	java.util.Locale::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.DeviationRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.category.BarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.YIntervalRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/22	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.HighLowRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	<org.jfree.chart.text.TextBlock: void addLine(java.lang.String,java.awt.Font,java.awt.Paint)>/new org.jfree.chart.text.TextLine/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.OutlierListCollection: boolean add(org.jfree.chart.renderer.Outlier)>/new org.jfree.chart.renderer.OutlierList/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$Service/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYStepAreaRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.category.CategoryDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<java.lang.Integer$IntegerCache: void <clinit>()>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.geom.Path2D$Float: void needRoom(boolean,int)>/new java.awt.geom.IllegalPathStateException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.Character$UnicodeBlock: void <clinit>()>/new java.lang.Character$UnicodeBlock/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYLineAndShapeRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/33	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.misc.URLClassPath$3: sun.misc.URLClassPath$Loader run()>/new sun.misc.URLClassPath$FileLoader/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$7/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.text.AttributedString$AttributeMap: java.util.Set entrySet()>/new java.text.AttributeEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>/new javax.crypto.NoSuchPaddingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<class sun.misc.Unsafe>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void failMismatch(java.util.Formatter$Flags,char)>/new java.util.FormatFlagsConversionMismatchException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.util.DerIndefLenConverter: byte[] getLengthBytes(int)>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.nio.charset.CoderResult$Cache: java.nio.charset.CoderResult get(int)>/new java.lang.ref.WeakReference/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.font.EAttribute: void <clinit>()>/new sun.font.EAttribute/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<class java.lang.Void>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.text.MessageFormat$Field: void <clinit>()>/new java.text.MessageFormat$Field/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/1	<<immutable-context>>	<java.util.LinkedList: boolean contains(java.lang.Object)>/l1#_0
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<org.jfree.chart.plot.PolarPlot: java.util.List refreshAngleTicks()>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$16/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.net.InetAddress$Cache: java.net.InetAddress$Cache put(java.lang.String,java.net.InetAddress[])>/new java.net.InetAddress$CacheEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.ssl.SupportedEllipticCurvesExtension$NamedEllipticCurve: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String,boolean)>/new java.lang.RuntimeException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.awt.image.BufferedImage: void <init>(int,int,int)>/new java.awt.image.ComponentColorModel/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.DeviationRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$ServiceKey/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.Second::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.image.SinglePixelPackedSampleModel: java.awt.image.SampleModel createSubsetSampleModel(int[])>/new java.awt.image.RasterFormatException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.category.GroupedStackedBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.util.DerInputStream: sun.security.util.ObjectIdentifier getOID()>/new sun.security.util.ObjectIdentifier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.awt.geom.Curve: void insertMove(java.util.Vector,double,double)>/new sun.awt.geom.Order0/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.Signature$Delegate: java.security.SignatureSpi newInstance(java.security.Provider$Service)>/new java.security.NoSuchAlgorithmException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.xy.VectorSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYLine3DRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.time.DynamicTimeSeriesCollection: void findDomainLimits()>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm$Name: java.lang.invoke.LambdaForm$Name replaceNames(java.lang.invoke.LambdaForm$Name[],java.lang.invoke.LambdaForm$Name[],int,int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.regex.Pattern$CharPropertyNames: void <clinit>()>/new java.util.regex.Pattern$CharPropertyNames$5/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.TimeTableXYDataset: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<org.jfree.data.DataUtilities: java.lang.Number[] createNumberArray(double[])>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<javax.crypto.CryptoAllPermission: void <clinit>()>/new javax.crypto.CryptoAllPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/1	<<immutable-context>>	<java.util.LinkedList: boolean contains(java.lang.Object)>/@parameter0
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormBuffer: java.lang.invoke.LambdaFormBuffer replaceFunctions(java.lang.invoke.LambdaForm$NamedFunction[],java.lang.invoke.LambdaForm$NamedFunction[],java.lang.Object[])>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeIntrinsic(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,java.lang.invoke.MethodHandleImpl$Intrinsic)>/new java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: void print(java.lang.StringBuilder,double,java.util.Locale,java.util.Formatter$Flags,char,int,boolean)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.misc.ExtensionDependency$1: java.util.jar.Manifest run()>/new java.util.jar.JarFile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.WaferMapRenderer: org.jfree.chart.LegendItemCollection getLegendCollection()>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.awt.SunHints: void <clinit>()>/new sun.awt.SunHints$Value/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$4/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<java.util.LinkedHashMap: java.util.HashMap$TreeNode replacementTreeNode(java.util.HashMap$Node,java.util.HashMap$Node)>/new java.util.HashMap$TreeNode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.util.logging.PlatformLogger$Level: void <clinit>()>/new sun.util.logging.PlatformLogger$Level/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.LogarithmicAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYSplineRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	<class java.lang.Throwable>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList: java.util.Iterator iterator()>/@this
<<immutable-hcontext>>	<java.util.Formatter: void ensureOpen()>/new java.util.FormatterClosedException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYAreaRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.YIntervalRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	<sun.security.x509.RDN: void <init>(java.lang.String,java.util.Map)>/new sun.security.x509.AVA/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.axis.NumberAxis3D::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/@parameter0
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.cert.Certificate[] getSignerCertificates(java.security.CodeSource)>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.statistics.SimpleHistogramBin::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$7/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<javax.crypto.CryptoAllPermission: java.security.PermissionCollection newPermissionCollection()>/new javax.crypto.CryptoAllPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.x509.RDN: void <init>(sun.security.util.DerValue)>/new sun.security.x509.AVA/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.util.DisabledAlgorithmConstraints$Constraints: void <init>(java.lang.String[])>/new sun.security.util.DisabledAlgorithmConstraints$KeySizeConstraint/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.HashMap: java.util.HashMap$Node newNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)>/new java.util.HashMap$Node/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/11	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<java.lang.ClassLoader: java.lang.Class findClass(java.lang.String)>/new java.lang.ClassNotFoundException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.WaferMapRenderer: org.jfree.chart.LegendItemCollection getLegendCollection()>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/0	<<immutable-context>>	<java.lang.Object: void <init>()>/l0#_0
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: void activateDeferredProfile()>/new java.awt.color.ProfileDataException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.ref.Reference: void <clinit>()>/new java.lang.ref.Reference$ReferenceHandler/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.awt.DebugSettings: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.misc.Unsafe: void <clinit>()>/new java.lang.String[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.reflect.Reflection: void <clinit>()>/new java.lang.String[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.x509.OIDMap: void addInternal(java.lang.String,sun.security.util.ObjectIdentifier,java.lang.String)>/new sun.security.x509.OIDMap$OIDInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.net.URLClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>/new java.net.SocketPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/10	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.StackedXYAreaRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.Stack: java.lang.Object peek()>/new java.util.EmptyStackException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/36	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.awt.SunHints: void <clinit>()>/new sun.awt.SunHints$LCDContrastKey/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.ssl.HandshakeMessage$CertificateVerify: java.security.Signature getSignature(sun.security.ssl.ProtocolVersion,java.lang.String)>/new java.security.SignatureException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.category.DefaultCategoryItemRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.LinkedHashMap: java.util.HashMap$TreeNode newTreeNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)>/new java.util.HashMap$TreeNode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.System: void initializeSystemClass()>/new java.io.FileOutputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.security.Signature$CipherAdapter: void engineSetParameter(java.lang.String,java.lang.Object)>/new java.security.InvalidParameterException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)>/new java.security.cert.X509Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.String: java.lang.String valueOf(char[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.Currency$1: java.lang.Void run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/38	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.ResourceBundle: void <clinit>()>/new java.util.ResourceBundle$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToRangeAxes(int,java.util.List)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(byte,java.lang.Class,java.lang.invoke.MemberName)>/new java.lang.invoke.DirectMethodHandle$Accessor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYStepAreaRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList: void rangeCheck(int)>/@this
<<immutable-hcontext>>	<java.lang.StringBuilder: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.ClassLoader: void loadLibrary(java.lang.Class,java.lang.String,boolean)>/new java.lang.UnsatisfiedLinkError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.security.Provider$Service: void addAttribute(java.lang.String,java.lang.String)>/new java.security.Provider$UString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.regex.Pattern$CharPropertyNames: void defRange(java.lang.String,int,int)>/new java.util.regex.Pattern$CharPropertyNames$2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/32	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.Package: java.util.jar.Manifest loadManifest(java.lang.String)>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.io.UnixFileSystem: java.lang.String[] list(java.io.File)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.font.LayoutPathImpl$EndType: void <clinit>()>/new sun.font.LayoutPathImpl$EndType/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm collectArgumentArrayForm(int,java.lang.invoke.MethodHandle)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.Invokers: java.lang.invoke.LambdaForm invokeHandleForm(java.lang.invoke.MethodType,boolean,int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/14	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.VectorRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<org.jfree.chart.axis.PeriodAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.text.DecimalFormat: java.text.FieldPosition[] expandAffix(java.lang.String)>/new java.text.FieldPosition/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.util.SecurityConstants: void <clinit>()>/new java.security.AllPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: java.util.List createStackedValueList(org.jfree.data.category.CategoryDataset,java.lang.Comparable,int[],double,boolean)>/new java.lang.Object[]/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.Outlier::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.Formatter$Flags: java.util.Formatter$Flags parse(char)>/new java.util.UnknownFormatFlagsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.misc.URLClassPath$3: sun.misc.URLClassPath$Loader run()>/new sun.misc.URLClassPath$JarLoader/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.category.StackedBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/1	<<immutable-context>>	<java.util.Arrays$ArrayList: boolean contains(java.lang.Object)>/l1#_0
<<immutable-hcontext>>	<java.util.TreeMap$DescendingKeySpliterator: void forEachRemaining(java.util.function.Consumer)>/new java.util.ConcurrentModificationException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getDeferredInstance(sun.java2d.cmm.ProfileDeferralInfo)>/new java.awt.color.ICC_ProfileRGB/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MemberName resolveOrFail(byte,java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.ResourceBundle$Control: java.util.ResourceBundle newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean)>/new java.util.PropertyResourceBundle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MemberName resolveOrFail(byte,java.lang.Class,java.lang.String,java.lang.Class)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.Double: java.lang.Double valueOf(java.lang.String)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.statistics.SimpleHistogramBin::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.io.ObjectOutputStream$BlockDataOutputStream: void writeUTF(java.lang.String,long)>/new java.io.UTFDataFormatException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.Outlier::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/26	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.Polygon/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<class java.lang.invoke.BoundMethodHandle$Species_L>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.time.Second::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.BoundMethodHandle$Species_L: java.lang.invoke.BoundMethodHandle make(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,java.lang.Object)>/new java.lang.invoke.BoundMethodHandle$Species_L/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYAreaRenderer2: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: java.util.List createStackedValueList(org.jfree.data.category.CategoryDataset,java.lang.Comparable,int[],double,boolean)>/new java.lang.Object[]/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.Character$CharacterCache: void <clinit>()>/new java.lang.Character/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.category.StackedBarRenderer3D::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$8/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/21	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/10	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.security.UnresolvedPermissionCollection: void add(java.security.Permission)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.category.StackedAreaRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.Properties: java.lang.String loadConvert(char[],int,int,char[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.net.SocketInputStream: int read(byte[],int,int,int)>/new java.lang.ArrayIndexOutOfBoundsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.time.TimeSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor$Transform: java.lang.invoke.LambdaFormEditor$Transform withResult(java.lang.invoke.LambdaForm)>/new java.lang.invoke.LambdaFormEditor$Transform/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.xy.VectorDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.provider.PolicyParser$GrantEntry: java.lang.Object clone()>/new sun.security.provider.PolicyParser$GrantEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.Integer: java.lang.Integer valueOf(int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.TimeSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.VectorRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.DeviationRenderer: void drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new double[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.category.BarRenderer3D::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$4/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.security.Security: void initialize()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection)>/new java.security.ProtectionDomain$Key/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/28	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.util.locale.provider.LocaleResources: void <clinit>()>/new java.lang.Object/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.io.PrintWriter: java.nio.charset.Charset toCharset(java.lang.String)>/new java.io.UnsupportedEncodingException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.ResourceBundle: void <clinit>()>/new java.util.ResourceBundle$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.gantt.TaskSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/36	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.ProcessEnvironment$Variable: java.lang.ProcessEnvironment$Variable valueOf(byte[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.ChartRenderingInfo: void clear()>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/23	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/9	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.nio.channels.spi.AbstractInterruptibleChannel: void end(boolean)>/new java.nio.channels.AsynchronousCloseException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range combine(org.jfree.data.Range,org.jfree.data.Range)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.ClusteredXYBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.xy.XIntervalSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.util.SignatureFileVerifier: void updateSigners(java.security.CodeSigner[],java.util.Hashtable,java.lang.String)>/new java.security.CodeSigner[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor$Transform$Kind: void <clinit>()>/new java.lang.invoke.LambdaFormEditor$Transform$Kind/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.statistics.DefaultStatisticalCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.DynamicTimeSeriesCollection: void findDomainLimits()>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<sun.security.x509.AVA: java.lang.Byte getEmbeddedHexPair(int,java.io.Reader)>/new java.lang.Byte/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<sun.awt.SunHints: void <clinit>()>/new sun.awt.SunHints$LCDContrastKey/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.xy.XIntervalDataItem::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.category.CategoryDataset,java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<sun.net.www.ParseUtil: java.net.URL fileToEncodedURL(java.io.File)>/new java.net.URL/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedLambdaForm(java.lang.invoke.MethodType,int)>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.category.LevelRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYAreaRenderer2: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	org.jfree.data.time.Day::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultMultiValueCategoryDataset: void <init>()>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxis(int,int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/20	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.Float: java.lang.Float valueOf(float)>/new java.lang.Float/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>/new java.nio.charset.UnsupportedCharsetException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeIntrinsic(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,java.lang.invoke.MethodHandleImpl$Intrinsic)>/new java.lang.invoke.MethodHandleImpl$IntrinsicMethodHandle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYShapeRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis3D: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: java.lang.invoke.LambdaForm getPreparedForm(java.lang.String)>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.awt.geom.Path2D$Float: void needRoom(boolean,int)>/new java.awt.geom.IllegalPathStateException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.HashSet: void <clinit>()>/new java.lang.Object/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.math.BigInteger: void <clinit>()>/new java.math.BigInteger/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.awt.image.BufferedImage: void <init>(int,int,int)>/new java.awt.image.ComponentColorModel/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/22	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/7	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.text.bidi.BidiBase$TextAttributeConstants: java.text.AttributedCharacterIterator$Attribute getTextAttribute(java.lang.String)>/new sun.text.bidi.BidiBase$TextAttributeConstants$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/1	<<immutable-context>>	<java.util.Vector: boolean contains(java.lang.Object)>/l1#_0
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.VectorRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList$Itr: boolean hasNext()>/$stack1
<<immutable-hcontext>>	<class java.lang.Byte>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$8/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.Vector: int hugeCapacity(int)>/new java.lang.OutOfMemoryError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.jar.Attributes: void read(java.util.jar.Manifest$FastInputStream,byte[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.Formatter$Flags: java.util.Formatter$Flags parse(char)>/new java.util.UnknownFormatFlagsException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: void <init>(sun.java2d.cmm.ProfileDeferralInfo)>/new java.awt.color.ICC_Profile$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.awt.DebugSettings: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.util.logging.PlatformLogger: sun.util.logging.PlatformLogger getLogger(java.lang.String)>/new sun.util.logging.PlatformLogger/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$DomainEntry parseDomainEntry()>/new sun.security.provider.PolicyParser$DomainEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.io.ExpiringCache: void put(java.lang.String,java.lang.String)>/new java.io.ExpiringCache$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.x509.X509CRLImpl: void parse(sun.security.util.DerValue)>/new sun.security.x509.X509CRLImpl$X509IssuerSerial/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.geom.Rectangle2D$Double/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/15	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.locale.provider.LocaleServiceProviderPool: java.util.Locale getLookupLocale(java.util.Locale)>/new java.util.Locale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.security.ProtectionDomain: void <init>(java.security.CodeSource,java.security.PermissionCollection)>/new java.security.ProtectionDomain$Key/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.text.TextUtilities: org.jfree.chart.text.TextBlock createTextBlock(java.lang.String,java.awt.Font,java.awt.Paint,float,int,org.jfree.chart.text.TextMeasurer)>/new org.jfree.chart.text.TextFragment/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer: void drawVerticalItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new org.jfree.chart.renderer.Outlier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: void addGrantEntry(sun.security.provider.PolicyParser$GrantEntry,java.security.KeyStore,sun.security.provider.PolicyFile$PolicyInfo)>/new sun.security.provider.PolicyFile$SelfPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/0	<<immutable-context>>	<java.lang.Integer: void <init>(int)>/@this
<<immutable-hcontext>>	<java.util.EnumMap$ValueIterator: java.lang.Object next()>/new java.util.NoSuchElementException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot3D: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.entity.PieSectionEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.LinkedHashMap: java.util.HashMap$TreeNode newTreeNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)>/new java.util.HashMap$TreeNode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getInstance(java.lang.String)>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.CandlestickRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.x509.GeneralNames: void <init>(sun.security.util.DerValue)>/new sun.security.x509.GeneralName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.util.calendar.LocalGregorianCalendar: sun.util.calendar.LocalGregorianCalendar getLocalGregorianCalendar(java.lang.String)>/new sun.util.calendar.Era/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.geom.Rectangle2D$Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: void addPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[],sun.security.provider.PolicyFile$PolicyEntry)>/new sun.security.provider.PolicyParser$PrincipalEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$17/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.net.URLClassLoader: java.security.PermissionCollection getPermissions(java.security.CodeSource)>/new java.io.FilePermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.xy.DefaultXYZDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#27#_4471
<<immutable-hcontext>>	<org.jfree.chart.renderer.OutlierListCollection: boolean add(org.jfree.chart.renderer.Outlier)>/new org.jfree.chart.renderer.OutlierList/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.Quarter::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.net.SocksSocketImpl: void connect(java.net.SocketAddress,int)>/new java.net.UnknownHostException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.io.File$PathStatus: void <clinit>()>/new java.io.File$PathStatus/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: void drawStackHorizontal(java.util.List,java.lang.Comparable,java.awt.Graphics2D,org.jfree.chart.renderer.category.CategoryItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.CategoryPlot,org.jfree.chart.axis.CategoryAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.category.CategoryDataset)>/new java.lang.Object[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.zip.ZipInputStream: void <init>(java.io.InputStream,java.nio.charset.Charset)>/new java.util.zip.Inflater/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.jca.ProviderList: void <init>()>/new sun.security.jca.ProviderConfig/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.text.DecimalFormat: java.text.FieldPosition[] expandAffix(java.lang.String)>/new java.text.FieldPosition/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>/new org.jfree.chart.block.BlockContainer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/25	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.awt.SunHints: void <clinit>()>/new sun.awt.SunHints$LCDContrastKey/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormEditor: java.lang.invoke.LambdaForm spreadArgumentsForm(int,java.lang.Class,int)>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.text.DecimalFormat: java.lang.String fastFormat(double)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(java.util.List,boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.xy.XYDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	org.jfree.chart.renderer.category.StackedAreaRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.PiePlot: void drawLeftLabels(org.jfree.data.KeyedValues,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,float,org.jfree.chart.plot.PiePlotState)>/new org.jfree.chart.plot.PieLabelRecord/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.misc.Unsafe: void <clinit>()>/new java.lang.String[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$10/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF(int,int,char[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.Arrays: java.util.List asList(java.lang.Object[])>/new java.util.Arrays$ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.data.xy.CategoryTableXYDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/23	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/12	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.security.Provider: void parseLegacyPut(java.lang.String,java.lang.String)>/new java.security.Provider$ServiceKey/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<java.nio.file.spi.FileSystemProvider: java.nio.file.FileSystem newFileSystem(java.nio.file.Path,java.util.Map)>/new java.lang.UnsupportedOperationException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.renderer.category.ScatterRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.category.LineRenderer3D::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<java.net.InetAddress$Cache: java.net.InetAddress$Cache put(java.lang.String,java.net.InetAddress[])>/new java.net.InetAddress$CacheEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.Formatter: java.util.Formatter$FormatString[] parse(java.lang.String)>/new java.util.Formatter$FormatSpecifier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYAreaRenderer2: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<java.util.HashMap: java.util.HashMap$TreeNode replacementTreeNode(java.util.HashMap$Node,java.util.HashMap$Node)>/new java.util.HashMap$TreeNode/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.image.SinglePixelPackedSampleModel: java.awt.image.SampleModel createSubsetSampleModel(int[])>/new java.awt.image.RasterFormatException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.WindItemRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.misc.URLClassPath$3: sun.misc.URLClassPath$Loader run()>/new sun.misc.URLClassPath$Loader/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.String: java.lang.String replace(char,char)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.ref.Finalizer: void <clinit>()>/new java.lang.ref.Finalizer$FinalizerThread/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator(java.text.AttributedCharacterIterator$Attribute[],int,int)>/new java.text.AttributedString$AttributedStringIterator/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.ExtendedCategoryAxis: org.jfree.chart.text.TextBlock createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)>/new org.jfree.chart.text.TextFragment/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.Integer: java.lang.String toUnsignedString0(int,int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$GrantEntry parseGrantEntry()>/new sun.security.provider.PolicyParser$GrantEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.font.Decoration: sun.font.Decoration getDecoration(sun.font.AttributeValues)>/new sun.font.Decoration$DecorationImpl/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.zip.ZipCoder: java.lang.String toString(byte[],int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>/new java.util.TreeMap$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.PeriodAxis: void drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.title.TextTitle: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>/new org.jfree.chart.entity.TitleEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.regex.Pattern$CharPropertyNames: void defCtype(java.lang.String,int)>/new java.util.regex.Pattern$CharPropertyNames$3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/18	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermission[] getMinimum(int,java.security.PermissionCollection)>/new javax.crypto.CryptoPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.xy.MatrixSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.Formatter$FormatSpecifier: java.lang.Appendable print(java.lang.StringBuilder,java.time.temporal.TemporalAccessor,char,java.util.Locale)>/new java.util.IllegalFormatConversionException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.LinkedHashMap: java.util.HashMap$Node newNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)>/new java.util.LinkedHashMap$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)>/new java.security.Permissions/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYLine3DRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToDomainAxis(int,int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/19	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/13	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.Currency$1: java.lang.Void run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.NativeFont: sun.font.FontStrike createStrike(sun.font.FontStrikeDesc)>/new sun.font.NativeStrike/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.time.SpreadsheetDate::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.Locale$Cache: java.util.Locale createObject(java.util.Locale$LocaleKey)>/new java.util.Locale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.JFreeChart: void <init>(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)>/new org.jfree.chart.title.LegendTitle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.CyclicNumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.CyclicNumberAxis$CycleBoundTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.nio.charset.CoderResult: void throwException()>/new java.nio.charset.UnmappableCharacterException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.util.SignatureFileVerifier: java.security.CodeSigner[] getSigners(sun.security.pkcs.SignerInfo[],sun.security.pkcs.PKCS7)>/new java.security.CodeSigner/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getPrintableString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/16	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	java.util.Locale::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.ClassValue: void <init>()>/new java.lang.ClassValue$Identity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.awt.geom.AffineTransform: java.awt.geom.AffineTransform createInverse()>/new java.awt.geom.NoninvertibleTransformException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<org.jfree.chart.plot.DefaultDrawingSupplier: java.awt.Shape[] createStandardSeriesShapes()>/new java.awt.Polygon/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.font.TrueTypeFont: void <init>(java.lang.String,java.lang.Object,int,boolean,boolean)>/new java.awt.FontFormatException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/16	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.misc.URLClassPath$JarLoader: java.net.URL[] parseClassPath(java.net.URL,java.lang.String)>/new java.net.URL/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.axis.LogAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.zip.ZipFile: java.util.zip.Inflater getInflater()>/new java.util.zip.Inflater/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/11	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.awt.SunHints: void <clinit>()>/new sun.awt.SunHints$Key/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.util.ManifestDigester: void <init>(byte[])>/new sun.security.util.ManifestDigester$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.zip.ZipInputStream: int read(byte[],int,int)>/new java.util.zip.ZipException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.title.TextTitle: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>/new org.jfree.chart.entity.TitleEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.text.AttributedString: java.text.AttributedCharacterIterator getIterator(java.text.AttributedCharacterIterator$Attribute[],int,int)>/new java.text.AttributedString$AttributedStringIterator/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYSplineRenderer: void drawPrimaryLineAsPath(org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.Graphics2D,org.jfree.chart.plot.XYPlot,org.jfree.data.xy.XYDataset,int,int,int,boolean,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,java.awt.geom.Rectangle2D)>/new org.jfree.chart.renderer.xy.XYSplineRenderer$ControlPoint/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.DynamicTimeSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultMultiValueCategoryDataset: java.lang.Number getValue(int,int)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createStandardTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.SymbolAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.ClusteredXYBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.ohlc.OHLCSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.x509.GeneralNames: void <init>(sun.security.util.DerValue)>/new sun.security.x509.GeneralName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.x509.GeneralNames: void <init>(sun.security.util.DerValue)>/new sun.security.x509.GeneralName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.nio.charset.CoderResult$1: java.nio.charset.CoderResult create(int)>/new java.nio.charset.CoderResult/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.ssl.TrustManagerFactoryImpl: void engineInit(java.security.KeyStore)>/new java.security.KeyStoreException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/7	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.font.TextLine: java.awt.font.TextLine standardCreateTextLine(java.awt.font.FontRenderContext,java.text.AttributedCharacterIterator,char[],float[])>/new java.awt.font.StyledParagraph/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.CallSite: java.lang.invoke.WrongMethodTypeException wrongTargetType(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>/new java.lang.invoke.WrongMethodTypeException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<<main-thread-group>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.MethodHandleImpl$BindCaller: java.lang.invoke.MethodHandle restoreToType(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.Class)>/new java.lang.invoke.MethodHandleImpl$WrappedMember/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedBarRenderer3D: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<method type ()java.time.temporal.TemporalQuery>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.text.normalizer.RuleCharacterIterator: java.lang.String lookahead()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<com.sun.beans.finder.MethodFinder: java.lang.reflect.Method findInstanceMethod(java.lang.Class,java.lang.String,java.lang.Class[])>/new java.lang.NoSuchMethodException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.JFreeChart: void <init>(java.lang.String,java.awt.Font,org.jfree.chart.plot.Plot,boolean)>/new org.jfree.chart.title.LegendTitle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.axis.LogAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/axis#_0
<<immutable-hcontext>>	<java.nio.DirectCharBufferRU: java.nio.CharBuffer put(char)>/new java.nio.ReadOnlyBufferException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: org.jfree.chart.LegendItem getLegendItem(int,int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: void addGrantEntry(sun.security.provider.PolicyParser$GrantEntry,java.security.KeyStore,sun.security.provider.PolicyFile$PolicyInfo)>/new java.security.UnresolvedPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<class sun.misc.Unsafe>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getUTF8String()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getInstance(byte[])>/new java.awt.color.ICC_ProfileGray/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.text.DecimalFormat: java.lang.String fastFormat(double)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList$Itr: void <init>(java.util.ArrayList)>/$stack2
<<immutable-hcontext>>	<org.jfree.chart.renderer.WaferMapRenderer: org.jfree.chart.LegendItemCollection getLegendCollection()>/new org.jfree.chart.LegendItem/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.misc.FloatingDecimal: void <clinit>()>/new sun.misc.FloatingDecimal$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/8	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.jca.ProviderList: sun.security.jca.ProviderList getJarList(java.lang.String[])>/new sun.security.jca.ProviderConfig/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.xy.DefaultXYZDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getDeferredInstance(sun.java2d.cmm.ProfileDeferralInfo)>/new java.awt.color.ICC_Profile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.x509.CRLExtensions: void init(sun.security.util.DerInputStream)>/new sun.security.x509.Extension/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	org.jfree.chart.renderer.category.MinMaxCategoryRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$12/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.nio.charset.Charset: void <clinit>()>/new java.lang.ThreadLocal/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.awt.image.ColorModel: byte[] getGray16TosRGB8LUT(java.awt.color.ICC_ColorSpace)>/new byte[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$9/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<java.nio.charset.Charset: void checkName(java.lang.String)>/new java.nio.charset.IllegalCharsetNameException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/5	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.util.locale.LocaleUtils: java.lang.String toUpperString(java.lang.String)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYAreaRenderer: void drawItem(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean,int)>/new java.awt.Point/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MemberName resolveOrFail(byte,java.lang.Class,java.lang.String,java.lang.invoke.MethodType)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.PeriodAxis: void drawTickMarksHorizontal(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getBMPString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: java.util.List getDatasetsMappedToRangeAxis(java.lang.Integer)>/axisIndex#_0
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/22	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.awt.DebugSettings: void loadFileProperties()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/15	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.util.DerInputStream: sun.security.util.ObjectIdentifier getOID()>/new sun.security.util.ObjectIdentifier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getInstance(byte[])>/new java.awt.color.ICC_ProfileRGB/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.nio.ch.SimpleAsynchronousFileChannelImpl: java.util.concurrent.Future implLock(long,long,boolean,java.lang.Object,java.nio.channels.CompletionHandler)>/new java.nio.channels.ClosedChannelException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.time.temporal.ChronoField: void <clinit>()>/new java.time.temporal.ChronoField/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateRangeBounds(org.jfree.data.category.CategoryDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: javax.crypto.CryptoPolicyParser$GrantEntry parseGrantEntry(java.util.Hashtable)>/new javax.crypto.CryptoPolicyParser$GrantEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<javax.crypto.CryptoPermissions: javax.crypto.CryptoPermission[] getMinimum(int,java.security.PermissionCollection)>/new javax.crypto.CryptoPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.text.NumberFormat$Field: void <clinit>()>/new java.text.NumberFormat$Field/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<javax.crypto.CryptoPolicyParser: boolean isConsistent(java.lang.String,java.lang.String,java.util.Hashtable)>/new java.util.Vector/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass1(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new org.jfree.chart.entity.XYItemEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.xy.IntervalXYDelegate: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/21	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.misc.ExtensionDependency$1: java.util.jar.Manifest run()>/new java.util.jar.JarFile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/18	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.category.SlidingCategoryDataset::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.misc.MessageUtils: void where()>/new java.lang.Throwable/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToRangeAxis(int,int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.xy.TableXYDataset,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<sun.security.pkcs.PKCS7: void parseOldSignedData(sun.security.util.DerValue)>/new sun.security.x509.X509CertImpl/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.time.DynamicTimeSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack47
<<immutable-hcontext>>	<java.util.Formatter: java.util.Formatter$FormatString[] parse(java.lang.String)>/new java.util.Formatter$FixedString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.System: void initializeSystemClass()>/new java.io.FileOutputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.util.locale.InternalLocaleBuilder: sun.util.locale.InternalLocaleBuilder setLocale(sun.util.locale.BaseLocale,sun.util.locale.LocaleExtensions)>/new sun.util.locale.InternalLocaleBuilder$CaseInsensitiveChar/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.xy.DefaultWindDataset: void <init>(java.util.List,java.lang.Object[][][])>/new java.util.ArrayList/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<jdk.internal.org.objectweb.asm.ClassReader: java.lang.String readUTF(int,int,char[])>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.nio.cs.ThreadLocalCoders$Cache: void <init>(int)>/new java.lang.ThreadLocal/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.StackedAreaRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.lang.Object: void <init>()>/l0#_0
<<immutable-hcontext>>	<java.util.jar.Manifest: java.lang.String parseName(byte[],int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/16	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.WaferMapRenderer: org.jfree.chart.LegendItemCollection getLegendCollection()>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList: java.lang.Object elementData(int)>/@this
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: void mapDatasetToRangeAxis(int,int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.net.URLClassLoader: java.lang.Class defineClass(java.lang.String,sun.misc.Resource)>/new java.security.CodeSource/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getDeferredInstance(sun.java2d.cmm.ProfileDeferralInfo)>/new java.awt.color.ICC_ProfileGray/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.HashMap: java.util.HashMap$Node replacementNode(java.util.HashMap$Node,java.util.HashMap$Node)>/new java.util.HashMap$Node/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.misc.URLClassPath$JarLoader: sun.misc.Resource getResource(java.lang.String,boolean,java.util.Set)>/new sun.misc.InvalidJarIndexException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.LinkedHashMap: java.util.HashMap$Node newNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)>/new java.util.LinkedHashMap$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.ClusteredXYBarRenderer: org.jfree.data.Range findDomainBoundsWithOffset(org.jfree.data.xy.IntervalXYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/23	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: void executeQuery(java.sql.Connection,java.lang.String)>/new java.lang.Long/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.VectorRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<java.util.TreeMap: java.util.TreeMap$Entry buildFromSorted(int,int,int,int,java.util.Iterator,java.io.ObjectInputStream,java.lang.Object)>/new java.util.TreeMap$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/7	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.font.Decoration: void <clinit>()>/new sun.font.Decoration/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.math.BigDecimal$UnsafeHolder: void <clinit>()>/new java.lang.ExceptionInInitializerError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.text.CharacterIteratorFieldDelegate: java.text.AttributedCharacterIterator getIterator(java.lang.String)>/new java.text.AttributedString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.axis.ModuloAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.time.TimePeriodValuesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.net.URI$Parser: void fail(java.lang.String)>/new java.net.URISyntaxException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<<null pseudo heap>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<java.util.PropertyPermission: java.security.PermissionCollection newPermissionCollection()>/new java.util.PropertyPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$7/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/10	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.DefaultPolarItemRenderer: org.jfree.chart.LegendItem getLegendItem(int)>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/27	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.DefaultKeyedValues: void setValue(java.lang.Comparable,java.lang.Number)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.misc.ProxyGenerator$ConstantPool$ValueEntry: void write(java.io.DataOutputStream)>/new java.lang.InternalError/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getGeneralString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.java2d.Disposer: java.lang.Void lambda$static$0()>/new java.lang.Thread/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.reflect.annotation.AnnotationParser: java.lang.annotation.Annotation parseAnnotation2(java.nio.ByteBuffer,sun.reflect.ConstantPool,java.lang.Class,boolean,java.lang.Class[])>/new java.lang.TypeNotPresentException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.data.time.TimePeriodValuesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.nio.charset.CoderResult: void throwException()>/new java.nio.charset.MalformedInputException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.font.FileFont: sun.font.FontStrike createStrike(sun.font.FontStrikeDesc)>/new sun.font.FileFontStrike/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedRangeCategoryPlot: void <init>()>/new org.jfree.chart.axis.NumberAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.ClassValue: void <init>()>/new java.lang.ClassValue$Version/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<sun.font.TrueTypeFont: java.lang.String makeString(byte[],int,short)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.AxisLocation: void <clinit>()>/new org.jfree.chart.axis.AxisLocation/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.Float: java.lang.Float valueOf(float)>/new java.lang.Float/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	java.lang.Character::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.regex.Pattern$CharPropertyNames: void defCategory(java.lang.String,int)>/new java.util.regex.Pattern$CharPropertyNames$1/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToRangeAxes(int,java.util.List)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.chart.axis.SegmentedTimeline$BaseTimelineSegmentRange::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.HashMap: java.util.HashMap$Node newNode(int,java.lang.Object,java.lang.Object,java.util.HashMap$Node)>/new java.util.HashMap$Node/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle$Accessor: java.lang.invoke.MethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.DirectMethodHandle$Accessor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$6/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.gantt.TaskSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/14	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.awt.image.DirectColorModel: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/4	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedDomainCategoryPlot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_3#_4479
<<immutable-hcontext>>	<org.jfree.chart.ChartRenderingInfo: void clear()>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.BoundMethodHandle$Species_L: java.lang.invoke.BoundMethodHandle make(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,java.lang.Object)>/new java.lang.invoke.BoundMethodHandle$Species_L/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_2#_4476
<<immutable-hcontext>>	<java.util.ArrayList: java.util.Iterator iterator()>/new java.util.ArrayList$Itr/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/annotation#14_$$A_3#_4504
<<immutable-hcontext>>	org.jfree.data.xy.XYIntervalSeriesCollection::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.io.File: java.io.File getParentFile()>/new java.io.File/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultStatisticalCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<java.awt.Font: java.awt.Font deriveFont(java.util.Map)>/new java.awt.Font/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: void executeQuery(java.sql.Connection,java.lang.String)>/new java.util.ArrayList/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<class java.lang.invoke.LambdaForm>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedDomainCategoryPlot: void draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.plot.PlotRenderingInfo/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.time.Year::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.String: java.lang.String valueOf(char)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYDotRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.ValueAxis: org.jfree.chart.axis.AxisState drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.jar.JarFile: java.util.jar.Manifest getManifestFromReference()>/new java.util.jar.Manifest/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: java.awt.Paint[] createDefaultPaintArray()>/new java.awt.Color/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/12	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$4/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.font.TrueTypeFont: java.lang.String makeString(byte[],int,short)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.category.StackedBarRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.AbstractXYItemRenderer: void addEntity(org.jfree.chart.entity.EntityCollection,java.awt.Shape,org.jfree.data.xy.XYDataset,int,int,boolean,double,double)>/new org.jfree.chart.entity.XYItemEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/7	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.category.WaterfallBarRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.category.CategoryDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: org.jfree.chart.axis.TickUnitSource createLogTickUnits(java.util.Locale)>/new org.jfree.chart.axis.NumberTickUnit/6	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.cert.Certificate[] getCertificates(java.security.KeyStore,java.lang.String,sun.security.provider.PolicyFile$PolicyInfo)>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.WeakHashMap: void <clinit>()>/new java.lang.Object/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.StackedXYAreaRenderer2: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<sun.security.util.PropertyExpander: java.lang.String expand(java.lang.String,boolean)>/new sun.security.util.PropertyExpander$ExpandException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.nio.channels.spi.AbstractInterruptibleChannel: void end(boolean)>/new java.nio.channels.AsynchronousCloseException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<<string-constant>>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.font.Decoration: sun.font.Decoration getDecoration(sun.font.AttributeValues)>/new sun.font.Decoration$DecorationImpl/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.x509.X500Name: void parseDN(java.lang.String,java.util.Map)>/new sun.security.x509.RDN/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.CyclicNumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.CyclicNumberAxis$CycleBoundTick/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.ValueAxis: org.jfree.chart.axis.AxisState drawTickMarksAndLabels(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	org.jfree.chart.axis.ExtendedCategoryAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: void executeQuery(java.sql.Connection,java.lang.String)>/new java.lang.Long/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.Range: org.jfree.data.Range expandToInclude(org.jfree.data.Range,double)>/new org.jfree.data.Range/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedLambdaForm(java.lang.invoke.MethodType,int)>/new java.lang.invoke.LambdaForm/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<java.security.Provider$Service: void addAttribute(java.lang.String,java.lang.String)>/new java.security.Provider$UString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<class java.lang.invoke.MethodHandleImpl$BindCaller>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyParser$GrantEntry: java.lang.Object clone()>/new sun.security.provider.PolicyParser$GrantEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.java2d.Disposer: java.lang.Void lambda$static$0()>/new java.lang.Thread/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range findStackedRangeBounds(org.jfree.data.xy.TableXYDataset,double)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_5#_4488
<<immutable-hcontext>>	<org.jfree.chart.axis.SymbolAxis: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$6/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyParser$GrantEntry: java.lang.Object clone()>/new sun.security.provider.PolicyParser$GrantEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack45
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.Formatter: java.util.Formatter format(java.util.Locale,java.lang.String,java.lang.Object[])>/new java.util.MissingFormatArgumentException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.Terminator: void setup()>/new sun.misc.Signal/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<javax.crypto.ExemptionMechanism: javax.crypto.ExemptionMechanism getInstance(java.lang.String)>/new javax.crypto.ExemptionMechanism/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	org.jfree.data.time.Minute::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.SpiderWebPlot: org.jfree.chart.LegendItemCollection getLegendItems()>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis: java.util.List refreshTicks(java.awt.Graphics2D,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.CategoryTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.security.CodeSource: java.security.cert.Certificate[] getCertificates()>/new java.security.cert.Certificate[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.misc.ExtensionDependency: java.io.File[] getExtFiles(java.io.File[])>/new java.io.File/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.LambdaFormBuffer: java.lang.invoke.LambdaFormBuffer replaceFunctions(java.lang.invoke.LambdaForm$NamedFunction[],java.lang.invoke.LambdaForm$NamedFunction[],java.lang.Object[])>/new java.lang.invoke.LambdaForm$Name/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/34	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm$NamedFunction: void <init>(java.lang.reflect.Method)>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.LogAxis: java.util.List refreshTicksVertical(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToRangeAxis(int,int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<javax.crypto.JarVerifier: void verify()>/new java.util.jar.JarException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<org.jfree.chart.renderer.WaferMapRenderer: org.jfree.chart.LegendItemCollection getLegendCollection()>/new org.jfree.chart.LegendItem/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.invoke.LambdaForm: void createIdentityForms()>/new java.lang.invoke.MemberName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.font.FontUtilities$1: java.lang.Object run()>/new java.io.FileInputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.SpiderWebPlot: void drawRadarPoly(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Point2D,org.jfree.chart.plot.PlotRenderingInfo,int,int,double,double)>/new org.jfree.chart.entity.CategoryItemEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.security.Signature$Delegate: java.security.SignatureSpi newInstance(java.security.Provider$Service)>/new java.security.NoSuchAlgorithmException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.CategoryAxis3D: org.jfree.chart.axis.AxisState draw(java.awt.Graphics2D,double,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.axis.AxisState/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.awt.SunHints: void <clinit>()>/new sun.awt.SunHints$Key/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<class java.lang.Object>	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.util.locale.provider.TimeZoneNameUtility: java.lang.String[][] loadZoneStrings(java.util.Locale)>/new java.lang.String[][]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.security.SecureClassLoader: java.security.ProtectionDomain getProtectionDomain(java.security.CodeSource)>/new java.security.ProtectionDomain/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.axis.ModuloAxis::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<org.jfree.chart.plot.CombinedRangeXYPlot: void <init>()>/new org.jfree.chart.axis.NumberAxis/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.nio.cs.ThreadLocalCoders$Cache: void <init>(int)>/new java.lang.ThreadLocal/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/23	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.net.SocketPermission: java.security.PermissionCollection newPermissionCollection()>/new java.net.SocketPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$13/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.data.time.Month::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<javax.crypto.Cipher: java.util.List getTransforms(java.lang.String)>/new javax.crypto.Cipher$Transform/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindDomainBounds(org.jfree.data.xy.XYDataset,java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>/new org.jfree.chart.title.LegendGraphic/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.DateTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.Integer: java.lang.String toString(int)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.ConditionalSpecialCasing: void <clinit>()>/new java.util.HashSet/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/17	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/26	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_7#_4501
<<immutable-hcontext>>	<sun.util.CoreResourceBundleControl: void <init>()>/new java.util.Locale/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/0	<<immutable-context>>	<java.util.Vector: int indexOf(java.lang.Object,int)>/l1#_0
<<immutable-hcontext>>	<sun.font.StrikeCache: java.lang.ref.Reference getStrikeRef(sun.font.FontStrike,boolean)>/new sun.font.StrikeCache$WeakDisposerRef/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.io.ObjectOutputStream$BlockDataOutputStream: void writeUTF(java.lang.String,long)>/new java.io.UTFDataFormatException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.concurrent.TimeUnit: void <clinit>()>/new java.util.concurrent.TimeUnit$6/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToDomainAxes(int,java.util.List)>/new java.util.ArrayList/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.net.InetAddress: sun.net.spi.nameservice.NameService createNSProvider(java.lang.String)>/new java.net.InetAddress$2/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: java.util.List refreshTicksHorizontal(java.awt.Graphics2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge)>/new org.jfree.chart.axis.NumberTick/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/18	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.title.TextTitle: java.lang.Object draw(java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.lang.Object)>/new org.jfree.chart.entity.TitleEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultMultiValueCategoryDataset: java.lang.Number getValue(int,int)>/new java.lang.Double/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int,java.lang.Class)>/new java.lang.Object[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.lang.Byte$ByteCache: void <clinit>()>/new java.lang.Byte/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList: java.lang.Object remove(int)>/l0#_0
<<immutable-hcontext>>	<java.nio.charset.CoderResult: void throwException()>/new java.nio.charset.UnmappableCharacterException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: void addPermissions(java.security.Permissions,java.security.CodeSource,java.security.Principal[],sun.security.provider.PolicyFile$PolicyEntry)>/new sun.security.provider.PolicyParser$PrincipalEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.StringBuilder: java.lang.String toString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.font.StandardGlyphVector$GlyphStrike: sun.font.StandardGlyphVector$GlyphStrike create(sun.font.StandardGlyphVector,java.awt.geom.AffineTransform,java.awt.geom.AffineTransform)>/new sun.font.StandardGlyphVector$GlyphStrike/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.jar.Attributes: void read(java.util.jar.Manifest$FastInputStream,byte[])>/new java.lang.String/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.ClassLoader: java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL)>/new java.lang.Package/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<java.util.ArrayList$Itr: void <init>(java.util.ArrayList,java.util.ArrayList$1)>/@parameter0
<<immutable-hcontext>>	<java.net.InetAddress$Cache: java.net.InetAddress$Cache put(java.lang.String,java.net.InetAddress[])>/new java.net.InetAddress$CacheEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.BoundMethodHandle$Species_L: java.lang.invoke.BoundMethodHandle make(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,java.lang.Object)>/new java.lang.invoke.BoundMethodHandle$Species_L/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateToFindRangeBounds(org.jfree.data.xy.XYDataset,java.util.List,org.jfree.data.Range,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<sun.awt.SunHints: void <clinit>()>/new sun.awt.SunHints$LCDContrastKey/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<sun.security.x509.GeneralNames: void <init>(sun.security.util.DerValue)>/new sun.security.x509.GeneralName/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.Character: java.lang.Character valueOf(char)>/new java.lang.Character/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.security.Permissions: java.security.PermissionCollection getUnresolvedPermissions(java.security.Permission)>/new java.security.PermissionsHash/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(byte,java.lang.Class,java.lang.invoke.MemberName)>/new java.lang.invoke.DirectMethodHandle$Accessor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.SamplingXYLineRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/r#_4473
<<immutable-hcontext>>	org.jfree.chart.renderer.category.StackedBarRenderer3D::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.font.TrueTypeFont: void <init>(java.lang.String,java.lang.Object,int,boolean,boolean)>/new java.awt.FontFormatException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<com.sun.beans.finder.MethodFinder: java.lang.reflect.Method findInstanceMethod(java.lang.Class,java.lang.String,java.lang.Class[])>/new java.lang.NoSuchMethodException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$11/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.util.locale.LanguageTag: void <clinit>()>/new java.lang.String[]/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.plot.CategoryPlot: void mapDatasetToDomainAxis(int,int)>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<java.text.NumberFormat$Field: void <clinit>()>/new java.text.NumberFormat$Field/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.MeterPlot: org.jfree.chart.LegendItemCollection getLegendItems()>/new org.jfree.chart.LegendItem/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.MethodType: java.lang.invoke.MethodType makeImpl(java.lang.Class,java.lang.Class[],boolean)>/new java.lang.invoke.MethodType/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$5/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>/new java.nio.charset.UnsupportedCharsetException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.awt.geom.Order3: sun.awt.geom.Curve getReversedCurve()>/new sun.awt.geom.Order3/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.VectorRenderer: org.jfree.data.Range findDomainBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<org.jfree.data.time.DynamicTimeSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_10#_4512
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/1	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack15
<<immutable-hcontext>>	<java.util.PropertyPermissionCollection: void add(java.security.Permission)>/new java.util.PropertyPermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.data.statistics.DefaultMultiValueCategoryDataset: void <init>()>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<org.jfree.chart.ChartColor: void <clinit>()>/new java.awt.Color/11	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/22	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.util.DerInputStream: sun.security.util.DerValue[] readVector(int)>/new sun.security.util.DerValue/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<javax.crypto.JceSecurity: void <clinit>()>/new java.net.URL/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYBlockRenderer: org.jfree.data.Range findRangeBounds(org.jfree.data.xy.XYDataset)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_11#_4513
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getPrintableString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.title.LegendTitle: org.jfree.chart.block.Block createLegendItemBlock(org.jfree.chart.LegendItem)>/new org.jfree.chart.block.LabelBlock/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle: java.lang.invoke.MethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.DirectMethodHandle/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.renderer.xy.XYDifferenceRenderer: void drawItemPass0(java.awt.Graphics2D,org.jfree.chart.renderer.xy.XYItemRendererState,java.awt.geom.Rectangle2D,org.jfree.chart.plot.XYPlot,org.jfree.chart.axis.ValueAxis,org.jfree.chart.axis.ValueAxis,org.jfree.data.xy.XYDataset,int,int,boolean)>/new java.lang.Double/13	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.util.ArrayList/0	<<immutable-context>>	<java.util.ArrayList: int access$100(java.util.ArrayList)>/l0#_0
<<immutable-hcontext>>	<org.jfree.chart.axis.Axis: void createAndAddEntity(double,org.jfree.chart.axis.AxisState,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.entity.AxisEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<org.jfree.chart.axis.DateAxis: org.jfree.chart.axis.TickUnitSource createStandardDateTickUnits(java.util.TimeZone,java.util.Locale)>/new org.jfree.chart.axis.DateTickUnit/15	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.data.time.TimeSeriesCollection: org.jfree.data.Range getDomainBounds(java.util.List,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack41
<<immutable-hcontext>>	<org.jfree.data.time.TimePeriodValuesCollection: org.jfree.data.Range getDomainBounds(boolean)>/new org.jfree.data.Range/3	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_6#_4489
<<immutable-hcontext>>	<org.jfree.data.xy.XYSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_9#_4509
<<immutable-hcontext>>	<org.jfree.data.general.DatasetUtilities: org.jfree.data.Range iterateDomainBounds(org.jfree.data.xy.XYDataset,boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_4#_4485
<<immutable-hcontext>>	<java.lang.String: java.lang.String replace(char,char)>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/new java.lang.Integer/0	<<immutable-context>>	<java.lang.Integer: boolean equals(java.lang.Object)>/l0#_0
<<immutable-hcontext>>	<org.jfree.data.jdbc.JDBCXYDataset: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_1#_4470
<<immutable-hcontext>>	<org.jfree.chart.ChartUtilities: void saveChartAsPNG(java.io.File,org.jfree.chart.JFreeChart,int,int,org.jfree.chart.ChartRenderingInfo)>/new java.io.FileOutputStream/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.ExtendedCategoryAxis: org.jfree.chart.text.TextBlock createLabel(java.lang.Comparable,float,org.jfree.chart.util.RectangleEdge,java.awt.Graphics2D)>/new org.jfree.chart.text.TextFragment/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<sun.security.ssl.InputRecord: void read(java.io.InputStream,java.io.OutputStream)>/new java.io.EOFException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.category.LevelRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.data.time.DynamicTimeSeriesCollection: org.jfree.data.Range getRangeBounds(boolean)>/new org.jfree.data.Range/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/result_$$A_8#_4505
<<immutable-hcontext>>	<org.jfree.chart.axis.Axis: org.jfree.chart.axis.AxisState drawLabel(java.lang.String,java.awt.Graphics2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.jfree.chart.util.RectangleEdge,org.jfree.chart.axis.AxisState,org.jfree.chart.plot.PlotRenderingInfo)>/new org.jfree.chart.entity.AxisLabelEntity/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.lang.invoke.DirectMethodHandle$StaticAccessor: java.lang.invoke.MethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>/new java.lang.invoke.DirectMethodHandle$StaticAccessor/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.util.DerValue: sun.security.util.ObjectIdentifier getOID()>/new sun.security.util.ObjectIdentifier/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.awt.color.ICC_Profile: java.awt.color.ICC_Profile getInstance(byte[])>/new java.awt.color.ICC_Profile/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<javax.crypto.JceSecurity: void <clinit>()>/new java.net.URL/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<org.jfree.chart.axis.NumberAxis: org.jfree.chart.axis.TickUnitSource createIntegerTickUnits()>/new org.jfree.chart.axis.NumberTickUnit/6	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.CyclicXYItemRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	<sun.security.util.ManifestDigester: void <init>(byte[])>/new sun.security.util.ManifestDigester$Entry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<sun.security.provider.PolicyFile: java.security.Permission getKnownInstance(java.lang.Class,java.lang.String,java.lang.String)>/new java.io.FilePermission/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.java2d.Disposer: void addObjectRecord(java.lang.Object,sun.java2d.DisposerRecord)>/new java.lang.ref.WeakReference/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.renderer.WaferMapRenderer: void makePaintIndex()>/new java.lang.Integer/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.awt.geom.Path2D$Float: void needRoom(boolean,int)>/new java.awt.geom.IllegalPathStateException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.Provider$Service: void addAttribute(java.lang.String,java.lang.String)>/new java.security.Provider$UString/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack69
<<immutable-hcontext>>	<sun.security.provider.PolicyParser: sun.security.provider.PolicyParser$GrantEntry parseGrantEntry()>/new sun.security.provider.PolicyParser$PrincipalEntry/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.XYErrorRenderer::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack22
<<immutable-hcontext>>	org.jfree.chart.renderer.xy.StackedXYAreaRenderer2::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.security.UnresolvedPermission: java.security.PermissionCollection newPermissionCollection()>/new java.security.UnresolvedPermissionCollection/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<java.awt.image.BufferedImage: void <init>(int,int,int)>/new java.awt.image.IndexColorModel/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.lang.invoke.MethodType: java.lang.invoke.MethodType makeImpl(java.lang.Class,java.lang.Class[],boolean)>/new java.lang.invoke.MethodType/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<java.util.EnumMap$ValueIterator: java.lang.Object next()>/new java.util.NoSuchElementException/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
<<immutable-hcontext>>	<java.util.regex.UnicodeProp: void <clinit>()>/new java.util.regex.UnicodeProp$19/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	org.jfree.data.time.Minute::MockObject	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack29
<<immutable-hcontext>>	<sun.security.util.DerValue: java.lang.String getGeneralString()>/new java.lang.String/0	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack37
<<immutable-hcontext>>	<org.jfree.chart.axis.AxisLocation: void <clinit>()>/new org.jfree.chart.axis.AxisLocation/2	<<immutable-context>>	<org.jfree.chart.plot.XYPlot: org.jfree.data.Range getDataRange(org.jfree.chart.axis.ValueAxis)>/$stack56
