.decl VarPointsTo(v0:symbol, v1:symbol, v2:symbol, v3:symbol)
.decl CallGraphEdge(v0:symbol, v1:symbol, v2:symbol, v3:symbol)
.decl Reachable(v0:symbol)
.decl If_Var(v0:symbol, v1:symbol, v2:symbol)
.decl If_Constant(v0:symbol, v1:symbol, v2:symbol)
.decl OperatorAt(v0:symbol, v1:symbol)
.decl SpecialMethodInvocation(v0:symbol, v1:number, v2:symbol, v3:symbol, v4:symbol)
.decl StaticMethodInvocation(v0:symbol, v1:number, v2:symbol, v3:symbol)
.decl VirtualMethodInvocation(v0:symbol, v1:number, v2:symbol, v3:symbol, v4:symbol)
.decl SuperMethodInvocation(v0:symbol, v1:number, v2:symbol, v3:symbol, v4:symbol)
.decl MethodInvocation_Line(v0:symbol, v1:number)
.decl LoadArrayIndex(v0:symbol, v1:number, v2:symbol, v3:symbol, v4:symbol)
.decl StoreArrayIndex(v0:symbol, v1:number, v2:symbol, v3:symbol, v4:symbol)
.decl StoreInstanceField(v0:symbol, v1:number, v2:symbol, v3:symbol, v4:symbol, v5:symbol)
.decl LoadInstanceField(v0:symbol, v1:number, v2:symbol, v3:symbol, v4:symbol, v5:symbol)
.decl ThrowNull(v0:symbol, v1:number, v2:symbol)
.decl LoadStaticField(v0:symbol, v1:number, v2:symbol, v3:symbol, v4:symbol)
.decl StoreStaticField(v0:symbol, v1:number, v2:symbol, v3:symbol, v4:symbol)
.decl AssignCastNull(v0:symbol, v1:number, v2:symbol, v3:symbol, v4:symbol)
.decl AssignUnop(v0:symbol, v1:number, v2:symbol, v3:symbol)
.decl AssignBinop(v0:symbol, v1:number, v2:symbol, v3:symbol)
.decl AssignOperFrom(v0:symbol, v1:number, v2:symbol)
.decl Var_Type(v0:symbol, v1:symbol)
.decl EnterMonitor(v0:symbol, v1:number, v2:symbol, v3:symbol)
.decl ExitMonitor(v0:symbol, v1:number, v2:symbol, v3:symbol)
.decl ApplicationClass(v0:symbol)
.decl Method(v0:symbol, v1:symbol, v2:symbol, v3:symbol, v4:symbol, v5:symbol, v6:number)
.decl VarPointsToNull(v0:symbol, v1:symbol)
.decl NullAt(v0:symbol, v1:number, v2:symbol, v3:symbol)
.decl ReachableNullAt(v0:symbol, v1:number, v2:symbol, v3:symbol)
.decl ReachableNullAtLine(v0:symbol, v1:number, v2:number, v3:symbol, v4:symbol)
.decl InstructionLine(v0:symbol, v1:number, v2:number)
.decl MethodInvocation_Method(v0:symbol, v1:symbol, v2:number)
.decl GuardCheck(v0:symbol, v1:symbol, v2:symbol, v3:symbol)
.decl ApplicationMethod(v0:symbol)
.decl ApplicationMethodNullAt(v0:symbol, v1:number, v2:symbol, v3:number)
.decl JumpTarget(v0:symbol, v1:symbol)
.decl BasicBlockHead(v0:symbol, v1:symbol)
.decl Dominates(v0:symbol, v1:symbol)
.decl Instruction_Next(v0:symbol, v1:symbol)
.decl Instruction_Method(v0:symbol, v1:symbol)
.decl Instruction_Index(v0:symbol, v1:number)
.decl InstructionInPhiNode(v0:symbol, v1:symbol)
.decl AssignLocal(v0:symbol, v1:number, v2:symbol, v3:symbol, v4:symbol)
.decl NextInSameBasicBlock(v0:symbol, v1:symbol)
.decl MustNonNullBeginAt(v0:number, v1:symbol, v2:symbol, v3:symbol)
.decl MustNonNullAt(v0:number, v1:symbol, v2:symbol, v3:symbol)
.decl BasicBlockNonNullBegin(v0:symbol, v1:symbol, v2:symbol)
.decl CheckedNonNullAt(v0:symbol, v1:symbol, v2:symbol)
.decl PhiAssignToMaybeNull(v0:symbol, v1:symbol, v2:symbol)
.decl isReferenceType(v0:symbol)
.decl ClassType(v0:symbol)
.decl ArrayType(v0:symbol)
.decl ReturnVoid(v0:symbol, v1:number, v2:symbol)
.decl Return(v0:symbol, v1:number, v2:symbol, v3:symbol)
.decl ReturnInBasicBlock(v0:symbol)
.decl DefaultReturn(v0:symbol, v1:symbol)
.decl DefaultValOfType(v0:symbol, v1:symbol)
.decl NewClass(v0:symbol)
.decl NewArray(v0:symbol)
.decl neg_LoadArrayIndex(v0:symbol, v1:number, v2:symbol, v3:symbol, v4:symbol)
.decl neg_StoreArrayIndex(v0:symbol, v1:number, v2:symbol, v3:symbol, v4:symbol)
.decl neg_MustNonNullAt(v0:number, v1:symbol, v2:symbol, v3:symbol)
.input Instruction_Method
.input Reachable
.input If_Constant
.input Return
.input OperatorAt
.input MethodInvocation_Line
.input CallGraphEdge
.input AssignOperFrom
.input LoadArrayIndex
.input SpecialMethodInvocation
.input StoreInstanceField
.input ArrayType
.input If_Var
.input ApplicationClass
.input StoreArrayIndex
.input VirtualMethodInvocation
.input StaticMethodInvocation
.input Method
.input SuperMethodInvocation
.input ThrowNull
.input AssignBinop
.input VarPointsTo
.input LoadInstanceField
.input Dominates
.input EnterMonitor
.input JumpTarget
.input Instruction_Index
.input BasicBlockHead
.input isReferenceType
.input ReturnVoid
.input Instruction_Next
.input NextInSameBasicBlock
.input AssignCastNull
.input AssignUnop
.input ClassType
.output Instruction_Method
.output Reachable
.output If_Constant
.output OperatorAt
.output Return
.output MethodInvocation_Line
.output CallGraphEdge
.output AssignOperFrom
.output LoadArrayIndex
.output SpecialMethodInvocation
.output StoreInstanceField
.output ArrayType
.output If_Var
.output ApplicationClass
.output neg_MustNonNullAt
.output StoreArrayIndex
.output neg_StoreArrayIndex
.output VirtualMethodInvocation
.output StaticMethodInvocation
.output neg_LoadArrayIndex
.output Method
.output SuperMethodInvocation
.output ThrowNull
.output AssignBinop
.output VarPointsTo
.output LoadInstanceField
.output Dominates
.output EnterMonitor
.output JumpTarget
.output Instruction_Index
.output BasicBlockHead
.output isReferenceType
.output ReturnVoid
.output Instruction_Next
.output NextInSameBasicBlock
.output AssignCastNull
.output AssignUnop
.output ClassType
VarPointsToNull(var, "<<null pseudo heap>>") :- VarPointsTo(_, alloc, _, var), alloc = "<<null pseudo heap>>".
VarPointsToNull(var, "AssignCastNull") :- AssignCastNull(_, _, var, _, _).
NullAt(meth, index, base, "Throw NullPointerException") :- CallGraphEdge(_, a, _, b), contains("java.lang.NullPointerException", a), SpecialMethodInvocation(a, index, b, base, meth).
NullAt(meth, index, var, "Load Array Index") :- VarPointsToNull(var, _), !MustNonNullAt(index, ins, var, meth), LoadArrayIndex(ins, index, _, var, meth).
NullAt(meth, index, var, "Store Array Index") :- VarPointsToNull(var, _), !MustNonNullAt(index, ins, var, meth), StoreArrayIndex(ins, index, _, var, meth).
NullAt(meth, index, var, "Store Instance Field") :- VarPointsToNull(var, _), StoreInstanceField(ins, index, _, var, _, meth), !MustNonNullAt(index, ins, var, meth), !StoreArrayIndex(_, _, _, var, meth).
NullAt(meth, index, var, "Load Instance Field") :- VarPointsToNull(var, _), LoadInstanceField(ins, index, _, var, _, meth), !MustNonNullAt(index, ins, var, meth), !LoadArrayIndex(_, _, _, var, meth).
NullAt(meth, index, var, "Virtual Method Invocation") :- VarPointsToNull(var, _), !MustNonNullAt(index, ins, var, meth), VirtualMethodInvocation(ins, index, _, var, meth).
NullAt(meth, index, var, "Special Method Invocation") :- VarPointsToNull(var, _), !MustNonNullAt(index, ins, var, meth), SpecialMethodInvocation(ins, index, _, var, meth).
NullAt(meth, index, var, "Unary Operator") :- VarPointsToNull(var, _), !MustNonNullAt(index, ins, var, meth), AssignUnop(ins, index, _, meth), AssignOperFrom(ins, _, var).
NullAt(meth, index, var, "Binary Operator") :- VarPointsToNull(var, _), !MustNonNullAt(index, ins, var, meth), AssignBinop(ins, index, _, meth), AssignOperFrom(ins, _, var).
NullAt(meth, index, "throw null", "Throw Null") :- ThrowNull(_, index, meth).
NullAt(meth, index, var, "Enter Monitor (Synchronized)") :- VarPointsToNull(var, _), !MustNonNullAt(index, ins, var, meth), EnterMonitor(ins, index, var, meth).
MethodInvocation_Method(instruction, method, index) :- StaticMethodInvocation(instruction, index, signature, method).
MethodInvocation_Method(instruction, method, index) :- SpecialMethodInvocation(instruction, index, signature, _, method).
MethodInvocation_Method(instruction, method, index) :- VirtualMethodInvocation(instruction, index, signature, _, method).
MethodInvocation_Method(instruction, method, index) :- SuperMethodInvocation(instruction, index, signature, base, method).
InstructionLine(method, index, line) :- MethodInvocation_Line(instruction, line), MethodInvocation_Method(instruction, method, index).
ApplicationMethod(method) :- Method(method, _, _, class, _, _, _), ApplicationClass(class).
ReachableNullAt(meth, index, var, type) :- NullAt(meth, index, var, type), Reachable(meth), ApplicationMethod(meth).
ReachableNullAtLine(meth, index, line, var, type) :- ReachableNullAt(meth, index, var, type), InstructionLine(meth, index, line).
DefaultReturn(retInsn, "void") :- ReturnVoid(retInsn, _, _).
DefaultReturn(retInsn, defaultVal) :- Return(retInsn, _, _, method), Method(method, _, _, declaringType, _, _, _), DefaultValOfType(declaringType, defaultVal).
DefaultValOfType(type, "null") :- isReferenceType(type).
DefaultValOfType(type, "new") :- NewClass(type).
DefaultValOfType(type, "new") :- NewArray(type).
NewArray(type) :- ArrayType(type).
NewClass(type) :- ClassType(type).
ReturnInBasicBlock(headInsn) :- DefaultReturn(retInsn, defaultVal), BasicBlockHead(retInsn, headInsn).
BasicBlockNonNullBegin(next_insn, var, method) :- OperatorAt(insn, "=="), If_Var(insn, _, var), If_Constant(insn, _, "null"), JumpTarget(target_insn, insn), ReturnInBasicBlock(target_insn), Instruction_Next(insn, next_insn), Instruction_Method(next_insn, method).
BasicBlockNonNullBegin(target_insn, var, method) :- OperatorAt(insn, "!="), If_Var(insn, _, var), If_Constant(insn, _, "null"), JumpTarget(target_insn, insn), Instruction_Method(target_insn, method).
MustNonNullBeginAt(index, beginInsn, var, method) :- BasicBlockNonNullBegin(dominator, var, method), Dominates(dominator, beginInsn), Instruction_Index(beginInsn, index).
MustNonNullAt(index, insn, var, method) :- MustNonNullBeginAt(index, beginInsn, var, method), BasicBlockHead(insn, beginInsn).
MustNonNullAt(index, next_insn, var, method) :- MustNonNullAt(_, insn, var, method), NextInSameBasicBlock(insn, next_insn), Instruction_Index(next_insn, index).
neg_MustNonNullAt(index, ins, var, meth) :- VarPointsToNull(var, _), !MustNonNullAt(index, ins, var, meth), LoadArrayIndex(ins, index, _, var, meth).
neg_MustNonNullAt(index, ins, var, meth) :- VarPointsToNull(var, _), !MustNonNullAt(index, ins, var, meth), StoreArrayIndex(ins, index, _, var, meth).
neg_MustNonNullAt(index, ins, var, meth) :- VarPointsToNull(var, _), StoreInstanceField(ins, index, _, var, _, meth), !MustNonNullAt(index, ins, var, meth), !StoreArrayIndex(_, _, _, var, meth).
neg_MustNonNullAt(index, ins, var, meth) :- VarPointsToNull(var, _), LoadInstanceField(ins, index, _, var, _, meth), !MustNonNullAt(index, ins, var, meth), !LoadArrayIndex(_, _, _, var, meth).
neg_MustNonNullAt(index, ins, var, meth) :- VarPointsToNull(var, _), !MustNonNullAt(index, ins, var, meth), VirtualMethodInvocation(ins, index, _, var, meth).
neg_MustNonNullAt(index, ins, var, meth) :- VarPointsToNull(var, _), !MustNonNullAt(index, ins, var, meth), SpecialMethodInvocation(ins, index, _, var, meth).
neg_MustNonNullAt(index, ins, var, meth) :- VarPointsToNull(var, _), !MustNonNullAt(index, ins, var, meth), AssignUnop(ins, index, _, meth), AssignOperFrom(ins, _, var).
neg_MustNonNullAt(index, ins, var, meth) :- VarPointsToNull(var, _), !MustNonNullAt(index, ins, var, meth), AssignBinop(ins, index, _, meth), AssignOperFrom(ins, _, var).
neg_MustNonNullAt(index, ins, var, meth) :- VarPointsToNull(var, _), !MustNonNullAt(index, ins, var, meth), EnterMonitor(ins, index, var, meth).
