.decl read( i : symbol, x : symbol )
.decl write( w : symbol, x : symbol )
.decl succ( a : symbol, b : symbol )

read("r1","v1").
read("r2","v1").
read("r3","v2").
write("w1","v1").
write("w2","v2").
write("w3","v2").

succ("w1","o1").
succ("o1","r1").
succ("o1","r2").
succ("r2","r3").
succ("r3","w2").


.decl flow( a : symbol, b : symbol )
flow(X,Y) :- succ(X,Y).
flow(X,Z) :- flow(X,Y), flow(Y,Z).

.decl defUse( w : symbol , r : symbol )
.output defUse
defUse(W,R) :- write(W,X), flow(W,R), read(R,X).